android.accessibilityservice.AccessibilityService$IEventListenerWrapper.<init>(android.accessibilityservice.AccessibilityService,android.accessibilityservice.AccessibilityService)
android.accessibilityservice.AccessibilityService$IEventListenerWrapper.executeMessage(android.os.Message)
android.accessibilityservice.AccessibilityService$IEventListenerWrapper.onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.accessibilityservice.AccessibilityService$IEventListenerWrapper.onInterrupt()
android.accessibilityservice.AccessibilityService$IEventListenerWrapper.setConnection(android.accessibilityservice.IAccessibilityServiceConnection)
android.accessibilityservice.AccessibilityService.<init>()
android.accessibilityservice.AccessibilityService.onBind(android.content.Intent)
android.accessibilityservice.AccessibilityService.onServiceConnected()
android.accessibilityservice.AccessibilityService.sendServiceInfo()
android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
android.accounts.Account.hashCode()
android.accounts.AccountAuthenticatorActivity.onCreate(android.os.Bundle)
android.accounts.AccountAuthenticatorResponse.onError(int,java.lang.String)
android.accounts.AccountAuthenticatorResponse.onRequestContinued()
android.accounts.AccountAuthenticatorResponse.onResult(android.os.Bundle)
android.accounts.AccountAuthenticatorResponse.writeToParcel(android.os.Parcel,int)
android.accounts.AccountManager$AmsTask$Response.onError(int,java.lang.String)
android.accounts.AccountManager$AmsTask$Response.onResult(android.os.Bundle)
android.accounts.AccountManager$BaseFutureTask$Response.onError(int,java.lang.String)
android.accounts.AccountManager$BaseFutureTask$Response.onResult(android.os.Bundle)
android.accounts.AccountManager$BaseFutureTask.<init>(android.accounts.AccountManager,android.os.Handler)
android.accounts.AccountManager$BaseFutureTask.postRunnableToHandler(java.lang.Runnable)
android.accounts.AccountManager$BaseFutureTask.startTask()
android.accounts.AccountManager$Future2Task.<init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)
android.accounts.AccountManager$Future2Task.done()
android.accounts.AccountManager$Future2Task.getResult()
android.accounts.AccountManager$Future2Task.getResult(long,java.util.concurrent.TimeUnit)
android.accounts.AccountManager$Future2Task.internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)
android.accounts.AccountManager$Future2Task.start()
android.accounts.AccountManager.ensureNotOnMainThread()
android.accounts.AuthenticatorDescription.hashCode()
android.app.Activity.attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object,android.content.res.Configuration)
android.app.Activity.attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object,java.util.HashMap,android.content.res.Configuration)
android.app.ActivityGroup.onCreate(android.os.Bundle)
android.app.ActivityGroup.onSaveInstanceState(android.os.Bundle)
android.app.ActivityManager$RunningTaskInfo.readFromParcel(android.os.Parcel)
android.app.ActivityManager.clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)
android.app.AlertDialog$Builder.setItems(int,android.content.DialogInterface$OnClickListener)
android.app.AlertDialog$Builder.setMessage(int)
android.app.AlertDialog$Builder.setMultiChoiceItems(int,[Z,android.content.DialogInterface$OnMultiChoiceClickListener)
android.app.AlertDialog$Builder.setNegativeButton(int,android.content.DialogInterface$OnClickListener)
android.app.AlertDialog$Builder.setNeutralButton(int,android.content.DialogInterface$OnClickListener)
android.app.AlertDialog$Builder.setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
android.app.AlertDialog$Builder.setOnKeyListener(android.content.DialogInterface$OnKeyListener)
android.app.AlertDialog$Builder.setPositiveButton(int,android.content.DialogInterface$OnClickListener)
android.app.AlertDialog$Builder.setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
android.app.AlertDialog$Builder.setTitle(int)
android.app.AliasActivity.onCreate(android.os.Bundle)
android.app.AliasActivity.parseAlias(org.xmlpull.v1.XmlPullParser)
android.app.DatePickerDialog.<init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
android.app.DatePickerDialog.<init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
android.app.DatePickerDialog.onRestoreInstanceState(android.os.Bundle)
android.app.DatePickerDialog.show()
android.app.DatePickerDialog.updateDate(int,int,int)
android.app.DatePickerDialog.updateTitle(int,int,int)
android.app.Dialog$ListenersHandler.<init>(android.app.Dialog)
android.app.Dialog$ListenersHandler.handleMessage(android.os.Message)
android.app.ExpandableListActivity.ensureList()
android.app.ExpandableListActivity.getExpandableListView()
android.app.ExpandableListActivity.getSelectedId()
android.app.ExpandableListActivity.getSelectedPosition()
android.app.ExpandableListActivity.onContentChanged()
android.app.ExpandableListActivity.onRestoreInstanceState(android.os.Bundle)
android.app.ExpandableListActivity.setListAdapter(android.widget.ExpandableListAdapter)
android.app.ExpandableListActivity.setSelectedChild(int,int,boolean)
android.app.ExpandableListActivity.setSelectedGroup(int)
android.app.Instrumentation$ActivityGoing.<init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter)
android.app.Instrumentation$ActivityGoing.queueIdle()
android.app.Instrumentation$ActivityMonitor.<init>(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)
android.app.Instrumentation$ActivityMonitor.match(android.content.Context,android.app.Activity,android.content.Intent)
android.app.Instrumentation$ActivityMonitor.waitForActivity()
android.app.Instrumentation$ActivityWaiter.<init>(android.content.Intent)
android.app.Instrumentation$EmptyRunnable.run()
android.app.Instrumentation$Idler.<init>(java.lang.Runnable)
android.app.Instrumentation$Idler.queueIdle()
android.app.Instrumentation$Idler.waitForIdle()
android.app.Instrumentation$InstrumentationThread.<init>(android.app.Instrumentation,java.lang.String)
android.app.Instrumentation$InstrumentationThread.run()
android.app.Instrumentation$SyncRunnable.<init>(java.lang.Runnable)
android.app.Instrumentation$SyncRunnable.run()
android.app.Instrumentation$SyncRunnable.waitForComplete()
android.app.Instrumentation.execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int)
android.app.IntentService$ServiceHandler.<init>(android.app.IntentService,android.os.Looper)
android.app.IntentService$ServiceHandler.handleMessage(android.os.Message)
android.app.IntentService.<init>(java.lang.String)
android.app.IntentService.onBind(android.content.Intent)
android.app.IntentService.onCreate()
android.app.IntentService.onDestroy()
android.app.IntentService.onStart(android.content.Intent,int)
android.app.IntentService.onStartCommand(android.content.Intent,int,int)
android.app.IntentService.setIntentRedelivery(boolean)
android.app.LauncherActivity$ActivityAdapter$ArrayFilter.performFiltering(java.lang.CharSequence)
android.app.LauncherActivity$ActivityAdapter$ArrayFilter.publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
android.app.LauncherActivity$ActivityAdapter.<init>(android.app.LauncherActivity,android.app.LauncherActivity$IconResizer)
android.app.LauncherActivity$ActivityAdapter.bindView(android.view.View,android.app.LauncherActivity$ListItem)
android.app.LauncherActivity$ActivityAdapter.getCount()
android.app.LauncherActivity$ActivityAdapter.getFilter()
android.app.LauncherActivity$ActivityAdapter.getItem(int)
android.app.LauncherActivity$ActivityAdapter.getItemId(int)
android.app.LauncherActivity$ActivityAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.app.LauncherActivity$ActivityAdapter.intentForPosition(int)
android.app.LauncherActivity$ActivityAdapter.itemForPosition(int)
android.app.LauncherActivity$IconResizer.<init>(android.app.LauncherActivity)
android.app.LauncherActivity$IconResizer.createIconThumbnail(android.graphics.drawable.Drawable)
android.app.LauncherActivity$ListItem.<init>()
android.app.LauncherActivity.<init>()
android.app.LauncherActivity.getTargetIntent()
android.app.LauncherActivity.intentForPosition(int)
android.app.LauncherActivity.itemForPosition(int)
android.app.LauncherActivity.makeListItems()
android.app.LauncherActivity.onCreate(android.os.Bundle)
android.app.LauncherActivity.onListItemClick(android.widget.ListView,android.view.View,int,long)
android.app.LauncherActivity.onQueryPackageManager(android.content.Intent)
android.app.LauncherActivity.onSetContentView()
android.app.ListActivity.ensureList()
android.app.ListActivity.getListView()
android.app.ListActivity.getSelectedItemId()
android.app.ListActivity.getSelectedItemPosition()
android.app.ListActivity.onContentChanged()
android.app.ListActivity.onListItemClick(android.widget.ListView,android.view.View,int,long)
android.app.ListActivity.onRestoreInstanceState(android.os.Bundle)
android.app.ListActivity.setListAdapter(android.widget.ListAdapter)
android.app.ListActivity.setSelection(int)
android.app.LocalActivityManager.moveToState(android.app.LocalActivityManager$LocalActivityRecord,int)
android.app.LocalActivityManager.performDestroy(android.app.LocalActivityManager$LocalActivityRecord,boolean)
android.app.LocalActivityManager.performPause(android.app.LocalActivityManager$LocalActivityRecord,boolean)
android.app.LocalActivityManager.startActivity(java.lang.String,android.content.Intent)
android.app.PendingIntent$FinishedDispatcher.performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)
android.app.PendingIntent$FinishedDispatcher.run()
android.app.PendingIntent.hashCode()
android.app.PendingIntent.send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)
android.app.PendingIntent.send(int,android.app.PendingIntent$OnFinished,android.os.Handler)
android.app.ProgressDialog.onProgressChanged()
android.app.SearchableInfo$ActionKeyInfo.describeContents()
android.app.SearchableInfo$ActionKeyInfo.getKeyCode()
android.app.SearchableInfo$ActionKeyInfo.getQueryActionMsg()
android.app.SearchableInfo$ActionKeyInfo.getSuggestActionMsg()
android.app.SearchableInfo$ActionKeyInfo.getSuggestActionMsgColumn()
android.app.SearchableInfo$ActionKeyInfo.writeToParcel(android.os.Parcel,int)
android.app.SearchableInfo.addActionKey(android.app.SearchableInfo$ActionKeyInfo)
android.app.SearchableInfo.createActivityContext(android.content.Context,android.content.ComponentName)
android.app.SearchableInfo.getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo)
android.app.SearchableInfo.getActivityMetaData(android.content.Context,org.xmlpull.v1.XmlPullParser,android.content.ComponentName)
android.app.Service.<init>()
android.app.Service.attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)
android.app.Service.dump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String;)
android.app.Service.finalize()
android.app.Service.getClassName()
android.app.Service.onConfigurationChanged(android.content.res.Configuration)
android.app.Service.onCreate()
android.app.Service.onDestroy()
android.app.Service.startForeground(int,android.app.Notification)
android.app.Service.stopForeground(boolean)
android.app.TabActivity.ensureTabHost()
android.app.TabActivity.getTabHost()
android.app.TabActivity.getTabWidget()
android.app.TabActivity.onContentChanged()
android.app.TabActivity.onPostCreate(android.os.Bundle)
android.app.TabActivity.onRestoreInstanceState(android.os.Bundle)
android.app.TabActivity.onSaveInstanceState(android.os.Bundle)
android.app.TimePickerDialog.<init>(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)
android.app.TimePickerDialog.<init>(android.content.Context,int,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)
android.app.TimePickerDialog.onClick(android.content.DialogInterface,int)
android.app.TimePickerDialog.onRestoreInstanceState(android.os.Bundle)
android.app.TimePickerDialog.onSaveInstanceState()
android.app.TimePickerDialog.onTimeChanged(android.widget.TimePicker,int,int)
android.app.TimePickerDialog.updateTime(int,int)
android.app.TimePickerDialog.updateTitle(int,int)
android.app.WallpaperManager$FastBitmapDrawable.setAlpha(int)
android.app.WallpaperManager$FastBitmapDrawable.setColorFilter(android.graphics.ColorFilter)
android.app.WallpaperManager$FastBitmapDrawable.setDither(boolean)
android.app.WallpaperManager$FastBitmapDrawable.setFilterBitmap(boolean)
android.app.admin.DeviceAdminInfo.readPoliciesFromXml(org.xmlpull.v1.XmlPullParser)
android.app.admin.DeviceAdminInfo.writePoliciesToXml(org.xmlpull.v1.XmlSerializer)
android.app.backup.BackupAgent$BackupServiceBinder.doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)
android.app.backup.BackupAgent$BackupServiceBinder.doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)
android.app.backup.BackupAgent.<init>()
android.app.backup.BackupAgentHelper.onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)
android.app.backup.BackupDataInput.ctor(java.io.FileDescriptor)
android.app.backup.BackupDataInput.dtor(int)
android.app.backup.BackupDataInput.getDataSize()
android.app.backup.BackupDataInput.getKey()
android.app.backup.BackupDataInput.readEntityData([B,int,int)
android.app.backup.BackupDataInput.readEntityData_native(int,[B,int,int)
android.app.backup.BackupDataInput.readNextHeader_native(int,android.app.backup.BackupDataInput$EntityHeader)
android.app.backup.BackupDataInput.skipEntityData()
android.app.backup.BackupDataInput.skipEntityData_native(int)
android.app.backup.BackupDataInputStream.read()
android.app.backup.BackupDataInputStream.read([B)
android.app.backup.BackupDataInputStream.read([B,int,int)
android.app.backup.BackupDataOutput.ctor(java.io.FileDescriptor)
android.app.backup.BackupDataOutput.dtor(int)
android.app.backup.BackupDataOutput.setKeyPrefix_native(int,java.lang.String)
android.app.backup.BackupDataOutput.writeEntityData_native(int,[B,int)
android.app.backup.BackupDataOutput.writeEntityHeader_native(int,java.lang.String,int)
android.app.backup.BackupManager.checkServiceBinder()
android.app.backup.FileBackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)
android.app.backup.SharedPreferencesBackupHelper.performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)
android.app.backup.SharedPreferencesBackupHelper.restoreEntity(android.app.backup.BackupDataInputStream)
android.appwidget.AppWidgetHost$Callbacks.providerChanged(int,android.appwidget.AppWidgetProviderInfo)
android.appwidget.AppWidgetHost$Callbacks.updateAppWidget(int,android.widget.RemoteViews)
android.appwidget.AppWidgetHost$UpdateHandler.<init>(android.appwidget.AppWidgetHost,android.os.Looper)
android.appwidget.AppWidgetHost$UpdateHandler.handleMessage(android.os.Message)
android.appwidget.AppWidgetHost.onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)
android.appwidget.AppWidgetHost.onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)
android.appwidget.AppWidgetHost.updateAppWidgetView(int,android.widget.RemoteViews)
android.appwidget.AppWidgetHostView$ParcelableSparseArray.describeContents()
android.appwidget.AppWidgetHostView$ParcelableSparseArray.writeToParcel(android.os.Parcel,int)
android.appwidget.AppWidgetHostView.<init>(android.content.Context,int,int)
android.appwidget.AppWidgetHostView.dispatchRestoreInstanceState(android.util.SparseArray)
android.appwidget.AppWidgetHostView.dispatchSaveInstanceState(android.util.SparseArray)
android.appwidget.AppWidgetHostView.drawChild(android.graphics.Canvas,android.view.View,long)
android.appwidget.AppWidgetHostView.generateId()
android.appwidget.AppWidgetHostView.generateLayoutParams(android.util.AttributeSet)
android.appwidget.AppWidgetHostView.getDefaultView()
android.appwidget.AppWidgetHostView.getErrorView()
android.appwidget.AppWidgetHostView.getRemoteContext(android.widget.RemoteViews)
android.appwidget.AppWidgetHostView.prepareView(android.view.View)
android.appwidget.AppWidgetHostView.updateAppWidget(android.widget.RemoteViews)
android.appwidget.AppWidgetHostView.updateAppWidget(android.widget.RemoteViews,int)
android.appwidget.AppWidgetProvider.onReceive(android.content.Context,android.content.Intent)
android.bluetooth.BluetoothAdapter.toDeviceSet([Ljava.lang.String;)
android.bluetooth.BluetoothClass.hashCode()
android.bluetooth.BluetoothSocket$SdpHelper.<init>(android.bluetooth.BluetoothDevice,android.os.ParcelUuid)
android.bluetooth.BluetoothSocket$SdpHelper.cancel()
android.bluetooth.BluetoothSocket$SdpHelper.doSdp()
android.bluetooth.BluetoothSocket$SdpHelper.onRfcommChannelFound(int)
android.bluetooth.BluetoothSocket.abortNative()
android.bluetooth.BluetoothSocket.accept(int)
android.bluetooth.BluetoothSocket.acceptNative(int)
android.bluetooth.BluetoothSocket.availableNative()
android.bluetooth.BluetoothSocket.bindListenNative()
android.bluetooth.BluetoothSocket.connect()
android.bluetooth.BluetoothSocket.connectNative()
android.bluetooth.BluetoothSocket.destroyNative()
android.bluetooth.BluetoothSocket.initSocketFromFdNative(int)
android.bluetooth.BluetoothSocket.initSocketNative()
android.bluetooth.BluetoothSocket.read([B,int,int)
android.bluetooth.BluetoothSocket.readNative([B,int,int)
android.bluetooth.BluetoothSocket.throwErrnoNative(int)
android.bluetooth.BluetoothSocket.write([B,int,int)
android.bluetooth.BluetoothSocket.writeNative([B,int,int)
android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.cancelSync(android.content.ISyncContext)
android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.initialize(android.accounts.Account,java.lang.String)
android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl.startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)
android.content.AbstractThreadedSyncAdapter$SyncThread.isCanceled()
android.content.AbstractThreadedSyncAdapter$SyncThread.run()
android.content.AbstractThreadedSyncAdapter.<init>(android.content.Context,boolean)
android.content.AbstractThreadedSyncAdapter.getContext()
android.content.AbstractThreadedSyncAdapter.getSyncAdapterBinder()
android.content.AbstractThreadedSyncAdapter.onSyncCanceled()
android.content.AsyncQueryHandler$WorkerHandler.<init>(android.content.AsyncQueryHandler,android.os.Looper)
android.content.AsyncQueryHandler$WorkerHandler.handleMessage(android.os.Message)
android.content.AsyncQueryHandler.<init>(android.content.ContentResolver)
android.content.AsyncQueryHandler.cancelOperation(int)
android.content.AsyncQueryHandler.createHandler(android.os.Looper)
android.content.AsyncQueryHandler.handleMessage(android.os.Message)
android.content.AsyncQueryHandler.onDeleteComplete(int,java.lang.Object,int)
android.content.AsyncQueryHandler.onInsertComplete(int,java.lang.Object,android.net.Uri)
android.content.AsyncQueryHandler.onQueryComplete(int,java.lang.Object,android.database.Cursor)
android.content.AsyncQueryHandler.onUpdateComplete(int,java.lang.Object,int)
android.content.AsyncQueryHandler.startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,[Ljava.lang.String;)
android.content.AsyncQueryHandler.startInsert(int,java.lang.Object,android.net.Uri,android.content.ContentValues)
android.content.AsyncQueryHandler.startQuery(int,java.lang.Object,android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)
android.content.AsyncQueryHandler.startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,[Ljava.lang.String;)
android.content.ComponentName.<init>(android.os.Parcel)
android.content.ComponentName.hashCode()
android.content.ContentProvider$Transport.applyBatch(java.util.ArrayList)
android.content.ContentProvider$Transport.bulkInsert(android.net.Uri,[Landroid.content.ContentValues;)
android.content.ContentProvider$Transport.bulkQuery(android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String,android.database.IContentObserver,android.database.CursorWindow)
android.content.ContentProvider$Transport.call(java.lang.String,java.lang.String,android.os.Bundle)
android.content.ContentProvider$Transport.delete(android.net.Uri,java.lang.String,[Ljava.lang.String;)
android.content.ContentProvider$Transport.enforceReadPermission(android.net.Uri)
android.content.ContentProvider$Transport.enforceWritePermission(android.net.Uri)
android.content.ContentProvider$Transport.getContentProvider()
android.content.ContentProvider$Transport.getType(android.net.Uri)
android.content.ContentProvider$Transport.hasWritePermission(android.net.Uri)
android.content.ContentProvider$Transport.insert(android.net.Uri,android.content.ContentValues)
android.content.ContentProvider$Transport.openAssetFile(android.net.Uri,java.lang.String)
android.content.ContentProvider$Transport.openFile(android.net.Uri,java.lang.String)
android.content.ContentProvider$Transport.query(android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)
android.content.ContentProvider$Transport.update(android.net.Uri,android.content.ContentValues,java.lang.String,[Ljava.lang.String;)
android.content.ContentProvider.<init>()
android.content.ContentProvider.<init>(android.content.Context,java.lang.String,java.lang.String,[Landroid.content.pm.PathPermission;)
android.content.ContentProvider.applyBatch(java.util.ArrayList)
android.content.ContentProvider.attachInfo(android.content.Context,android.content.pm.ProviderInfo)
android.content.ContentProvider.bulkInsert(android.net.Uri,[Landroid.content.ContentValues;)
android.content.ContentProvider.isTemporary()
android.content.ContentProvider.openAssetFile(android.net.Uri,java.lang.String)
android.content.ContentProvider.openFile(android.net.Uri,java.lang.String)
android.content.ContentProvider.openFileHelper(android.net.Uri,java.lang.String)
android.content.ContentProvider.setPathPermissions([Landroid.content.pm.PathPermission;)
android.content.ContentProvider.setReadPermission(java.lang.String)
android.content.ContentProvider.setWritePermission(java.lang.String)
android.content.ContentProviderClient.applyBatch(java.util.ArrayList)
android.content.ContentProviderClient.bulkInsert(android.net.Uri,[Landroid.content.ContentValues;)
android.content.ContentProviderClient.delete(android.net.Uri,java.lang.String,[Ljava.lang.String;)
android.content.ContentProviderClient.getLocalContentProvider()
android.content.ContentProviderClient.getType(android.net.Uri)
android.content.ContentProviderClient.insert(android.net.Uri,android.content.ContentValues)
android.content.ContentProviderClient.openAssetFile(android.net.Uri,java.lang.String)
android.content.ContentProviderClient.openFile(android.net.Uri,java.lang.String)
android.content.ContentProviderClient.query(android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)
android.content.ContentProviderClient.release()
android.content.ContentProviderClient.update(android.net.Uri,android.content.ContentValues,java.lang.String,[Ljava.lang.String;)
android.content.ContentProviderOperation$Builder.withValueBackReferences(android.content.ContentValues)
android.content.ContentProviderOperation$Builder.withValues(android.content.ContentValues)
android.content.ContentProviderOperation.apply(android.content.ContentProvider,[Landroid.content.ContentProviderResult;,int)
android.content.ContentProviderOperation.backRefToValue([Landroid.content.ContentProviderResult;,int,java.lang.Integer)
android.content.ContentQueryMap.finalize()
android.content.ContentQueryMap.readCursorIntoCache()
android.content.ContentResolver$CursorWrapperInner.close()
android.content.ContentResolver$CursorWrapperInner.finalize()
android.content.ContentResolver$ParcelFileDescriptorInner.close()
android.content.ContentResolver$ParcelFileDescriptorInner.finalize()
android.content.ContentResolver.openAssetFileDescriptor(android.net.Uri,java.lang.String)
android.content.ContentResolver.openFileDescriptor(android.net.Uri,java.lang.String)
android.content.ContentResolver.openOutputStream(android.net.Uri)
android.content.ContentResolver.openOutputStream(android.net.Uri,java.lang.String)
android.content.ContentResolver.update(android.net.Uri,android.content.ContentValues,java.lang.String,[Ljava.lang.String;)
android.content.ContentValues.hashCode()
android.content.Context.<init>()
android.content.Context.getString(int)
android.content.Context.getString(int,[Ljava.lang.Object;)
android.content.Context.getText(int)
android.content.Context.isRestricted()
android.content.ContextWrapper.attachBaseContext(android.content.Context)
android.content.ContextWrapper.enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)
android.content.ContextWrapper.enforceCallingPermission(java.lang.String,java.lang.String)
android.content.ContextWrapper.enforceCallingUriPermission(android.net.Uri,int,java.lang.String)
android.content.Intent$FilterComparison.hashCode()
android.content.Intent$ShortcutIconResource.fromContext(android.content.Context,int)
android.content.Intent.parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.content.Intent.putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)
android.content.Intent.putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)
android.content.Intent.putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)
android.content.Intent.putStringArrayListExtra(java.lang.String,java.util.ArrayList)
android.content.Intent.setExtrasClassLoader(java.lang.ClassLoader)
android.content.IntentFilter$AuthorityEntry.<init>(java.lang.String,java.lang.String)
android.content.IntentFilter$AuthorityEntry.getHost()
android.content.IntentFilter$AuthorityEntry.getPort()
android.content.IntentFilter$AuthorityEntry.match(android.net.Uri)
android.content.IntentFilter$AuthorityEntry.writeToParcel(android.os.Parcel)
android.content.IntentFilter.addDataAuthority(java.lang.String,java.lang.String)
android.content.IntentFilter.addStringToSet([Ljava.lang.String;,java.lang.String,[I,int)
android.content.IntentFilter.findMimeType(java.lang.String)
android.content.IntentFilter.findStringInSet([Ljava.lang.String;,java.lang.String,[I,int)
android.content.IntentFilter.getCategory(int)
android.content.IntentFilter.getDataAuthority(int)
android.content.IntentFilter.getDataType(int)
android.content.IntentFilter.match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)
android.content.IntentFilter.matchCategories(java.util.Set)
android.content.IntentFilter.readFromXml(org.xmlpull.v1.XmlPullParser)
android.content.IntentFilter.removeStringFromSet([Ljava.lang.String;,java.lang.String,[I,int)
android.content.IntentFilter.writeToXml(org.xmlpull.v1.XmlSerializer)
android.content.IntentSender$FinishedDispatcher.performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)
android.content.IntentSender$FinishedDispatcher.run()
android.content.SearchRecentSuggestionsProvider$DatabaseHelper.<init>(android.content.Context,int)
android.content.SearchRecentSuggestionsProvider$DatabaseHelper.onCreate(android.database.sqlite.SQLiteDatabase)
android.content.SearchRecentSuggestionsProvider$DatabaseHelper.onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
android.content.SearchRecentSuggestionsProvider.delete(android.net.Uri,java.lang.String,[Ljava.lang.String;)
android.content.SearchRecentSuggestionsProvider.getType(android.net.Uri)
android.content.SearchRecentSuggestionsProvider.insert(android.net.Uri,android.content.ContentValues)
android.content.SearchRecentSuggestionsProvider.onCreate()
android.content.SearchRecentSuggestionsProvider.query(android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)
android.content.SearchRecentSuggestionsProvider.setupSuggestions(java.lang.String,int)
android.content.SearchRecentSuggestionsProvider.update(android.net.Uri,android.content.ContentValues,java.lang.String,[Ljava.lang.String;)
android.content.SyncAdapterType.<init>(android.os.Parcel)
android.content.SyncAdapterType.hashCode()
android.content.SyncContext.<init>(android.content.ISyncContext)
android.content.SyncContext.getSyncContextBinder()
android.content.SyncContext.onFinished(android.content.SyncResult)
android.content.SyncContext.setStatusText(java.lang.String)
android.content.SyncContext.updateHeartbeat()
android.content.SyncInfo.describeContents()
android.content.SyncInfo.writeToParcel(android.os.Parcel,int)
android.content.pm.ActivityInfo.getThemeResource()
android.content.pm.ActivityInfo.writeToParcel(android.os.Parcel,int)
android.content.pm.ApplicationInfo$DisplayNameComparator.compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)
android.content.pm.ApplicationInfo.getApplicationInfo()
android.content.pm.ApplicationInfo.isPackageUnavailable(android.content.pm.PackageManager)
android.content.pm.ApplicationInfo.loadDefaultIcon(android.content.pm.PackageManager)
android.content.pm.ComponentInfo.dumpBack(android.util.Printer,java.lang.String)
android.content.pm.ComponentInfo.dumpFront(android.util.Printer,java.lang.String)
android.content.pm.ComponentInfo.getApplicationInfo()
android.content.pm.ComponentInfo.getIconResource()
android.content.pm.ComponentInfo.loadDefaultIcon(android.content.pm.PackageManager)
android.content.pm.ComponentInfo.loadLabel(android.content.pm.PackageManager)
android.content.pm.ComponentInfo.writeToParcel(android.os.Parcel,int)
android.content.pm.LabeledIntent.readFromParcel(android.os.Parcel)
android.content.pm.PackageItemInfo$DisplayNameComparator.compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)
android.content.pm.PackageItemInfo.dumpBack(android.util.Printer,java.lang.String)
android.content.pm.PackageItemInfo.dumpFront(android.util.Printer,java.lang.String)
android.content.pm.PackageItemInfo.getApplicationInfo()
android.content.pm.PackageItemInfo.loadDefaultIcon(android.content.pm.PackageManager)
android.content.pm.PackageManager$NameNotFoundException.<init>()
android.content.pm.PackageManager$NameNotFoundException.<init>(java.lang.String)
android.content.pm.PackageManager.<init>()
android.content.pm.PackageManager.getPackageArchiveInfo(java.lang.String,int)
android.content.pm.ProviderInfo.writeToParcel(android.os.Parcel,int)
android.content.pm.ResolveInfo$DisplayNameComparator.compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)
android.content.pm.ResolveInfo.loadIcon(android.content.pm.PackageManager)
android.content.pm.ResolveInfo.loadLabel(android.content.pm.PackageManager)
android.content.pm.ResolveInfo.toString()
android.content.pm.ServiceInfo.writeToParcel(android.os.Parcel,int)
android.content.pm.Signature.hashCode()
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.<init>(android.os.ParcelFileDescriptor,int)
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.available()
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.close()
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.getChannel()
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.read()
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.read([B)
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.read([B,int,int)
android.content.res.AssetFileDescriptor$AutoCloseMemoryFileInputStream.skip(long)
android.content.res.AssetFileDescriptor.fromMemoryFile(android.os.MemoryFile)
android.content.res.AssetFileDescriptor.isMemoryFile()
android.content.res.AssetManager$AssetInputStream.available()
android.content.res.AssetManager$AssetInputStream.close()
android.content.res.AssetManager$AssetInputStream.finalize()
android.content.res.AssetManager$AssetInputStream.getAssetInt()
android.content.res.AssetManager$AssetInputStream.mark(int)
android.content.res.AssetManager$AssetInputStream.markSupported()
android.content.res.AssetManager$AssetInputStream.read()
android.content.res.AssetManager$AssetInputStream.read([B)
android.content.res.AssetManager$AssetInputStream.read([B,int,int)
android.content.res.AssetManager$AssetInputStream.reset()
android.content.res.AssetManager$AssetInputStream.skip(long)
android.content.res.AssetManager.applyStyle(int,int,int,int,[I,[I,[I)
android.content.res.AssetManager.applyThemeStyle(int,int,boolean)
android.content.res.AssetManager.deleteTheme(int)
android.content.res.AssetManager.destroyAsset(int)
android.content.res.AssetManager.dumpTheme(int,int,java.lang.String,java.lang.String)
android.content.res.AssetManager.finalize()
android.content.res.AssetManager.getAssetLength(int)
android.content.res.AssetManager.getAssetRemainingLength(int)
android.content.res.AssetManager.getNativeStringBlock(int)
android.content.res.AssetManager.getPooledString(int,int)
android.content.res.AssetManager.getResourceBagText(int,int)
android.content.res.AssetManager.getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)
android.content.res.AssetManager.getResourceValue(int,android.util.TypedValue,boolean)
android.content.res.AssetManager.getThemeValue(int,int,android.util.TypedValue,boolean)
android.content.res.AssetManager.loadResourceBagValue(int,int,android.util.TypedValue,boolean)
android.content.res.AssetManager.loadResourceValue(int,android.util.TypedValue,boolean)
android.content.res.AssetManager.loadThemeAttributeValue(int,int,android.util.TypedValue,boolean)
android.content.res.AssetManager.openNonAsset(int,java.lang.String)
android.content.res.AssetManager.openNonAsset(int,java.lang.String,int)
android.content.res.AssetManager.openNonAssetFd(int,java.lang.String)
android.content.res.AssetManager.openNonAssetFd(java.lang.String)
android.content.res.AssetManager.openNonAssetFdNative(int,java.lang.String,[J)
android.content.res.AssetManager.openNonAssetNative(int,java.lang.String,int)
android.content.res.AssetManager.openXmlAssetNative(int,java.lang.String)
android.content.res.AssetManager.openXmlBlockAsset(int,java.lang.String)
android.content.res.AssetManager.openXmlBlockAsset(java.lang.String)
android.content.res.AssetManager.openXmlResourceParser(int,java.lang.String)
android.content.res.AssetManager.openXmlResourceParser(java.lang.String)
android.content.res.AssetManager.readAsset(int,[B,int,int)
android.content.res.AssetManager.readAssetChar(int)
android.content.res.AssetManager.releaseTheme(int)
android.content.res.AssetManager.retrieveArray(int,[I)
android.content.res.AssetManager.retrieveAttributes(int,[I,[I,[I)
android.content.res.AssetManager.seekAsset(int,long,int)
android.content.res.AssetManager.xmlBlockGone(int)
android.content.res.ColorStateList.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)
android.content.res.ColorStateList.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.content.res.ColorStateList.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.content.res.Configuration.hashCode()
android.content.res.Resources$Theme.resolveAttribute(int,android.util.TypedValue,boolean)
android.content.res.Resources.getCachedStyledAttributes(int)
android.content.res.Resources.getFraction(int,int,int)
android.content.res.Resources.loadColorStateList(android.util.TypedValue,int)
android.content.res.Resources.loadDrawable(android.util.TypedValue,int)
android.content.res.Resources.parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
android.content.res.Resources.parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
android.content.res.Resources.startPreloading()
android.content.res.TypedArray.getColorStateList(int)
android.content.res.TypedArray.getDimension(int,float)
android.content.res.TypedArray.getDimensionPixelOffset(int,int)
android.content.res.TypedArray.getDimensionPixelSize(int,int)
android.content.res.TypedArray.getDrawable(int)
android.content.res.TypedArray.getFloat(int,float)
android.content.res.TypedArray.getInt(int,int)
android.content.res.TypedArray.getInteger(int,int)
android.content.res.TypedArray.getLayoutDimension(int,java.lang.String)
android.content.res.TypedArray.getNonResourceString(int)
android.content.res.TypedArray.getText(int)
android.content.res.TypedArray.getTextArray(int)
android.content.res.TypedArray.getValue(int,android.util.TypedValue)
android.content.res.TypedArray.getValueAt(int,android.util.TypedValue)
android.content.res.TypedArray.loadStringValueAt(int)
android.database.AbstractCursor$SelfContentObserver.<init>(android.database.AbstractCursor)
android.database.AbstractCursor$SelfContentObserver.deliverSelfNotifications()
android.database.AbstractCursor$SelfContentObserver.onChange(boolean)
android.database.AbstractCursor.<init>()
android.database.AbstractCursor.checkPosition()
android.database.AbstractCursor.commitUpdates(java.util.Map)
android.database.AbstractCursor.copyStringToBuffer(int,android.database.CharArrayBuffer)
android.database.AbstractCursor.finalize()
android.database.AbstractCursor.getBlob(int)
android.database.AbstractCursor.getDataSetObservable()
android.database.AbstractCursor.getUpdatedField(int)
android.database.AbstractCursor.isFieldUpdated(int)
android.database.AbstractCursor.notifyDataSetChange()
android.database.AbstractCursor.onChange(boolean)
android.database.AbstractWindowedCursor.<init>()
android.database.AbstractWindowedCursor.checkPosition()
android.database.AbstractWindowedCursor.copyStringToBuffer(int,android.database.CharArrayBuffer)
android.database.AbstractWindowedCursor.getBlob(int)
android.database.AbstractWindowedCursor.getDouble(int)
android.database.AbstractWindowedCursor.getFloat(int)
android.database.AbstractWindowedCursor.getInt(int)
android.database.AbstractWindowedCursor.getLong(int)
android.database.AbstractWindowedCursor.getShort(int)
android.database.AbstractWindowedCursor.getString(int)
android.database.AbstractWindowedCursor.getWindow()
android.database.AbstractWindowedCursor.hasWindow()
android.database.AbstractWindowedCursor.isBlob(int)
android.database.AbstractWindowedCursor.isFloat(int)
android.database.AbstractWindowedCursor.isLong(int)
android.database.AbstractWindowedCursor.isNull(int)
android.database.AbstractWindowedCursor.isString(int)
android.database.AbstractWindowedCursor.setWindow(android.database.CursorWindow)
android.database.ContentObserver$NotificationRunnable.<init>(android.database.ContentObserver,boolean)
android.database.ContentObserver$NotificationRunnable.run()
android.database.ContentObserver$Transport.<init>(android.database.ContentObserver)
android.database.ContentObserver$Transport.deliverSelfNotifications()
android.database.ContentObserver$Transport.onChange(boolean)
android.database.ContentObserver$Transport.releaseContentObserver()
android.database.ContentObserver.<init>(android.os.Handler)
android.database.ContentObserver.deliverSelfNotifications()
android.database.ContentObserver.dispatchChange(boolean)
android.database.ContentObserver.getContentObserver()
android.database.ContentObserver.onChange(boolean)
android.database.ContentObserver.releaseContentObserver()
android.database.CursorJoiner$Result.valueOf(java.lang.String)
android.database.CursorJoiner.buildColumnIndiciesArray(android.database.Cursor,[Ljava.lang.String;)
android.database.CursorJoiner.compareStrings([Ljava.lang.String;)
android.database.CursorJoiner.incrementCursors()
android.database.CursorJoiner.next()
android.database.CursorJoiner.populateValues([Ljava.lang.String;,android.database.Cursor,[I,int)
android.database.CursorJoiner.remove()
android.database.CursorWindow.copyStringToBuffer(int,int,android.database.CharArrayBuffer)
android.database.CursorWindow.copyStringToBuffer_native(int,int,int,android.database.CharArrayBuffer)
android.database.CursorWindow.getBlob(int,int)
android.database.CursorWindow.getBlob_native(int,int)
android.database.CursorWindow.getDouble(int,int)
android.database.CursorWindow.getDouble_native(int,int)
android.database.CursorWindow.getFloat(int,int)
android.database.CursorWindow.getInt(int,int)
android.database.CursorWindow.getLong(int,int)
android.database.CursorWindow.getLong_native(int,int)
android.database.CursorWindow.getShort(int,int)
android.database.CursorWindow.getString(int,int)
android.database.CursorWindow.getString_native(int,int)
android.database.CursorWindow.isBlob(int,int)
android.database.CursorWindow.isBlob_native(int,int)
android.database.CursorWindow.isFloat(int,int)
android.database.CursorWindow.isFloat_native(int,int)
android.database.CursorWindow.isInteger_native(int,int)
android.database.CursorWindow.isLong(int,int)
android.database.CursorWindow.isString(int,int)
android.database.CursorWindow.isString_native(int,int)
android.database.CursorWindow.native_init(android.os.IBinder)
android.database.CursorWindow.newFromParcel(android.os.Parcel)
android.database.CursorWrapper.commitUpdates(java.util.Map)
android.database.CursorWrapper.copyStringToBuffer(int,android.database.CharArrayBuffer)
android.database.CursorWrapper.getBlob(int)
android.database.CursorWrapper.getDouble(int)
android.database.CursorWrapper.getFloat(int)
android.database.CursorWrapper.getInt(int)
android.database.CursorWrapper.getLong(int)
android.database.CursorWrapper.getShort(int)
android.database.CursorWrapper.getString(int)
android.database.CursorWrapper.isNull(int)
android.database.DataSetObserver.<init>()
android.database.DataSetObserver.onChanged()
android.database.DataSetObserver.onInvalidated()
android.database.DatabaseUtils$InsertHelper.<init>(android.database.sqlite.SQLiteDatabase,java.lang.String)
android.database.DatabaseUtils$InsertHelper.bind(int,[B)
android.database.DatabaseUtils$InsertHelper.bind(int,boolean)
android.database.DatabaseUtils$InsertHelper.bind(int,double)
android.database.DatabaseUtils$InsertHelper.bind(int,float)
android.database.DatabaseUtils$InsertHelper.bind(int,int)
android.database.DatabaseUtils$InsertHelper.bind(int,java.lang.String)
android.database.DatabaseUtils$InsertHelper.bind(int,long)
android.database.DatabaseUtils$InsertHelper.bindNull(int)
android.database.DatabaseUtils$InsertHelper.buildSQL()
android.database.DatabaseUtils$InsertHelper.close()
android.database.DatabaseUtils$InsertHelper.execute()
android.database.DatabaseUtils$InsertHelper.getColumnIndex(java.lang.String)
android.database.DatabaseUtils$InsertHelper.getStatement(boolean)
android.database.DatabaseUtils$InsertHelper.insert(android.content.ContentValues)
android.database.DatabaseUtils$InsertHelper.insertInternal(android.content.ContentValues,boolean)
android.database.DatabaseUtils$InsertHelper.prepareForInsert()
android.database.DatabaseUtils$InsertHelper.prepareForReplace()
android.database.DatabaseUtils$InsertHelper.replace(android.content.ContentValues)
android.database.DatabaseUtils.bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)
android.database.DatabaseUtils.cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)
android.database.DatabaseUtils.cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)
android.database.DatabaseUtils.cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)
android.database.DatabaseUtils.cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)
android.database.DatabaseUtils.cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)
android.database.DatabaseUtils.cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)
android.database.DatabaseUtils.cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils$InsertHelper,int)
android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor)
android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor,java.io.PrintStream)
android.database.DatabaseUtils.dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)
android.database.DatabaseUtils.dumpCurrentRowToString(android.database.Cursor)
android.database.DatabaseUtils.dumpCursor(android.database.Cursor,java.io.PrintStream)
android.database.DatabaseUtils.getCollationKeyInBytes(java.lang.String)
android.database.DatabaseUtils.getKeyLen([B)
android.database.DatabaseUtils.longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,[Ljava.lang.String;)
android.database.DatabaseUtils.longForQuery(android.database.sqlite.SQLiteStatement,[Ljava.lang.String;)
android.database.DatabaseUtils.queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)
android.database.DatabaseUtils.readExceptionFromParcel(android.os.Parcel,java.lang.String,int)
android.database.DatabaseUtils.stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,[Ljava.lang.String;)
android.database.DatabaseUtils.stringForQuery(android.database.sqlite.SQLiteStatement,[Ljava.lang.String;)
android.database.DatabaseUtils.writeExceptionToParcel(android.os.Parcel,java.lang.Exception)
android.database.MatrixCursor.addRow(java.lang.Iterable)
android.database.MatrixCursor.addRow(java.util.ArrayList,int)
android.database.MatrixCursor.ensureCapacity(int)
android.database.MatrixCursor.get(int)
android.database.MatrixCursor.getDouble(int)
android.database.MatrixCursor.getFloat(int)
android.database.MatrixCursor.getInt(int)
android.database.MatrixCursor.getLong(int)
android.database.MatrixCursor.getString(int)
android.database.MatrixCursor.isNull(int)
android.database.MergeCursor.deleteRow()
android.database.MergeCursor.getBlob(int)
android.database.MergeCursor.getDouble(int)
android.database.MergeCursor.getFloat(int)
android.database.MergeCursor.getInt(int)
android.database.MergeCursor.getLong(int)
android.database.MergeCursor.getShort(int)
android.database.MergeCursor.getString(int)
android.database.MergeCursor.isNull(int)
android.database.Observable.<init>()
android.database.sqlite.SQLiteClosable.<init>()
android.database.sqlite.SQLiteClosable.getObjInfo()
android.database.sqlite.SQLiteClosable.onAllReferencesReleasedFromContainer()
android.database.sqlite.SQLiteCursor$MainThreadNotificationHandler.handleMessage(android.os.Message)
android.database.sqlite.SQLiteCursor$QueryThread.run()
android.database.sqlite.SQLiteCursor$QueryThread.sendMessage()
android.database.sqlite.SQLiteCursor.<init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)
android.database.sqlite.SQLiteCursor.close()
android.database.sqlite.SQLiteCursor.commitUpdates(java.util.Map)
android.database.sqlite.SQLiteCursor.deactivate()
android.database.sqlite.SQLiteCursor.deactivateCommon()
android.database.sqlite.SQLiteCursor.deleteRow()
android.database.sqlite.SQLiteCursor.fillWindow(int)
android.database.sqlite.SQLiteCursor.finalize()
android.database.sqlite.SQLiteCursor.getColumnIndex(java.lang.String)
android.database.sqlite.SQLiteCursor.getColumnNames()
android.database.sqlite.SQLiteCursor.getCount()
android.database.sqlite.SQLiteCursor.getDatabase()
android.database.sqlite.SQLiteCursor.onMove(int,int)
android.database.sqlite.SQLiteCursor.queryThreadLock()
android.database.sqlite.SQLiteCursor.queryThreadUnlock()
android.database.sqlite.SQLiteCursor.registerDataSetObserver(android.database.DataSetObserver)
android.database.sqlite.SQLiteCursor.requery()
android.database.sqlite.SQLiteCursor.setLoadStyle(int,int)
android.database.sqlite.SQLiteCursor.setSelectionArguments([Ljava.lang.String;)
android.database.sqlite.SQLiteCursor.setWindow(android.database.CursorWindow)
android.database.sqlite.SQLiteCursor.supportsUpdates()
android.database.sqlite.SQLiteDatabase.addToCompiledQueries(java.lang.String,android.database.sqlite.SQLiteCompiledSql)
android.database.sqlite.SQLiteDatabase.enableSqlProfiling(java.lang.String)
android.database.sqlite.SQLiteOpenHelper.<init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
android.database.sqlite.SQLiteOpenHelper.close()
android.database.sqlite.SQLiteOpenHelper.getReadableDatabase()
android.database.sqlite.SQLiteOpenHelper.getWritableDatabase()
android.database.sqlite.SQLiteOpenHelper.onOpen(android.database.sqlite.SQLiteDatabase)
android.database.sqlite.SQLiteProgram.bindBlob(int,[B)
android.database.sqlite.SQLiteProgram.bindDouble(int,double)
android.database.sqlite.SQLiteProgram.bindLong(int,long)
android.database.sqlite.SQLiteProgram.bindNull(int)
android.database.sqlite.SQLiteProgram.bindString(int,java.lang.String)
android.database.sqlite.SQLiteProgram.clearBindings()
android.database.sqlite.SQLiteProgram.close()
android.database.sqlite.SQLiteProgram.compile(java.lang.String,boolean)
android.database.sqlite.SQLiteProgram.getSqlString()
android.database.sqlite.SQLiteProgram.getUniqueId()
android.database.sqlite.SQLiteProgram.native_bind_blob(int,[B)
android.database.sqlite.SQLiteProgram.native_bind_double(int,double)
android.database.sqlite.SQLiteProgram.native_bind_long(int,long)
android.database.sqlite.SQLiteProgram.native_bind_null(int)
android.database.sqlite.SQLiteProgram.native_bind_string(int,java.lang.String)
android.database.sqlite.SQLiteProgram.native_clear_bindings()
android.database.sqlite.SQLiteProgram.native_compile(java.lang.String)
android.database.sqlite.SQLiteProgram.native_finalize()
android.database.sqlite.SQLiteProgram.onAllReferencesReleased()
android.database.sqlite.SQLiteProgram.onAllReferencesReleasedFromContainer()
android.database.sqlite.SQLiteProgram.releaseCompiledSqlIfNotInCache()
android.database.sqlite.SQLiteQuery.bindDouble(int,double)
android.database.sqlite.SQLiteQuery.bindLong(int,long)
android.database.sqlite.SQLiteQuery.bindNull(int)
android.database.sqlite.SQLiteQuery.bindString(int,java.lang.String)
android.database.sqlite.SQLiteQuery.close()
android.database.sqlite.SQLiteQuery.columnCountLocked()
android.database.sqlite.SQLiteQuery.columnNameLocked(int)
android.database.sqlite.SQLiteQuery.fillWindow(android.database.CursorWindow,int,int)
android.database.sqlite.SQLiteQuery.native_column_count()
android.database.sqlite.SQLiteQuery.native_column_name(int)
android.database.sqlite.SQLiteQuery.native_fill_window(android.database.CursorWindow,int,int,int,int)
android.database.sqlite.SQLiteQuery.requery()
android.database.sqlite.SQLiteQuery.toString()
android.database.sqlite.SQLiteQueryBuilder.appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String)
android.database.sqlite.SQLiteQueryBuilder.appendClauseEscapeClause(java.lang.StringBuilder,java.lang.String,java.lang.String)
android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery(java.lang.String,[Ljava.lang.String;,java.util.Set,int,java.lang.String,java.lang.String,[Ljava.lang.String;,java.lang.String,java.lang.String)
android.database.sqlite.SQLiteQueryBuilder.computeProjection([Ljava.lang.String;)
android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String,java.lang.String,java.lang.String)
android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
android.database.sqlite.SQLiteQueryBuilder.setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)
android.database.sqlite.SQLiteQueryBuilder.setProjectionMap(java.util.Map)
android.database.sqlite.SQLiteStatement.execute()
android.database.sqlite.SQLiteStatement.executeInsert()
android.database.sqlite.SQLiteStatement.native_1x1_long()
android.database.sqlite.SQLiteStatement.native_1x1_string()
android.database.sqlite.SQLiteStatement.native_execute()
android.database.sqlite.SQLiteStatement.simpleQueryForLong()
android.database.sqlite.SQLiteStatement.simpleQueryForString()
android.gesture.Gesture.addStroke(android.gesture.GestureStroke)
android.gesture.Gesture.deserialize(java.io.DataInputStream)
android.gesture.Gesture.serialize(java.io.DataOutputStream)
android.gesture.Gesture.setID(long)
android.gesture.GestureLibraries$FileGestureLibrary.<init>(java.io.File)
android.gesture.GestureLibraries$FileGestureLibrary.isReadOnly()
android.gesture.GestureLibraries$FileGestureLibrary.load()
android.gesture.GestureLibraries$FileGestureLibrary.save()
android.gesture.GestureLibraries$ResourceGestureLibrary.<init>(android.content.Context,int)
android.gesture.GestureLibraries$ResourceGestureLibrary.isReadOnly()
android.gesture.GestureLibraries$ResourceGestureLibrary.load()
android.gesture.GestureLibraries$ResourceGestureLibrary.save()
android.gesture.GestureLibrary.addGesture(java.lang.String,android.gesture.Gesture)
android.gesture.GestureLibrary.getGestureEntries()
android.gesture.GestureLibrary.getGestures(java.lang.String)
android.gesture.GestureLibrary.getLearner()
android.gesture.GestureLibrary.getOrientationStyle()
android.gesture.GestureLibrary.getSequenceType()
android.gesture.GestureLibrary.isReadOnly()
android.gesture.GestureLibrary.recognize(android.gesture.Gesture)
android.gesture.GestureLibrary.removeEntry(java.lang.String)
android.gesture.GestureLibrary.removeGesture(java.lang.String,android.gesture.Gesture)
android.gesture.GestureLibrary.setOrientationStyle(int)
android.gesture.GestureLibrary.setSequenceType(int)
android.gesture.GestureOverlayView$FadeOutRunnable.run()
android.gesture.GestureOverlayView.addOnGestureListener(android.gesture.GestureOverlayView$OnGestureListener)
android.gesture.GestureOverlayView.addOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)
android.gesture.GestureOverlayView.addOnGesturingListener(android.gesture.GestureOverlayView$OnGesturingListener)
android.gesture.GestureOverlayView.cancelGesture()
android.gesture.GestureOverlayView.cancelGesture(android.view.MotionEvent)
android.gesture.GestureOverlayView.clear(boolean,boolean,boolean)
android.gesture.GestureOverlayView.fireOnGesturePerformed()
android.gesture.GestureOverlayView.init()
android.gesture.GestureOverlayView.onDetachedFromWindow()
android.gesture.GestureOverlayView.processEvent(android.view.MotionEvent)
android.gesture.GestureOverlayView.removeOnGestureListener(android.gesture.GestureOverlayView$OnGestureListener)
android.gesture.GestureOverlayView.removeOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)
android.gesture.GestureOverlayView.removeOnGesturingListener(android.gesture.GestureOverlayView$OnGesturingListener)
android.gesture.GestureOverlayView.setCurrentColor(int)
android.gesture.GestureOverlayView.setPaintAlpha(int)
android.gesture.GestureOverlayView.touchDown(android.view.MotionEvent)
android.gesture.GestureOverlayView.touchMove(android.view.MotionEvent)
android.gesture.GestureOverlayView.touchUp(android.view.MotionEvent,boolean)
android.gesture.GesturePoint.deserialize(java.io.DataInputStream)
android.gesture.GestureStore.getLearner()
android.gesture.GestureStore.load(java.io.InputStream)
android.gesture.GestureStore.readFormatV1(java.io.DataInputStream)
android.gesture.GestureStroke.clone()
android.gesture.GestureStroke.deserialize(java.io.DataInputStream)
android.gesture.GestureStroke.draw(android.graphics.Canvas,android.graphics.Paint)
android.gesture.GestureStroke.makePath()
android.gesture.GestureStroke.serialize(java.io.DataOutputStream)
android.gesture.GestureStroke.toPath(float,float,int)
android.gesture.GestureUtils.closeStream(java.io.Closeable)
android.gesture.GestureUtils.computeCentroid([F)
android.gesture.GestureUtils.computeCoVariance([F)
android.gesture.GestureUtils.computeOrientation([[F)
android.gesture.GestureUtils.computeOrientedBoundingBox([F,[F)
android.gesture.GestureUtils.computeStraightness([F)
android.gesture.GestureUtils.computeStraightness([F,float)
android.gesture.GestureUtils.computeTotalLength([F)
android.gesture.GestureUtils.cosineDistance([F,[F)
android.gesture.GestureUtils.minimumCosineDistance([F,[F,int)
android.gesture.GestureUtils.plot(float,float,[F,int)
android.gesture.GestureUtils.rotate([F,float)
android.gesture.GestureUtils.scale([F,float,float)
android.gesture.GestureUtils.squaredEuclideanDistance([F,[F)
android.gesture.GestureUtils.temporalSampling(android.gesture.GestureStroke,int)
android.gesture.GestureUtils.translate([F,float,float)
android.gesture.Prediction.toString()
android.graphics.AvoidXfermode$Mode.valueOf(java.lang.String)
android.graphics.AvoidXfermode.<init>(int,int,android.graphics.AvoidXfermode$Mode)
android.graphics.AvoidXfermode.nativeCreate(int,int,int)
android.graphics.Bitmap$CompressFormat.valueOf(java.lang.String)
android.graphics.Bitmap$Config.nativeToConfig(int)
android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)
android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer)
android.graphics.Bitmap.nativeExtractAlpha(int,int,[I)
android.graphics.BitmapFactory$Options.requestCancel()
android.graphics.BitmapFactory.decodeResource(android.content.res.Resources,int)
android.graphics.BitmapFactory.decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.finishDecode(android.graphics.Bitmap,android.graphics.Rect,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.nativeDecodeAsset(int,android.graphics.Rect,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.nativeDecodeByteArray([B,int,int,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.nativeDecodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.nativeDecodeStream(java.io.InputStream,[B,android.graphics.Rect,android.graphics.BitmapFactory$Options)
android.graphics.BitmapFactory.nativeScaleNinePatch([B,float,android.graphics.Rect)
android.graphics.BitmapFactory.nativeSetDefaultConfig(int)
android.graphics.BitmapFactory.setDefaultConfig(android.graphics.Bitmap$Config)
android.graphics.BitmapShader.<init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
android.graphics.BitmapShader.nativeCreate(int,int,int)
android.graphics.BlurMaskFilter$Blur.valueOf(java.lang.String)
android.graphics.BlurMaskFilter.<init>(float,android.graphics.BlurMaskFilter$Blur)
android.graphics.BlurMaskFilter.nativeConstructor(float,int)
android.graphics.Canvas$EdgeType.valueOf(java.lang.String)
android.graphics.Canvas$VertexMode.valueOf(java.lang.String)
android.graphics.Canvas.clipPath(android.graphics.Path,android.graphics.Region$Op)
android.graphics.Canvas.finalizer(int)
android.graphics.Canvas.nativeDrawBitmapMatrix(int,int,int,int)
android.graphics.Canvas.nativeDrawBitmapMesh(int,int,int,int,[F,int,[I,int,int)
android.graphics.Canvas.nativeDrawVertices(int,int,int,[F,int,[F,int,[I,int,[S,int,int,int)
android.graphics.Canvas.nativeSetDrawFilter(int,int)
android.graphics.Canvas.nativeSetViewport(int,int,int)
android.graphics.Canvas.native_clipPath(int,int,int)
android.graphics.Canvas.native_clipRect(int,float,float,float,float,int)
android.graphics.Canvas.native_clipRegion(int,int,int)
android.graphics.Canvas.native_concat(int,int)
android.graphics.Canvas.native_drawArc(int,android.graphics.RectF,float,float,boolean,int)
android.graphics.Canvas.native_drawBitmap(int,[I,int,int,float,float,int,int,boolean,int)
android.graphics.Canvas.native_drawBitmap(int,int,android.graphics.Rect,android.graphics.Rect,int,int,int)
android.graphics.Canvas.native_drawBitmap(int,int,android.graphics.Rect,android.graphics.RectF,int,int,int)
android.graphics.Canvas.native_drawBitmap(int,int,float,float,int,int,int,int)
android.graphics.Canvas.native_drawCircle(int,float,float,float,int)
android.graphics.Canvas.native_drawColor(int,int)
android.graphics.Canvas.native_drawColor(int,int,int)
android.graphics.Canvas.native_drawLine(int,float,float,float,float,int)
android.graphics.Canvas.native_drawOval(int,android.graphics.RectF,int)
android.graphics.Canvas.native_drawPaint(int,int)
android.graphics.Canvas.native_drawPath(int,int,int)
android.graphics.Canvas.native_drawPicture(int,int)
android.graphics.Canvas.native_drawPosText(int,[C,int,int,[F,int)
android.graphics.Canvas.native_drawPosText(int,java.lang.String,[F,int)
android.graphics.Canvas.native_drawRect(int,android.graphics.RectF,int)
android.graphics.Canvas.native_drawRect(int,float,float,float,float,int)
android.graphics.Canvas.native_drawRoundRect(int,android.graphics.RectF,float,float,int)
android.graphics.Canvas.native_drawText(int,[C,int,int,float,float,int)
android.graphics.Canvas.native_drawText(int,java.lang.String,int,int,float,float,int)
android.graphics.Canvas.native_drawTextOnPath(int,[C,int,int,int,float,float,int)
android.graphics.Canvas.native_drawTextOnPath(int,java.lang.String,int,float,float,int)
android.graphics.Canvas.native_getCTM(int,int)
android.graphics.Canvas.native_getClipBounds(int,android.graphics.Rect)
android.graphics.Canvas.native_quickReject(int,int,int)
android.graphics.Canvas.native_saveLayer(int,android.graphics.RectF,int,int)
android.graphics.Canvas.native_saveLayer(int,float,float,float,float,int,int)
android.graphics.Canvas.native_saveLayerAlpha(int,android.graphics.RectF,int,int)
android.graphics.Canvas.native_saveLayerAlpha(int,float,float,float,float,int,int)
android.graphics.Canvas.native_setBitmap(int,int)
android.graphics.Canvas.native_setMatrix(int,int)
android.graphics.Color.nativeHSVToColor(int,[F)
android.graphics.Color.nativeRGBToHSV(int,int,int,[F)
android.graphics.Color.parseColor(java.lang.String)
android.graphics.ColorFilter.finalize()
android.graphics.ColorFilter.finalizer(int)
android.graphics.ColorMatrixColorFilter.nativeColorMatrixFilter([F)
android.graphics.ComposePathEffect.<init>(android.graphics.PathEffect,android.graphics.PathEffect)
android.graphics.ComposePathEffect.nativeCreate(int,int)
android.graphics.ComposeShader.<init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff$Mode)
android.graphics.ComposeShader.nativeCreate1(int,int,int)
android.graphics.ComposeShader.nativeCreate2(int,int,int)
android.graphics.CornerPathEffect.nativeCreate(float)
android.graphics.DashPathEffect.nativeCreate([F,float)
android.graphics.DiscretePathEffect.nativeCreate(float,float)
android.graphics.DrawFilter.finalize()
android.graphics.DrawFilter.nativeDestructor(int)
android.graphics.EmbossMaskFilter.nativeConstructor([F,float,float,float)
android.graphics.Interpolator$Result.valueOf(java.lang.String)
android.graphics.Interpolator.<init>(int,int)
android.graphics.Interpolator.finalize()
android.graphics.Interpolator.nativeConstructor(int,int)
android.graphics.Interpolator.nativeDestructor(int)
android.graphics.Interpolator.nativeReset(int,int,int)
android.graphics.Interpolator.nativeSetKeyFrame(int,int,int,[F,[F)
android.graphics.Interpolator.nativeSetRepeatMirror(int,float,boolean)
android.graphics.Interpolator.nativeTimeToValues(int,int,[F)
android.graphics.Interpolator.reset(int,int)
android.graphics.Interpolator.setKeyFrame(int,int,[F)
android.graphics.Interpolator.setKeyFrame(int,int,[F,[F)
android.graphics.Interpolator.timeToValues(int,[F)
android.graphics.LayerRasterizer.nativeAddLayer(int,int,float,float)
android.graphics.LayerRasterizer.nativeConstructor()
android.graphics.LightingColorFilter.native_CreateLightingFilter(int,int)
android.graphics.LinearGradient.<init>(float,float,float,float,[I,[F,android.graphics.Shader$TileMode)
android.graphics.LinearGradient.<init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)
android.graphics.LinearGradient.nativeCreate1(float,float,float,float,[I,[F,int)
android.graphics.LinearGradient.nativeCreate2(float,float,float,float,int,int,int)
android.graphics.MaskFilter.finalize()
android.graphics.MaskFilter.nativeDestructor(int)
android.graphics.Matrix$ScaleToFit.valueOf(java.lang.String)
android.graphics.Movie.decodeTempStream(java.io.InputStream)
android.graphics.Movie.draw(android.graphics.Canvas,float,float)
android.graphics.Movie.draw(android.graphics.Canvas,float,float,android.graphics.Paint)
android.graphics.Movie.duration()
android.graphics.Movie.height()
android.graphics.Movie.isOpaque()
android.graphics.Movie.setTime(int)
android.graphics.Movie.width()
android.graphics.NinePatch.<init>(android.graphics.Bitmap,[B,java.lang.String)
android.graphics.NinePatch.<init>(android.graphics.NinePatch)
android.graphics.NinePatch.draw(android.graphics.Canvas,android.graphics.Rect)
android.graphics.NinePatch.draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)
android.graphics.NinePatch.draw(android.graphics.Canvas,android.graphics.RectF)
android.graphics.NinePatch.getDensity()
android.graphics.NinePatch.getHeight()
android.graphics.NinePatch.getTransparentRegion(android.graphics.Rect)
android.graphics.NinePatch.getWidth()
android.graphics.NinePatch.hasAlpha()
android.graphics.NinePatch.nativeDraw(int,android.graphics.Rect,int,[B,int,int,int)
android.graphics.NinePatch.nativeDraw(int,android.graphics.RectF,int,[B,int,int,int)
android.graphics.NinePatch.nativeGetTransparentRegion(int,[B,android.graphics.Rect)
android.graphics.NinePatch.setPaint(android.graphics.Paint)
android.graphics.NinePatch.validateNinePatchChunk(int,[B)
android.graphics.Paint$Cap.valueOf(java.lang.String)
android.graphics.Paint.native_breakText([C,int,int,float,[F)
android.graphics.Paint.native_getFontMetrics(int,android.graphics.Paint$FontMetrics)
android.graphics.Paint.native_getTextPath(int,[C,int,int,float,float,int)
android.graphics.Paint.native_getTextPath(int,java.lang.String,int,int,float,float,int)
android.graphics.Paint.native_initWithPaint(int)
android.graphics.Paint.native_reset(int)
android.graphics.Paint.native_set(int,int)
android.graphics.Paint.native_setColorFilter(int,int)
android.graphics.Paint.native_setMaskFilter(int,int)
android.graphics.Paint.native_setPathEffect(int,int)
android.graphics.Paint.native_setRasterizer(int,int)
android.graphics.Paint.native_setShader(int,int)
android.graphics.Paint.native_setTypeface(int,int)
android.graphics.Paint.native_setXfermode(int,int)
android.graphics.PaintFlagsDrawFilter.nativeConstructor(int,int)
android.graphics.Path$Direction.valueOf(java.lang.String)
android.graphics.Path$FillType.valueOf(java.lang.String)
android.graphics.PathDashPathEffect$Style.valueOf(java.lang.String)
android.graphics.PathDashPathEffect.<init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect$Style)
android.graphics.PathDashPathEffect.nativeCreate(int,float,float,int)
android.graphics.PathEffect.finalize()
android.graphics.PathEffect.nativeDestructor(int)
android.graphics.Picture$RecordingCanvas.<init>(android.graphics.Picture,int)
android.graphics.Picture$RecordingCanvas.drawPicture(android.graphics.Picture)
android.graphics.Picture$RecordingCanvas.setBitmap(android.graphics.Bitmap)
android.graphics.Picture.nativeCreateFromStream(java.io.InputStream,[B)
android.graphics.PixelFormat.nativeClassInit()
android.graphics.PixelXorXfermode.nativeCreate(int)
android.graphics.Point.hashCode()
android.graphics.PorterDuff$Mode.valueOf(java.lang.String)
android.graphics.PorterDuff$Mode.values()
android.graphics.PorterDuff.<init>()
android.graphics.PorterDuffColorFilter.<init>(int,android.graphics.PorterDuff$Mode)
android.graphics.PorterDuffColorFilter.native_CreatePorterDuffFilter(int,int)
android.graphics.PorterDuffXfermode.<init>(android.graphics.PorterDuff$Mode)
android.graphics.PorterDuffXfermode.nativeCreateXfermode(int)
android.graphics.RadialGradient.<init>(float,float,float,[I,[F,android.graphics.Shader$TileMode)
android.graphics.RadialGradient.<init>(float,float,float,int,int,android.graphics.Shader$TileMode)
android.graphics.RadialGradient.nativeCreate1(float,float,float,[I,[F,int)
android.graphics.RadialGradient.nativeCreate2(float,float,float,int,int,int)
android.graphics.Rasterizer.finalize()
android.graphics.Rasterizer.finalizer(int)
android.graphics.Rect.<init>(android.graphics.Rect)
android.graphics.Rect.contains(android.graphics.Rect)
android.graphics.Rect.equals(java.lang.Object)
android.graphics.Rect.flattenToString()
android.graphics.Rect.inset(int,int)
android.graphics.Rect.printShortString(java.io.PrintWriter)
android.graphics.Rect.set(int,int,int,int)
android.graphics.Rect.toString()
android.graphics.Rect.unflattenFromString(java.lang.String)
android.graphics.Rect.width()
android.graphics.Rect.writeToParcel(android.os.Parcel,int)
android.graphics.RectF.centerX()
android.graphics.RectF.describeContents()
android.graphics.RectF.height()
android.graphics.RectF.offsetTo(float,float)
android.graphics.RectF.round(android.graphics.Rect)
android.graphics.RectF.sort()
android.graphics.RectF.toString()
android.graphics.RectF.union(float,float,float,float)
android.graphics.RectF.writeToParcel(android.os.Parcel,int)
android.graphics.Region$Op.valueOf(java.lang.String)
android.graphics.RegionIterator.finalize()
android.graphics.RegionIterator.nativeConstructor(int)
android.graphics.RegionIterator.nativeDestructor(int)
android.graphics.RegionIterator.nativeNext(int,android.graphics.Rect)
android.graphics.Shader$TileMode.valueOf(java.lang.String)
android.graphics.Shader.finalize()
android.graphics.Shader.nativeDestructor(int)
android.graphics.Shader.nativeGetLocalMatrix(int,int)
android.graphics.Shader.nativeSetLocalMatrix(int,int)
android.graphics.SumPathEffect.nativeCreate(int,int)
android.graphics.SweepGradient.nativeCreate1(float,float,[I,[F)
android.graphics.SweepGradient.nativeCreate2(float,float,int,int)
android.graphics.Typeface.createFromAsset(android.content.res.AssetManager,java.lang.String)
android.graphics.Typeface.createFromFile(java.io.File)
android.graphics.Typeface.createFromFile(java.lang.String)
android.graphics.Typeface.finalize()
android.graphics.Typeface.nativeCreate(java.lang.String,int)
android.graphics.Typeface.nativeCreateFromAsset(android.content.res.AssetManager,java.lang.String)
android.graphics.Typeface.nativeCreateFromFile(java.lang.String)
android.graphics.Typeface.nativeCreateFromTypeface(int,int)
android.graphics.Typeface.nativeGetStyle(int)
android.graphics.Typeface.nativeUnref(int)
android.graphics.Xfermode.finalize()
android.graphics.Xfermode.finalizer(int)
android.graphics.YuvImage.adjustRectangle(android.graphics.Rect)
android.graphics.YuvImage.calculateOffsets(int,int)
android.graphics.YuvImage.calculateStrides(int,int)
android.graphics.YuvImage.nativeCompressToJpeg([B,int,int,int,[I,[I,int,java.io.OutputStream,[B)
android.graphics.drawable.AnimationDrawable$AnimationState.addFrame(android.graphics.drawable.Drawable,int)
android.graphics.drawable.AnimationDrawable$AnimationState.growArray(int,int)
android.graphics.drawable.AnimationDrawable$AnimationState.newDrawable()
android.graphics.drawable.AnimationDrawable$AnimationState.newDrawable(android.content.res.Resources)
android.graphics.drawable.AnimationDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.AnimationDrawable.nextFrame(boolean)
android.graphics.drawable.AnimationDrawable.setFrame(int,boolean,boolean)
android.graphics.drawable.BitmapDrawable$BitmapState.getChangingConfigurations()
android.graphics.drawable.BitmapDrawable$BitmapState.newDrawable()
android.graphics.drawable.BitmapDrawable$BitmapState.newDrawable(android.content.res.Resources)
android.graphics.drawable.BitmapDrawable.<init>(android.content.res.Resources)
android.graphics.drawable.BitmapDrawable.<init>(android.content.res.Resources,android.graphics.Bitmap)
android.graphics.drawable.BitmapDrawable.<init>(android.content.res.Resources,java.io.InputStream)
android.graphics.drawable.BitmapDrawable.<init>(android.content.res.Resources,java.lang.String)
android.graphics.drawable.BitmapDrawable.computeBitmapSize()
android.graphics.drawable.BitmapDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.BitmapDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.BitmapDrawable.setBitmap(android.graphics.Bitmap)
android.graphics.drawable.BitmapDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.BitmapDrawable.setTargetDensity(android.util.DisplayMetrics)
android.graphics.drawable.BitmapDrawable.setTileModeX(android.graphics.Shader$TileMode)
android.graphics.drawable.BitmapDrawable.setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
android.graphics.drawable.BitmapDrawable.setTileModeY(android.graphics.Shader$TileMode)
android.graphics.drawable.ClipDrawable$ClipState.canConstantState()
android.graphics.drawable.ClipDrawable$ClipState.getChangingConfigurations()
android.graphics.drawable.ClipDrawable$ClipState.newDrawable()
android.graphics.drawable.ClipDrawable$ClipState.newDrawable(android.content.res.Resources)
android.graphics.drawable.ClipDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.ClipDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.ClipDrawable.onLevelChange(int)
android.graphics.drawable.ClipDrawable.onStateChange([I)
android.graphics.drawable.ClipDrawable.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
android.graphics.drawable.ClipDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.ClipDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
android.graphics.drawable.ColorDrawable$ColorState.getChangingConfigurations()
android.graphics.drawable.ColorDrawable$ColorState.newDrawable()
android.graphics.drawable.ColorDrawable$ColorState.newDrawable(android.content.res.Resources)
android.graphics.drawable.ColorDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.ColorDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.Drawable$ConstantState.<init>()
android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)
android.graphics.drawable.Drawable.<init>()
android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)
android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options)
android.graphics.drawable.Drawable.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)
android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.Drawable.drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,[B,android.graphics.Rect,java.lang.String)
android.graphics.drawable.Drawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.Drawable.inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)
android.graphics.drawable.Drawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.Drawable.onLevelChange(int)
android.graphics.drawable.Drawable.onStateChange([I)
android.graphics.drawable.Drawable.setColorFilter(int,android.graphics.PorterDuff$Mode)
android.graphics.drawable.Drawable.unscheduleSelf(java.lang.Runnable)
android.graphics.drawable.DrawableContainer$DrawableContainerState.addChild(android.graphics.drawable.Drawable)
android.graphics.drawable.DrawableContainer$DrawableContainerState.canConstantState()
android.graphics.drawable.DrawableContainer$DrawableContainerState.computeConstantSize()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getChangingConfigurations()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getChildCount()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getChildren()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantHeight()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumHeight()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantMinimumWidth()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantPadding()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getConstantWidth()
android.graphics.drawable.DrawableContainer$DrawableContainerState.getOpacity()
android.graphics.drawable.DrawableContainer$DrawableContainerState.growArray(int,int)
android.graphics.drawable.DrawableContainer$DrawableContainerState.isConstantSize()
android.graphics.drawable.DrawableContainer$DrawableContainerState.isStateful()
android.graphics.drawable.DrawableContainer$DrawableContainerState.setConstantSize(boolean)
android.graphics.drawable.DrawableContainer$DrawableContainerState.setVariablePadding(boolean)
android.graphics.drawable.DrawableContainer.mutate()
android.graphics.drawable.DrawableContainer.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.DrawableContainer.onLevelChange(int)
android.graphics.drawable.DrawableContainer.onStateChange([I)
android.graphics.drawable.DrawableContainer.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.DrawableContainer.setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
android.graphics.drawable.GradientDrawable$GradientState.<init>(android.graphics.drawable.GradientDrawable$GradientState)
android.graphics.drawable.GradientDrawable$GradientState.getChangingConfigurations()
android.graphics.drawable.GradientDrawable$GradientState.newDrawable()
android.graphics.drawable.GradientDrawable$GradientState.newDrawable(android.content.res.Resources)
android.graphics.drawable.GradientDrawable$GradientState.setCornerRadii([F)
android.graphics.drawable.GradientDrawable$GradientState.setCornerRadius(float)
android.graphics.drawable.GradientDrawable$GradientState.setGradientCenter(float,float)
android.graphics.drawable.GradientDrawable$GradientState.setGradientRadius(float)
android.graphics.drawable.GradientDrawable$GradientState.setGradientType(int)
android.graphics.drawable.GradientDrawable$GradientState.setShape(int)
android.graphics.drawable.GradientDrawable$GradientState.setSize(int,int)
android.graphics.drawable.GradientDrawable$GradientState.setSolidColor(int)
android.graphics.drawable.GradientDrawable$GradientState.setStroke(int,int)
android.graphics.drawable.GradientDrawable$GradientState.setStroke(int,int,float,float)
android.graphics.drawable.GradientDrawable$Orientation.valueOf(java.lang.String)
android.graphics.drawable.GradientDrawable.<init>(android.graphics.drawable.GradientDrawable$Orientation,[I)
android.graphics.drawable.GradientDrawable.buildRing(android.graphics.drawable.GradientDrawable$GradientState)
android.graphics.drawable.GradientDrawable.ensureValidRect()
android.graphics.drawable.GradientDrawable.getFloatOrFraction(android.content.res.TypedArray,int,float)
android.graphics.drawable.GradientDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.GradientDrawable.initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)
android.graphics.drawable.GradientDrawable.modulateAlpha(int)
android.graphics.drawable.GradientDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.GradientDrawable.onLevelChange(int)
android.graphics.drawable.GradientDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.InsetDrawable$InsetState.canConstantState()
android.graphics.drawable.InsetDrawable$InsetState.getChangingConfigurations()
android.graphics.drawable.InsetDrawable$InsetState.newDrawable()
android.graphics.drawable.InsetDrawable$InsetState.newDrawable(android.content.res.Resources)
android.graphics.drawable.InsetDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.InsetDrawable.mutate()
android.graphics.drawable.InsetDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.InsetDrawable.onStateChange([I)
android.graphics.drawable.InsetDrawable.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
android.graphics.drawable.InsetDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.InsetDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
android.graphics.drawable.LayerDrawable$LayerState.canConstantState()
android.graphics.drawable.LayerDrawable$LayerState.getChangingConfigurations()
android.graphics.drawable.LayerDrawable$LayerState.getOpacity()
android.graphics.drawable.LayerDrawable$LayerState.isStateful()
android.graphics.drawable.LayerDrawable$LayerState.newDrawable()
android.graphics.drawable.LayerDrawable$LayerState.newDrawable(android.content.res.Resources)
android.graphics.drawable.LayerDrawable.addLayer(android.graphics.drawable.Drawable,int,int,int,int,int)
android.graphics.drawable.LayerDrawable.createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)
android.graphics.drawable.LayerDrawable.ensurePadding()
android.graphics.drawable.LayerDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.LayerDrawable.mutate()
android.graphics.drawable.LayerDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.LayerDrawable.onLevelChange(int)
android.graphics.drawable.LayerDrawable.onStateChange([I)
android.graphics.drawable.LayerDrawable.reapplyPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)
android.graphics.drawable.LayerDrawable.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
android.graphics.drawable.LayerDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.LayerDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
android.graphics.drawable.LevelListDrawable$LevelListState.addLevel(int,int,android.graphics.drawable.Drawable)
android.graphics.drawable.LevelListDrawable$LevelListState.growArray(int,int)
android.graphics.drawable.LevelListDrawable$LevelListState.indexOfLevel(int)
android.graphics.drawable.LevelListDrawable$LevelListState.newDrawable()
android.graphics.drawable.LevelListDrawable$LevelListState.newDrawable(android.content.res.Resources)
android.graphics.drawable.LevelListDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.LevelListDrawable.onLevelChange(int)
android.graphics.drawable.NinePatchDrawable$NinePatchState.getChangingConfigurations()
android.graphics.drawable.NinePatchDrawable$NinePatchState.newDrawable()
android.graphics.drawable.NinePatchDrawable$NinePatchState.newDrawable(android.content.res.Resources)
android.graphics.drawable.NinePatchDrawable.<init>(android.content.res.Resources,android.graphics.Bitmap,[B,android.graphics.Rect,java.lang.String)
android.graphics.drawable.NinePatchDrawable.<init>(android.content.res.Resources,android.graphics.NinePatch)
android.graphics.drawable.NinePatchDrawable.<init>(android.graphics.NinePatch)
android.graphics.drawable.NinePatchDrawable.computeBitmapSize()
android.graphics.drawable.NinePatchDrawable.draw(android.graphics.Canvas)
android.graphics.drawable.NinePatchDrawable.getChangingConfigurations()
android.graphics.drawable.NinePatchDrawable.getConstantState()
android.graphics.drawable.NinePatchDrawable.getIntrinsicHeight()
android.graphics.drawable.NinePatchDrawable.getIntrinsicWidth()
android.graphics.drawable.NinePatchDrawable.getMinimumHeight()
android.graphics.drawable.NinePatchDrawable.getMinimumWidth()
android.graphics.drawable.NinePatchDrawable.getOpacity()
android.graphics.drawable.NinePatchDrawable.getPadding(android.graphics.Rect)
android.graphics.drawable.NinePatchDrawable.getPaint()
android.graphics.drawable.NinePatchDrawable.getTransparentRegion()
android.graphics.drawable.NinePatchDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.NinePatchDrawable.mutate()
android.graphics.drawable.NinePatchDrawable.setAlpha(int)
android.graphics.drawable.NinePatchDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.NinePatchDrawable.setDither(boolean)
android.graphics.drawable.NinePatchDrawable.setFilterBitmap(boolean)
android.graphics.drawable.NinePatchDrawable.setNinePatchState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)
android.graphics.drawable.NinePatchDrawable.setTargetDensity(android.graphics.Canvas)
android.graphics.drawable.NinePatchDrawable.setTargetDensity(android.util.DisplayMetrics)
android.graphics.drawable.NinePatchDrawable.setTargetDensity(int)
android.graphics.drawable.PaintDrawable.inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.PaintDrawable.setCornerRadii([F)
android.graphics.drawable.PictureDrawable.<init>(android.graphics.Picture)
android.graphics.drawable.PictureDrawable.draw(android.graphics.Canvas)
android.graphics.drawable.PictureDrawable.getIntrinsicHeight()
android.graphics.drawable.PictureDrawable.getIntrinsicWidth()
android.graphics.drawable.PictureDrawable.getOpacity()
android.graphics.drawable.PictureDrawable.getPicture()
android.graphics.drawable.PictureDrawable.setAlpha(int)
android.graphics.drawable.PictureDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.PictureDrawable.setDither(boolean)
android.graphics.drawable.PictureDrawable.setFilterBitmap(boolean)
android.graphics.drawable.PictureDrawable.setPicture(android.graphics.Picture)
android.graphics.drawable.RotateDrawable$RotateState.<init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources)
android.graphics.drawable.RotateDrawable$RotateState.canConstantState()
android.graphics.drawable.RotateDrawable$RotateState.getChangingConfigurations()
android.graphics.drawable.RotateDrawable$RotateState.newDrawable()
android.graphics.drawable.RotateDrawable$RotateState.newDrawable(android.content.res.Resources)
android.graphics.drawable.RotateDrawable.draw(android.graphics.Canvas)
android.graphics.drawable.RotateDrawable.getChangingConfigurations()
android.graphics.drawable.RotateDrawable.getConstantState()
android.graphics.drawable.RotateDrawable.getIntrinsicHeight()
android.graphics.drawable.RotateDrawable.getIntrinsicWidth()
android.graphics.drawable.RotateDrawable.getOpacity()
android.graphics.drawable.RotateDrawable.getPadding(android.graphics.Rect)
android.graphics.drawable.RotateDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.RotateDrawable.isStateful()
android.graphics.drawable.RotateDrawable.mutate()
android.graphics.drawable.RotateDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.RotateDrawable.onLevelChange(int)
android.graphics.drawable.RotateDrawable.onStateChange([I)
android.graphics.drawable.RotateDrawable.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
android.graphics.drawable.RotateDrawable.setAlpha(int)
android.graphics.drawable.RotateDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.RotateDrawable.setVisible(boolean,boolean)
android.graphics.drawable.RotateDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
android.graphics.drawable.ScaleDrawable$ScaleState.canConstantState()
android.graphics.drawable.ScaleDrawable$ScaleState.getChangingConfigurations()
android.graphics.drawable.ScaleDrawable$ScaleState.newDrawable()
android.graphics.drawable.ScaleDrawable$ScaleState.newDrawable(android.content.res.Resources)
android.graphics.drawable.ScaleDrawable.getPercent(android.content.res.TypedArray,int)
android.graphics.drawable.ScaleDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.ScaleDrawable.mutate()
android.graphics.drawable.ScaleDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.ScaleDrawable.onLevelChange(int)
android.graphics.drawable.ScaleDrawable.onStateChange([I)
android.graphics.drawable.ScaleDrawable.scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
android.graphics.drawable.ScaleDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.ScaleDrawable.unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
android.graphics.drawable.ShapeDrawable$ShaderFactory.<init>()
android.graphics.drawable.ShapeDrawable$ShapeState.getChangingConfigurations()
android.graphics.drawable.ShapeDrawable$ShapeState.newDrawable()
android.graphics.drawable.ShapeDrawable$ShapeState.newDrawable(android.content.res.Resources)
android.graphics.drawable.ShapeDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.ShapeDrawable.inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.ShapeDrawable.modulateAlpha(int,int)
android.graphics.drawable.ShapeDrawable.onBoundsChange(android.graphics.Rect)
android.graphics.drawable.ShapeDrawable.onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)
android.graphics.drawable.ShapeDrawable.setColorFilter(android.graphics.ColorFilter)
android.graphics.drawable.ShapeDrawable.setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)
android.graphics.drawable.ShapeDrawable.updateShape()
android.graphics.drawable.StateListDrawable$StateListState.addStateSet([I,android.graphics.drawable.Drawable)
android.graphics.drawable.StateListDrawable$StateListState.growArray(int,int)
android.graphics.drawable.StateListDrawable$StateListState.indexOfStateSet([I)
android.graphics.drawable.StateListDrawable$StateListState.newDrawable()
android.graphics.drawable.StateListDrawable$StateListState.newDrawable(android.content.res.Resources)
android.graphics.drawable.StateListDrawable.getStateListState()
android.graphics.drawable.StateListDrawable.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.graphics.drawable.StateListDrawable.onStateChange([I)
android.graphics.drawable.TransitionDrawable$TransitionState.getChangingConfigurations()
android.graphics.drawable.TransitionDrawable$TransitionState.newDrawable()
android.graphics.drawable.TransitionDrawable$TransitionState.newDrawable(android.content.res.Resources)
android.graphics.drawable.TransitionDrawable.createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)
android.graphics.drawable.shapes.PathShape.clone()
android.graphics.drawable.shapes.PathShape.draw(android.graphics.Canvas,android.graphics.Paint)
android.graphics.drawable.shapes.PathShape.onResize(float,float)
android.graphics.drawable.shapes.RectShape.onResize(float,float)
android.graphics.drawable.shapes.RectShape.rect()
android.graphics.drawable.shapes.RoundRectShape.<init>([F,android.graphics.RectF,[F)
android.graphics.drawable.shapes.RoundRectShape.clone()
android.graphics.drawable.shapes.RoundRectShape.draw(android.graphics.Canvas,android.graphics.Paint)
android.graphics.drawable.shapes.RoundRectShape.onResize(float,float)
android.graphics.drawable.shapes.Shape.<init>()
android.graphics.drawable.shapes.Shape.clone()
android.graphics.drawable.shapes.Shape.onResize(float,float)
android.hardware.Camera$EventHandler.<init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper)
android.hardware.Camera$EventHandler.handleMessage(android.os.Message)
android.hardware.Camera$Parameters.getFloat(java.lang.String,float)
android.hardware.Camera$Size.hashCode()
android.hardware.Camera.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
android.hardware.Camera.startSmoothZoom(int)
android.hardware.Camera.stopSmoothZoom()
android.hardware.GeomagneticField$LegendreTable.<init>(int,float)
android.hardware.GeomagneticField.computeGeocentricCoordinates(float,float,float)
android.hardware.GeomagneticField.computeSchmidtQuasiNormFactors(int)
android.hardware.Sensor.getHandle()
android.hardware.Sensor.setLegacyType(int)
android.hardware.SensorManager$LegacyListener.mapSensorDataToWindow(int,[F,int)
android.hardware.SensorManager$LegacyListener.onAccuracyChanged(android.hardware.Sensor,int)
android.hardware.SensorManager$LegacyListener.onSensorChanged(android.hardware.SensorEvent)
android.hardware.SensorManager$LegacyListener.registerSensor(int)
android.hardware.SensorManager$LegacyListener.unregisterSensor(int)
android.hardware.SensorManager$ListenerDelegate.addSensor(android.hardware.Sensor)
android.hardware.SensorManager$ListenerDelegate.createSensorEvent()
android.hardware.SensorManager$ListenerDelegate.getFromPool()
android.hardware.SensorManager$ListenerDelegate.getListener()
android.hardware.SensorManager$ListenerDelegate.getSensors()
android.hardware.SensorManager$ListenerDelegate.hasSensor(android.hardware.Sensor)
android.hardware.SensorManager$ListenerDelegate.onSensorChangedLocked(android.hardware.Sensor,[F,[J,int)
android.hardware.SensorManager$ListenerDelegate.removeSensor(android.hardware.Sensor)
android.hardware.SensorManager$ListenerDelegate.returnToPool(android.hardware.SensorEvent)
android.hardware.SensorManager$SensorThread$SensorThreadRunnable.open()
android.hardware.SensorManager$SensorThread$SensorThreadRunnable.run()
android.hardware.SensorManager$SensorThread.finalize()
android.hardware.SensorManager$SensorThread.startLocked(android.hardware.ISensorService)
android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl.<init>(android.inputmethodservice.AbstractInputMethodService)
android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl.createSession(android.view.inputmethod.InputMethod$SessionCallback)
android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl.<init>(android.inputmethodservice.AbstractInputMethodService)
android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl.dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession$EventCallback)
android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl.dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession$EventCallback)
android.inputmethodservice.AbstractInputMethodService.<init>()
android.inputmethodservice.AbstractInputMethodService.dump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String;)
android.inputmethodservice.AbstractInputMethodService.onBind(android.content.Intent)
android.inputmethodservice.AbstractInputMethodService.onTrackballEvent(android.view.MotionEvent)
android.inputmethodservice.ExtractEditText.setIME(android.inputmethodservice.InputMethodService)
android.inputmethodservice.InputMethodService$InputMethodImpl.attachToken(android.os.IBinder)
android.inputmethodservice.InputMethodService$InputMethodImpl.showSoftInput(int,android.os.ResultReceiver)
android.inputmethodservice.InputMethodService$InputMethodSessionImpl.toggleSoftInput(int,int)
android.inputmethodservice.InputMethodService.dump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String;)
android.inputmethodservice.InputMethodService.getMaxWidth()
android.inputmethodservice.InputMethodService.hideStatusIcon()
android.inputmethodservice.InputMethodService.initViews()
android.inputmethodservice.InputMethodService.onComputeInsets(android.inputmethodservice.InputMethodService$Insets)
android.inputmethodservice.InputMethodService.onConfigurationChanged(android.content.res.Configuration)
android.inputmethodservice.InputMethodService.onConfigureWindow(android.view.Window,boolean,boolean)
android.inputmethodservice.InputMethodService.onCreate()
android.inputmethodservice.InputMethodService.onCreateExtractTextView()
android.inputmethodservice.InputMethodService.onDestroy()
android.inputmethodservice.InputMethodService.onEvaluateFullscreenMode()
android.inputmethodservice.InputMethodService.onEvaluateInputViewShown()
android.inputmethodservice.InputMethodService.onExtractingInputChanged(android.view.inputmethod.EditorInfo)
android.inputmethodservice.InputMethodService.onShowInputRequested(int,boolean)
android.inputmethodservice.InputMethodService.onToggleSoftInput(int,int)
android.inputmethodservice.InputMethodService.onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)
android.inputmethodservice.InputMethodService.requestHideSelf(int)
android.inputmethodservice.InputMethodService.requestShowSelf(int)
android.inputmethodservice.InputMethodService.setCandidatesView(android.view.View)
android.inputmethodservice.InputMethodService.setCandidatesViewShown(boolean)
android.inputmethodservice.InputMethodService.setExtractView(android.view.View)
android.inputmethodservice.InputMethodService.setInputView(android.view.View)
android.inputmethodservice.InputMethodService.showStatusIcon(int)
android.inputmethodservice.InputMethodService.switchInputMethod(java.lang.String)
android.inputmethodservice.InputMethodService.updateExtractFrameVisibility()
android.inputmethodservice.Keyboard$Key.<init>(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)
android.inputmethodservice.Keyboard$Row.<init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)
android.inputmethodservice.Keyboard.<init>(android.content.Context,int)
android.inputmethodservice.Keyboard.<init>(android.content.Context,int,int)
android.inputmethodservice.Keyboard.<init>(android.content.Context,int,java.lang.CharSequence,int,int)
android.inputmethodservice.Keyboard.computeNearestNeighbors()
android.inputmethodservice.Keyboard.createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)
android.inputmethodservice.Keyboard.createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)
android.inputmethodservice.Keyboard.getDimensionOrFraction(android.content.res.TypedArray,int,int,int)
android.inputmethodservice.Keyboard.loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)
android.inputmethodservice.Keyboard.parseKeyboardAttributes(android.content.res.Resources,android.content.res.XmlResourceParser)
android.inputmethodservice.Keyboard.skipToEndOfRow(android.content.res.XmlResourceParser)
android.inputmethodservice.KeyboardView$SwipeTracker.addMovement(android.view.MotionEvent)
android.inputmethodservice.KeyboardView$SwipeTracker.addPoint(float,float,long)
android.inputmethodservice.KeyboardView$SwipeTracker.clear()
android.inputmethodservice.KeyboardView$SwipeTracker.computeCurrentVelocity(int)
android.inputmethodservice.KeyboardView$SwipeTracker.computeCurrentVelocity(int,float)
android.inputmethodservice.KeyboardView$SwipeTracker.getXVelocity()
android.inputmethodservice.KeyboardView$SwipeTracker.getYVelocity()
android.inputmethodservice.KeyboardView.<init>(android.content.Context,android.util.AttributeSet,int)
android.inputmethodservice.KeyboardView.adjustCase(java.lang.CharSequence)
android.inputmethodservice.KeyboardView.checkMultiTap(long,int)
android.inputmethodservice.KeyboardView.detectAndSendKey(int,int,int,long)
android.inputmethodservice.KeyboardView.getKeyIndices(int,int,[I)
android.inputmethodservice.KeyboardView.getPreviewText(android.inputmethodservice.Keyboard$Key)
android.inputmethodservice.KeyboardView.onModifiedTouchEvent(android.view.MotionEvent,boolean)
android.inputmethodservice.KeyboardView.repeatKey()
android.inputmethodservice.KeyboardView.showKey(int)
android.inputmethodservice.KeyboardView.showPreview(int)
android.location.Geocoder.getFromLocation(double,double,int)
android.location.Geocoder.getFromLocationName(java.lang.String,int)
android.location.Geocoder.getFromLocationName(java.lang.String,int,double,double,double,double)
android.location.GpsSatellite.getAzimuth()
android.location.GpsSatellite.getElevation()
android.location.GpsSatellite.getPrn()
android.location.GpsSatellite.getSnr()
android.location.GpsSatellite.hasAlmanac()
android.location.GpsSatellite.hasEphemeris()
android.location.GpsSatellite.setStatus(android.location.GpsSatellite)
android.location.GpsSatellite.usedInFix()
android.location.GpsStatus$SatelliteIterator.hasNext()
android.location.GpsStatus$SatelliteIterator.next()
android.location.GpsStatus$SatelliteIterator.remove()
android.location.GpsStatus.setStatus(android.location.GpsStatus)
android.location.GpsStatus.setStatus(int,[I,[F,[F,[F,int,int,int)
android.location.GpsStatus.setTimeToFirstFix(int)
android.location.Location.computeDistanceAndBearing(double,double,double,double,[F)
android.location.Location.convert(java.lang.String)
android.location.LocationManager$GpsStatusListenerTransport.onFirstFix(int)
android.location.LocationManager$GpsStatusListenerTransport.onGpsStarted()
android.location.LocationManager$GpsStatusListenerTransport.onGpsStopped()
android.location.LocationManager$GpsStatusListenerTransport.onNmeaReceived(long,java.lang.String)
android.location.LocationManager$GpsStatusListenerTransport.onSvStatusChanged(int,[I,[F,[F,[F,int,int,int)
android.location.LocationManager$ListenerTransport._handleMessage(android.os.Message)
android.location.LocationManager$ListenerTransport.onLocationChanged(android.location.Location)
android.location.LocationManager$ListenerTransport.onProviderDisabled(java.lang.String)
android.location.LocationManager$ListenerTransport.onProviderEnabled(java.lang.String)
android.location.LocationManager$ListenerTransport.onStatusChanged(java.lang.String,int,android.os.Bundle)
android.location.LocationManager$LpAccuracyComparator.compare(android.location.LocationProvider,android.location.LocationProvider)
android.location.LocationManager$LpAccuracyComparator.equals(android.location.LocationProvider,android.location.LocationProvider)
android.location.LocationManager$LpCapabilityComparator.compare(android.location.LocationProvider,android.location.LocationProvider)
android.location.LocationManager$LpCapabilityComparator.equals(android.location.LocationProvider,android.location.LocationProvider)
android.location.LocationManager$LpCapabilityComparator.score(android.location.LocationProvider)
android.location.LocationManager$LpComparator.compare(float,float)
android.location.LocationManager$LpComparator.compare(int,int)
android.location.LocationManager$LpPowerComparator.compare(android.location.LocationProvider,android.location.LocationProvider)
android.location.LocationManager$LpPowerComparator.equals(android.location.LocationProvider,android.location.LocationProvider)
android.location.LocationManager.sendNiResponse(int,int)
android.location.LocationProvider.<init>(java.lang.String)
android.location.LocationProvider.getName()
android.location.LocationProvider.meetsCriteria(android.location.Criteria)
android.media.AsyncPlayer$Command.toString()
android.media.AsyncPlayer$Thread.run()
android.media.AudioManager$FocusEventHandlerDelegate.getHandler()
android.media.AudioRecord$NativeEventHandler.handleMessage(android.os.Message)
android.media.AudioRecord.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
android.media.AudioTrack$NativeEventHandlerDelegate.getHandler()
android.media.AudioTrack.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
android.media.CamcorderProfile.native_get_camcorder_profile(int)
android.media.CamcorderProfile.native_init()
android.media.CameraProfile.getImageEncodingQualityLevels()
android.media.CameraProfile.native_get_image_encoding_quality_level(int)
android.media.CameraProfile.native_get_num_image_encoding_quality_levels()
android.media.CameraProfile.native_init()
android.media.ExifInterface.appendThumbnailNative(java.lang.String,java.lang.String)
android.media.ExifInterface.commitChangesNative(java.lang.String)
android.media.ExifInterface.convertRationalLatLonToFloat(java.lang.String,java.lang.String)
android.media.ExifInterface.getAttributesNative(java.lang.String)
android.media.ExifInterface.getThumbnailNative(java.lang.String)
android.media.ExifInterface.loadAttributes()
android.media.ExifInterface.saveAttributesNative(java.lang.String,java.lang.String)
android.media.FaceDetector$Face.confidence()
android.media.FaceDetector$Face.eyesDistance()
android.media.FaceDetector$Face.getMidPoint(android.graphics.PointF)
android.media.FaceDetector$Face.pose(int)
android.media.FaceDetector.fft_destroy()
android.media.FaceDetector.fft_detect(android.graphics.Bitmap)
android.media.FaceDetector.fft_get_face(android.media.FaceDetector$Face,int)
android.media.FaceDetector.fft_initialize(int,int,int)
android.media.FaceDetector.finalize()
android.media.FaceDetector.findFaces(android.graphics.Bitmap,[Landroid.media.FaceDetector$Face;)
android.media.FaceDetector.nativeClassInit()
android.media.JetPlayer$NativeEventHandler.<init>(android.media.JetPlayer,android.media.JetPlayer,android.os.Looper)
android.media.JetPlayer$NativeEventHandler.handleMessage(android.os.Message)
android.media.JetPlayer.clone()
android.media.JetPlayer.finalize()
android.media.JetPlayer.loadJetFile(android.content.res.AssetFileDescriptor)
android.media.JetPlayer.logd(java.lang.String)
android.media.JetPlayer.loge(java.lang.String)
android.media.JetPlayer.native_clearQueue()
android.media.JetPlayer.native_closeJetFile()
android.media.JetPlayer.native_finalize()
android.media.JetPlayer.native_loadJetFromFile(java.lang.String)
android.media.JetPlayer.native_loadJetFromFileD(java.io.FileDescriptor,long,long)
android.media.JetPlayer.native_pauseJet()
android.media.JetPlayer.native_playJet()
android.media.JetPlayer.native_queueJetSegment(int,int,int,int,int,byte)
android.media.JetPlayer.native_queueJetSegmentMuteArray(int,int,int,int,[Z,byte)
android.media.JetPlayer.native_release()
android.media.JetPlayer.native_setMuteArray([Z,boolean)
android.media.JetPlayer.native_setMuteFlag(int,boolean,boolean)
android.media.JetPlayer.native_setMuteFlags(int,boolean)
android.media.JetPlayer.native_setup(java.lang.Object,int,int)
android.media.JetPlayer.native_triggerClip(int)
android.media.JetPlayer.postEventFromNative(java.lang.Object,int,int,int)
android.media.JetPlayer.setEventListener(android.media.JetPlayer$OnJetEventListener)
android.media.JetPlayer.setEventListener(android.media.JetPlayer$OnJetEventListener,android.os.Handler)
android.media.MediaPlayer$EventHandler.<init>(android.media.MediaPlayer,android.media.MediaPlayer,android.os.Looper)
android.media.MediaPlayer$EventHandler.handleMessage(android.os.Message)
android.media.MediaPlayer.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
android.media.MediaRecorder$EventHandler.<init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)
android.media.MediaRecorder$EventHandler.handleMessage(android.os.Message)
android.media.MediaRecorder._prepare()
android.media.MediaRecorder.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
android.media.MediaScannerConnection$ClientProxy.onMediaScannerConnected()
android.media.MediaScannerConnection$ClientProxy.onScanCompleted(java.lang.String,android.net.Uri)
android.media.MediaScannerConnection$ClientProxy.scanNextPath()
android.media.MediaScannerConnection.scanFile(android.content.Context,[Ljava.lang.String;,[Ljava.lang.String;,android.media.MediaScannerConnection$OnScanCompletedListener)
android.media.MediaScannerConnection.scanFile(java.lang.String,java.lang.String)
android.media.Ringtone.open(android.content.res.AssetFileDescriptor)
android.media.RingtoneManager.getUriFromCursor(android.database.Cursor)
android.media.SoundPool$EventHandler.<init>(android.media.SoundPool,android.media.SoundPool,android.os.Looper)
android.media.SoundPool$EventHandler.handleMessage(android.os.Message)
android.media.SoundPool.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
android.media.ThumbnailUtils.closeSilently(android.os.ParcelFileDescriptor)
android.media.ThumbnailUtils.computeInitialSampleSize(android.graphics.BitmapFactory$Options,int,int)
android.media.ThumbnailUtils.computeSampleSize(android.graphics.BitmapFactory$Options,int,int)
android.media.ThumbnailUtils.createThumbnailFromEXIF(java.lang.String,int,int,android.media.ThumbnailUtils$SizedThumbnailBitmap)
android.media.ThumbnailUtils.makeBitmap(int,int,android.net.Uri,android.content.ContentResolver,android.os.ParcelFileDescriptor,android.graphics.BitmapFactory$Options)
android.media.ThumbnailUtils.makeInputStream(android.net.Uri,android.content.ContentResolver)
android.media.ThumbnailUtils.transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int)
android.media.ToneGenerator.finalize()
android.media.ToneGenerator.native_finalize()
android.media.ToneGenerator.native_setup(int,int)
android.net.DhcpInfo.putAddress(java.lang.StringBuffer,int)
android.net.LocalSocket.connect(android.net.LocalSocketAddress,int)
android.net.LocalSocket.getRemoteSocketAddress()
android.net.LocalSocket.isClosed()
android.net.LocalSocket.isInputShutdown()
android.net.LocalSocket.isOutputShutdown()
android.net.MailTo.getBody()
android.net.MailTo.getCc()
android.net.MailTo.getHeaders()
android.net.MailTo.getSubject()
android.net.MailTo.getTo()
android.net.MailTo.parse(java.lang.String)
android.net.MailTo.toString()
android.net.NetworkInfo$DetailedState.valueOf(java.lang.String)
android.net.NetworkInfo$State.valueOf(java.lang.String)
android.net.NetworkInfo.setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)
android.net.NetworkInfo.setRoaming(boolean)
android.net.NetworkInfo.setSubtype(int,java.lang.String)
android.net.NetworkInfo.writeToParcel(android.os.Parcel,int)
android.net.SSLCertificateSocketFactory.createSocket(java.lang.String,int)
android.net.SSLCertificateSocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)
android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress,int,java.net.InetAddress,int)
android.net.SSLCertificateSocketFactory.createSocket(java.net.Socket,java.lang.String,int,boolean)
android.net.SSLCertificateSocketFactory.makeSocketFactory([Ljavax.net.ssl.TrustManager;)
android.net.SSLCertificateSocketFactory.verifyHostname(java.net.Socket,java.lang.String)
android.net.SSLSessionCache.<init>(java.io.File)
android.net.Uri$AbstractHierarchicalUri.getEncodedUserInfo()
android.net.Uri$AbstractHierarchicalUri.getHost()
android.net.Uri$AbstractHierarchicalUri.getLastPathSegment()
android.net.Uri$AbstractHierarchicalUri.getPort()
android.net.Uri$AbstractHierarchicalUri.getUserInfo()
android.net.Uri$AbstractHierarchicalUri.getUserInfoPart()
android.net.Uri$AbstractHierarchicalUri.parseHost()
android.net.Uri$AbstractHierarchicalUri.parsePort()
android.net.Uri$AbstractHierarchicalUri.parseUserInfo()
android.net.Uri$AbstractPart.getDecoded()
android.net.Uri$AbstractPart.writeTo(android.os.Parcel)
android.net.Uri$Builder.authority(android.net.Uri$Part)
android.net.Uri$Builder.fragment(android.net.Uri$Part)
android.net.Uri$Builder.hasSchemeOrAuthority()
android.net.Uri$Builder.opaquePart(android.net.Uri$Part)
android.net.Uri$Builder.path(android.net.Uri$PathPart)
android.net.Uri$Builder.query(android.net.Uri$Part)
android.net.Uri$HierarchicalUri.appendSspTo(java.lang.StringBuilder)
android.net.Uri$HierarchicalUri.buildUpon()
android.net.Uri$HierarchicalUri.describeContents()
android.net.Uri$HierarchicalUri.getAuthority()
android.net.Uri$HierarchicalUri.getEncodedAuthority()
android.net.Uri$HierarchicalUri.getEncodedFragment()
android.net.Uri$HierarchicalUri.getEncodedPath()
android.net.Uri$HierarchicalUri.getEncodedQuery()
android.net.Uri$HierarchicalUri.getEncodedSchemeSpecificPart()
android.net.Uri$HierarchicalUri.getFragment()
android.net.Uri$HierarchicalUri.getPath()
android.net.Uri$HierarchicalUri.getPathSegments()
android.net.Uri$HierarchicalUri.getQuery()
android.net.Uri$HierarchicalUri.getScheme()
android.net.Uri$HierarchicalUri.getSchemeSpecificPart()
android.net.Uri$HierarchicalUri.getSsp()
android.net.Uri$HierarchicalUri.isHierarchical()
android.net.Uri$HierarchicalUri.isRelative()
android.net.Uri$HierarchicalUri.makeSchemeSpecificPart()
android.net.Uri$HierarchicalUri.makeUriString()
android.net.Uri$HierarchicalUri.readFrom(android.os.Parcel)
android.net.Uri$HierarchicalUri.toString()
android.net.Uri$HierarchicalUri.writeToParcel(android.os.Parcel,int)
android.net.Uri$OpaqueUri.buildUpon()
android.net.Uri$OpaqueUri.describeContents()
android.net.Uri$OpaqueUri.getAuthority()
android.net.Uri$OpaqueUri.getEncodedAuthority()
android.net.Uri$OpaqueUri.getEncodedFragment()
android.net.Uri$OpaqueUri.getEncodedPath()
android.net.Uri$OpaqueUri.getEncodedQuery()
android.net.Uri$OpaqueUri.getEncodedSchemeSpecificPart()
android.net.Uri$OpaqueUri.getEncodedUserInfo()
android.net.Uri$OpaqueUri.getFragment()
android.net.Uri$OpaqueUri.getHost()
android.net.Uri$OpaqueUri.getLastPathSegment()
android.net.Uri$OpaqueUri.getPath()
android.net.Uri$OpaqueUri.getPathSegments()
android.net.Uri$OpaqueUri.getPort()
android.net.Uri$OpaqueUri.getQuery()
android.net.Uri$OpaqueUri.getScheme()
android.net.Uri$OpaqueUri.getSchemeSpecificPart()
android.net.Uri$OpaqueUri.getUserInfo()
android.net.Uri$OpaqueUri.isHierarchical()
android.net.Uri$OpaqueUri.isRelative()
android.net.Uri$OpaqueUri.readFrom(android.os.Parcel)
android.net.Uri$OpaqueUri.toString()
android.net.Uri$OpaqueUri.writeToParcel(android.os.Parcel,int)
android.net.Uri$Part$EmptyPart.<init>(java.lang.String)
android.net.Uri$Part$EmptyPart.isEmpty()
android.net.Uri$Part.from(java.lang.String,java.lang.String)
android.net.Uri$Part.fromDecoded(java.lang.String)
android.net.Uri$Part.fromEncoded(java.lang.String)
android.net.Uri$Part.getEncoded()
android.net.Uri$Part.isEmpty()
android.net.Uri$Part.nonNull(android.net.Uri$Part)
android.net.Uri$Part.readFrom(android.os.Parcel)
android.net.Uri$PathPart.appendDecodedSegment(android.net.Uri$PathPart,java.lang.String)
android.net.Uri$PathPart.appendEncodedSegment(android.net.Uri$PathPart,java.lang.String)
android.net.Uri$PathPart.from(java.lang.String,java.lang.String)
android.net.Uri$PathPart.fromDecoded(java.lang.String)
android.net.Uri$PathPart.fromEncoded(java.lang.String)
android.net.Uri$PathPart.getEncoded()
android.net.Uri$PathPart.getPathSegments()
android.net.Uri$PathPart.makeAbsolute(android.net.Uri$PathPart)
android.net.Uri$PathPart.readFrom(android.os.Parcel)
android.net.Uri$PathSegments.get(int)
android.net.Uri$PathSegments.size()
android.net.Uri$PathSegmentsBuilder.add(java.lang.String)
android.net.Uri$PathSegmentsBuilder.build()
android.net.Uri$StringUri.buildUpon()
android.net.Uri$StringUri.describeContents()
android.net.Uri$StringUri.findFragmentSeparator()
android.net.Uri$StringUri.findSchemeSeparator()
android.net.Uri$StringUri.getAuthority()
android.net.Uri$StringUri.getAuthorityPart()
android.net.Uri$StringUri.getEncodedAuthority()
android.net.Uri$StringUri.getEncodedFragment()
android.net.Uri$StringUri.getEncodedPath()
android.net.Uri$StringUri.getEncodedQuery()
android.net.Uri$StringUri.getEncodedSchemeSpecificPart()
android.net.Uri$StringUri.getFragment()
android.net.Uri$StringUri.getFragmentPart()
android.net.Uri$StringUri.getPath()
android.net.Uri$StringUri.getPathPart()
android.net.Uri$StringUri.getPathSegments()
android.net.Uri$StringUri.getQuery()
android.net.Uri$StringUri.getQueryPart()
android.net.Uri$StringUri.getScheme()
android.net.Uri$StringUri.getSchemeSpecificPart()
android.net.Uri$StringUri.getSsp()
android.net.Uri$StringUri.isHierarchical()
android.net.Uri$StringUri.isRelative()
android.net.Uri$StringUri.parseAuthority(java.lang.String,int)
android.net.Uri$StringUri.parseFragment()
android.net.Uri$StringUri.parsePath()
android.net.Uri$StringUri.parsePath(java.lang.String,int)
android.net.Uri$StringUri.parseQuery()
android.net.Uri$StringUri.parseScheme()
android.net.Uri$StringUri.parseSsp()
android.net.Uri$StringUri.readFrom(android.os.Parcel)
android.net.Uri$StringUri.toString()
android.net.Uri$StringUri.writeToParcel(android.os.Parcel,int)
android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer.characterIsLegal(char)
android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer.isWhitespace(char)
android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer.trimWhitespace(java.lang.String)
android.net.UrlQuerySanitizer.addSanitizedEntry(java.lang.String,java.lang.String)
android.net.UrlQuerySanitizer.clear()
android.net.UrlQuerySanitizer.decodeHexDigit(char)
android.net.UrlQuerySanitizer.isHexDigit(char)
android.net.UrlQuerySanitizer.parseEntry(java.lang.String,java.lang.String)
android.net.http.AndroidHttpClient$CurlLogger.process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
android.net.http.AndroidHttpClient$LoggingConfiguration.isLoggable()
android.net.http.AndroidHttpClient$LoggingConfiguration.println(java.lang.String)
android.net.http.AndroidHttpClient.enableCurlLogging(java.lang.String,int)
android.net.http.AndroidHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)
android.net.http.AndroidHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)
android.net.http.AndroidHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
android.net.http.AndroidHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
android.net.http.AndroidHttpClient.execute(org.apache.http.client.methods.HttpUriRequest)
android.net.http.AndroidHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)
android.net.http.AndroidHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
android.net.http.AndroidHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)
android.net.http.AndroidHttpClient.finalize()
android.net.http.AndroidHttpClient.modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)
android.net.http.AndroidHttpClient.parseDate(java.lang.String)
android.net.http.AndroidHttpClient.toCurl(org.apache.http.client.methods.HttpUriRequest,boolean)
android.net.http.SslCertificate.<init>(java.security.cert.X509Certificate)
android.net.http.SslCertificate.cloneDate(java.util.Date)
android.net.http.SslCertificate.formatDate(java.util.Date)
android.net.http.SslCertificate.parseDate(java.lang.String)
android.net.http.SslError.<init>(int,android.net.http.SslCertificate)
android.net.http.SslError.<init>(int,java.security.cert.X509Certificate)
android.net.http.SslError.addError(int)
android.net.http.SslError.getCertificate()
android.net.http.SslError.getPrimaryError()
android.net.http.SslError.hasError(int)
android.net.http.SslError.toString()
android.net.wifi.WifiConfiguration$EnterpriseField.setValue(java.lang.String)
android.net.wifi.WifiConfiguration$EnterpriseField.value()
android.net.wifi.WifiConfiguration$EnterpriseField.varName()
android.net.wifi.WifiConfiguration.readBitSet(android.os.Parcel)
android.net.wifi.WifiConfiguration.writeBitSet(android.os.Parcel,java.util.BitSet)
android.opengl.ETC1.decodeBlock(java.nio.Buffer,java.nio.Buffer)
android.opengl.ETC1.decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)
android.opengl.ETC1.encodeBlock(java.nio.Buffer,int,java.nio.Buffer)
android.opengl.ETC1.encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)
android.opengl.ETC1.formatHeader(java.nio.Buffer,int,int)
android.opengl.ETC1.getHeight(java.nio.Buffer)
android.opengl.ETC1.getWidth(java.nio.Buffer)
android.opengl.ETC1.isValid(java.nio.Buffer)
android.opengl.ETC1Util.compressTexture(java.nio.Buffer,int,int,int,int)
android.opengl.ETC1Util.createTexture(java.io.InputStream)
android.opengl.ETC1Util.loadTexture(int,int,int,int,int,android.opengl.ETC1Util$ETC1Texture)
android.opengl.ETC1Util.loadTexture(int,int,int,int,int,java.io.InputStream)
android.opengl.GLDebugHelper.wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)
android.opengl.GLDebugHelper.wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)
android.opengl.GLES10.glColorPointer(int,int,int,java.nio.Buffer)
android.opengl.GLES10.glColorPointerBounds(int,int,int,java.nio.Buffer,int)
android.opengl.GLES10.glNormalPointer(int,int,java.nio.Buffer)
android.opengl.GLES10.glNormalPointerBounds(int,int,java.nio.Buffer,int)
android.opengl.GLES10.glTexCoordPointer(int,int,int,java.nio.Buffer)
android.opengl.GLES10.glTexCoordPointerBounds(int,int,int,java.nio.Buffer,int)
android.opengl.GLES10.glVertexPointer(int,int,int,java.nio.Buffer)
android.opengl.GLES10.glVertexPointerBounds(int,int,int,java.nio.Buffer,int)
android.opengl.GLES10Ext._nativeClassInit()
android.opengl.GLES10Ext.glQueryMatrixxOES([I,int,[I,int)
android.opengl.GLES11.glGetBufferParameteriv(int,int,[I,int)
android.opengl.GLES11.glGetBufferParameteriv(int,int,java.nio.IntBuffer)
android.opengl.GLES11.glPointSizePointerOES(int,int,java.nio.Buffer)
android.opengl.GLES11.glPointSizePointerOESBounds(int,int,java.nio.Buffer,int)
android.opengl.GLES11Ext.glBindFramebufferOES(int,int)
android.opengl.GLES11Ext.glBindRenderbufferOES(int,int)
android.opengl.GLES11Ext.glCheckFramebufferStatusOES(int)
android.opengl.GLES11Ext.glDeleteFramebuffersOES(int,[I,int)
android.opengl.GLES11Ext.glDeleteFramebuffersOES(int,java.nio.IntBuffer)
android.opengl.GLES11Ext.glDeleteRenderbuffersOES(int,[I,int)
android.opengl.GLES11Ext.glDeleteRenderbuffersOES(int,java.nio.IntBuffer)
android.opengl.GLES11Ext.glDrawTexfvOES([F,int)
android.opengl.GLES11Ext.glDrawTexivOES([I,int)
android.opengl.GLES11Ext.glDrawTexsvOES([S,int)
android.opengl.GLES11Ext.glDrawTexxvOES([I,int)
android.opengl.GLES11Ext.glFramebufferRenderbufferOES(int,int,int,int)
android.opengl.GLES11Ext.glFramebufferTexture2DOES(int,int,int,int,int)
android.opengl.GLES11Ext.glGenFramebuffersOES(int,[I,int)
android.opengl.GLES11Ext.glGenFramebuffersOES(int,java.nio.IntBuffer)
android.opengl.GLES11Ext.glGenRenderbuffersOES(int,[I,int)
android.opengl.GLES11Ext.glGenRenderbuffersOES(int,java.nio.IntBuffer)
android.opengl.GLES11Ext.glGenerateMipmapOES(int)
android.opengl.GLES11Ext.glGetFramebufferAttachmentParameterivOES(int,int,int,[I,int)
android.opengl.GLES11Ext.glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)
android.opengl.GLES11Ext.glGetRenderbufferParameterivOES(int,int,[I,int)
android.opengl.GLES11Ext.glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)
android.opengl.GLES11Ext.glIsFramebufferOES(int)
android.opengl.GLES11Ext.glIsRenderbufferOES(int)
android.opengl.GLES11Ext.glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)
android.opengl.GLES11Ext.glMatrixIndexPointerOESBounds(int,int,int,java.nio.Buffer,int)
android.opengl.GLES11Ext.glRenderbufferStorageOES(int,int,int,int)
android.opengl.GLES11Ext.glWeightPointerOES(int,int,int,java.nio.Buffer)
android.opengl.GLES11Ext.glWeightPointerOESBounds(int,int,int,java.nio.Buffer,int)
android.opengl.GLES20.glBlendEquation(int)
android.opengl.GLES20.glBlendEquationSeparate(int,int)
android.opengl.GLES20.glBlendFuncSeparate(int,int,int,int)
android.opengl.GLES20.glGetBufferParameteriv(int,int,[I,int)
android.opengl.GLES20.glGetBufferParameteriv(int,int,java.nio.IntBuffer)
android.opengl.GLES20.glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
android.opengl.GLES20.glVertexAttribPointerBounds(int,int,int,boolean,int,java.nio.Buffer,int)
android.opengl.GLSurfaceView$BaseConfigChooser.<init>(android.opengl.GLSurfaceView,[I)
android.opengl.GLSurfaceView$BaseConfigChooser.chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
android.opengl.GLSurfaceView$BaseConfigChooser.filterConfigSpec([I)
android.opengl.GLSurfaceView$ComponentSizeChooser.<init>(android.opengl.GLSurfaceView,int,int,int,int,int,int)
android.opengl.GLSurfaceView$ComponentSizeChooser.chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,[Ljavax.microedition.khronos.egl.EGLConfig;)
android.opengl.GLSurfaceView$ComponentSizeChooser.findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
android.opengl.GLSurfaceView$DefaultContextFactory.createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
android.opengl.GLSurfaceView$DefaultContextFactory.destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory.createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)
android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory.destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)
android.opengl.GLSurfaceView$EglHelper.<init>(android.opengl.GLSurfaceView)
android.opengl.GLSurfaceView$EglHelper.createSurface(android.view.SurfaceHolder)
android.opengl.GLSurfaceView$EglHelper.destroySurface()
android.opengl.GLSurfaceView$EglHelper.finish()
android.opengl.GLSurfaceView$EglHelper.start()
android.opengl.GLSurfaceView$EglHelper.swap()
android.opengl.GLSurfaceView$EglHelper.throwEglException(java.lang.String)
android.opengl.GLSurfaceView$EglHelper.throwEglException(java.lang.String,int)
android.opengl.GLSurfaceView$GLThread.getRenderMode()
android.opengl.GLSurfaceView$GLThread.guardedRun()
android.opengl.GLSurfaceView$GLThread.onPause()
android.opengl.GLSurfaceView$GLThread.onResume()
android.opengl.GLSurfaceView$GLThread.onWindowResize(int,int)
android.opengl.GLSurfaceView$GLThread.queueEvent(java.lang.Runnable)
android.opengl.GLSurfaceView$GLThread.requestExitAndWait()
android.opengl.GLSurfaceView$GLThread.requestRender()
android.opengl.GLSurfaceView$GLThread.run()
android.opengl.GLSurfaceView$GLThread.setRenderMode(int)
android.opengl.GLSurfaceView$GLThread.stopEglContextLocked()
android.opengl.GLSurfaceView$GLThread.stopEglSurfaceLocked()
android.opengl.GLSurfaceView$GLThread.surfaceCreated()
android.opengl.GLSurfaceView$GLThread.surfaceDestroyed()
android.opengl.GLSurfaceView$GLThreadManager.checkGLDriver(javax.microedition.khronos.opengles.GL10)
android.opengl.GLSurfaceView$GLThreadManager.checkGLESVersion()
android.opengl.GLSurfaceView$GLThreadManager.releaseEglContextLocked(android.opengl.GLSurfaceView$GLThread)
android.opengl.GLSurfaceView$GLThreadManager.shouldReleaseEGLContextWhenPausing()
android.opengl.GLSurfaceView$GLThreadManager.shouldTerminateEGLWhenPausing()
android.opengl.GLSurfaceView$GLThreadManager.threadExiting(android.opengl.GLSurfaceView$GLThread)
android.opengl.GLSurfaceView$GLThreadManager.tryAcquireEglContextLocked(android.opengl.GLSurfaceView$GLThread)
android.opengl.GLSurfaceView$LogWriter.flushBuilder()
android.opengl.GLSurfaceView$SimpleEGLConfigChooser.<init>(android.opengl.GLSurfaceView,boolean)
android.opengl.GLSurfaceView.<init>(android.content.Context)
android.opengl.GLSurfaceView.checkRenderThreadState()
android.opengl.GLSurfaceView.getRenderMode()
android.opengl.GLSurfaceView.init()
android.opengl.GLSurfaceView.onDetachedFromWindow()
android.opengl.GLSurfaceView.onPause()
android.opengl.GLSurfaceView.onResume()
android.opengl.GLSurfaceView.queueEvent(java.lang.Runnable)
android.opengl.GLSurfaceView.requestRender()
android.opengl.GLSurfaceView.setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)
android.opengl.GLSurfaceView.setEGLContextFactory(android.opengl.GLSurfaceView$EGLContextFactory)
android.opengl.GLSurfaceView.setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView$EGLWindowSurfaceFactory)
android.opengl.GLSurfaceView.setGLWrapper(android.opengl.GLSurfaceView$GLWrapper)
android.opengl.GLSurfaceView.setRenderMode(int)
android.opengl.GLSurfaceView.setRenderer(android.opengl.GLSurfaceView$Renderer)
android.opengl.GLSurfaceView.surfaceChanged(android.view.SurfaceHolder,int,int,int)
android.opengl.GLSurfaceView.surfaceCreated(android.view.SurfaceHolder)
android.opengl.GLSurfaceView.surfaceDestroyed(android.view.SurfaceHolder)
android.opengl.GLU.gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)
android.opengl.GLU.gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)
android.opengl.GLU.gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)
android.opengl.GLU.gluProject(float,float,float,[F,int,[F,int,[I,int,[F,int)
android.opengl.GLU.gluUnProject(float,float,float,[F,int,[F,int,[I,int,[F,int)
android.opengl.GLUtils.nativeClassInit()
android.opengl.GLUtils.native_getInternalFormat(android.graphics.Bitmap)
android.opengl.GLUtils.native_getType(android.graphics.Bitmap)
android.opengl.GLUtils.native_texImage2D(int,int,int,android.graphics.Bitmap,int,int)
android.opengl.GLUtils.native_texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)
android.opengl.Matrix.frustumM([F,int,float,float,float,float,float,float)
android.opengl.Matrix.invertM([F,int,[F,int)
android.opengl.Matrix.multiplyMM([F,int,[F,int,[F,int)
android.opengl.Matrix.multiplyMV([F,int,[F,int,[F,int)
android.opengl.Matrix.orthoM([F,int,float,float,float,float,float,float)
android.opengl.Matrix.rotateM([F,int,[F,int,float,float,float,float)
android.opengl.Matrix.rotateM([F,int,float,float,float,float)
android.opengl.Matrix.scaleM([F,int,[F,int,float,float,float)
android.opengl.Matrix.scaleM([F,int,float,float,float)
android.opengl.Matrix.setIdentityM([F,int)
android.opengl.Matrix.setLookAtM([F,int,float,float,float,float,float,float,float,float,float)
android.opengl.Matrix.setRotateEulerM([F,int,float,float,float)
android.opengl.Matrix.setRotateM([F,int,float,float,float,float)
android.opengl.Matrix.translateM([F,int,[F,int,float,float,float)
android.opengl.Matrix.translateM([F,int,float,float,float)
android.opengl.Matrix.transposeM([F,int,[F,int)
android.opengl.Visibility.computeBoundingSphere([F,int,int,[F,int)
android.opengl.Visibility.frustumCullSpheres([F,int,[F,int,int,[I,int,int)
android.opengl.Visibility.visibilityTest([F,int,[F,int,[C,int,int)
android.os.AsyncTask$InternalHandler.handleMessage(android.os.Message)
android.os.AsyncTask$Status.valueOf(java.lang.String)
android.os.AsyncTask$Status.values()
android.os.AsyncTask.<init>()
android.os.AsyncTask.cancel(boolean)
android.os.AsyncTask.execute([Ljava.lang.Object;)
android.os.AsyncTask.finish(java.lang.Object)
android.os.AsyncTask.get()
android.os.AsyncTask.get(long,java.util.concurrent.TimeUnit)
android.os.AsyncTask.getStatus()
android.os.AsyncTask.isCancelled()
android.os.AsyncTask.onCancelled()
android.os.AsyncTask.onPostExecute(java.lang.Object)
android.os.AsyncTask.onPreExecute()
android.os.AsyncTask.onProgressUpdate([Ljava.lang.Object;)
android.os.AsyncTask.publishProgress([Ljava.lang.Object;)
android.os.Binder.destroy()
android.os.Binder.dump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String;)
android.os.Binder.execTransact(int,int,int,int)
android.os.Binder.finalize()
android.os.Binder.init()
android.os.Binder.joinThreadPool()
android.os.Binder.linkToDeath(android.os.IBinder$DeathRecipient,int)
android.os.Binder.onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.os.Binder.unlinkToDeath(android.os.IBinder$DeathRecipient,int)
android.os.Build.getLong(java.lang.String)
android.os.Build.getString(java.lang.String)
android.os.Bundle.<init>(java.lang.ClassLoader)
android.os.Bundle.putCharSequenceArrayList(java.lang.String,java.util.ArrayList)
android.os.Bundle.putIntegerArrayList(java.lang.String,java.util.ArrayList)
android.os.Bundle.putParcelableArrayList(java.lang.String,java.util.ArrayList)
android.os.Bundle.putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android.os.Bundle.putStringArrayList(java.lang.String,java.util.ArrayList)
android.os.Bundle.readFromParcelInner(android.os.Parcel,int)
android.os.Bundle.setClassLoader(java.lang.ClassLoader)
android.os.Bundle.typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)
android.os.Bundle.typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)
android.os.Bundle.unparcel()
android.os.CountDownTimer.<init>(long,long)
android.os.CountDownTimer.cancel()
android.os.CountDownTimer.start()
android.os.Debug$InstructionCount.globalTotal()
android.os.Debug$MemoryInfo.<init>()
android.os.Debug$MemoryInfo.describeContents()
android.os.Debug$MemoryInfo.getTotalPrivateDirty()
android.os.Debug$MemoryInfo.getTotalPss()
android.os.Debug$MemoryInfo.getTotalSharedDirty()
android.os.Debug$MemoryInfo.readFromParcel(android.os.Parcel)
android.os.Debug$MemoryInfo.writeToParcel(android.os.Parcel,int)
android.os.Debug.cacheRegisterMap(java.lang.String)
android.os.Debug.modifyFieldIfSet(java.lang.reflect.Field,com.android.internal.util.TypedProperties,java.lang.String)
android.os.Debug.startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)
android.os.Environment.getDirectory(java.lang.String,java.lang.String)
android.os.FileObserver$ObserverThread.<init>()
android.os.FileObserver$ObserverThread.init()
android.os.FileObserver$ObserverThread.observe(int)
android.os.FileObserver$ObserverThread.onEvent(int,int,java.lang.String)
android.os.FileObserver$ObserverThread.run()
android.os.FileObserver$ObserverThread.startWatching(int,java.lang.String,int)
android.os.FileObserver$ObserverThread.startWatching(java.lang.String,int,android.os.FileObserver)
android.os.FileObserver$ObserverThread.stopWatching(int)
android.os.FileObserver$ObserverThread.stopWatching(int,int)
android.os.FileObserver.<init>(java.lang.String)
android.os.FileObserver.<init>(java.lang.String,int)
android.os.FileObserver.finalize()
android.os.FileObserver.startWatching()
android.os.FileObserver.stopWatching()
android.os.Handler$MessengerImpl.send(android.os.Message)
android.os.Handler.<init>(android.os.Handler$Callback)
android.os.Handler.<init>(android.os.Looper,android.os.Handler$Callback)
android.os.Handler.getPostMessage(java.lang.Runnable)
android.os.Handler.getPostMessage(java.lang.Runnable,java.lang.Object)
android.os.Handler.handleCallback(android.os.Message)
android.os.HandlerThread.run()
android.os.Looper$HandlerException.createMessage(java.lang.Throwable)
android.os.Looper.loop()
android.os.Looper.setMainLooper(android.os.Looper)
android.os.MemoryFile$MemoryInputStream.available()
android.os.MemoryFile$MemoryInputStream.mark(int)
android.os.MemoryFile$MemoryInputStream.markSupported()
android.os.MemoryFile$MemoryInputStream.read()
android.os.MemoryFile$MemoryInputStream.read([B,int,int)
android.os.MemoryFile$MemoryInputStream.reset()
android.os.MemoryFile$MemoryInputStream.skip(long)
android.os.MemoryFile$MemoryOutputStream.write([B,int,int)
android.os.MemoryFile$MemoryOutputStream.write(int)
android.os.MemoryFile.<init>(java.io.FileDescriptor,int,java.lang.String)
android.os.MemoryFile.finalize()
android.os.MemoryFile.isClosed()
android.os.MemoryFile.isDeactivated()
android.os.MemoryFile.modeToProt(java.lang.String)
android.os.MemoryFile.native_close(java.io.FileDescriptor)
android.os.MemoryFile.native_get_size(java.io.FileDescriptor)
android.os.MemoryFile.native_mmap(java.io.FileDescriptor,int,int)
android.os.MemoryFile.native_munmap(int,int)
android.os.MemoryFile.native_open(java.lang.String,int)
android.os.MemoryFile.native_pin(java.io.FileDescriptor,boolean)
android.os.MemoryFile.native_read(java.io.FileDescriptor,int,[B,int,int,int,boolean)
android.os.MemoryFile.native_write(java.io.FileDescriptor,int,[B,int,int,int,boolean)
android.os.MemoryFile.readBytes([B,int,int,int)
android.os.MemoryFile.writeBytes([B,int,int,int)
android.os.Message.clearForRecycle()
android.os.Message.obtain(android.os.Handler,java.lang.Runnable)
android.os.Message.readFromParcel(android.os.Parcel)
android.os.MessageQueue.addIdleHandler(android.os.MessageQueue$IdleHandler)
android.os.MessageQueue.enqueueMessage(android.os.Message,long)
android.os.MessageQueue.next()
android.os.MessageQueue.poke()
android.os.MessageQueue.pullNextLocked(long)
android.os.MessageQueue.removeCallbacksAndMessages(android.os.Handler,java.lang.Object)
android.os.MessageQueue.removeIdleHandler(android.os.MessageQueue$IdleHandler)
android.os.MessageQueue.removeMessages(android.os.Handler,int,java.lang.Object,boolean)
android.os.MessageQueue.removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)
android.os.Messenger.hashCode()
android.os.Parcel.openFileDescriptor(java.lang.String,int)
android.os.Parcel.readArrayInternal([Ljava.lang.Object;,int,java.lang.ClassLoader)
android.os.Parcel.readBooleanArray([Z)
android.os.Parcel.readCharSequence()
android.os.Parcel.readException(int,java.lang.String)
android.os.Parcel.readStringArray([Ljava.lang.String;)
android.os.Parcel.writeException(java.lang.Exception)
android.os.ParcelFileDescriptor.finalize()
android.os.ParcelFileDescriptor.fromSocket(java.net.Socket)
android.os.ParcelFileDescriptor.getFileDescriptorFromSocket(java.net.Socket)
android.os.ParcelUuid.hashCode()
android.os.PatternMatcher.matchPattern(java.lang.String,java.lang.String,int)
android.os.Process.invokeStaticMain(java.lang.String)
android.os.Process.openZygoteSocketIfNeeded()
android.os.Process.setThreadGroup(int,int)
android.os.Process.start(java.lang.String,int,int,[I,int,[Ljava.lang.String;)
android.os.Process.start(java.lang.String,java.lang.String,int,int,[I,int,[Ljava.lang.String;)
android.os.Process.startViaZygote(java.lang.String,java.lang.String,int,int,[I,int,[Ljava.lang.String;)
android.os.Process.zygoteSendArgsAndGetPid(java.util.ArrayList)
android.os.RecoverySystem.verifyPackage(java.io.File,android.os.RecoverySystem$ProgressListener,java.io.File)
android.os.ResultReceiver$MyResultReceiver.send(int,android.os.Bundle)
android.os.ResultReceiver$MyRunnable.run()
android.os.ResultReceiver.onReceiveResult(int,android.os.Bundle)
android.os.StatFs.finalize()
android.os.StatFs.native_finalize()
android.os.StatFs.native_restat(java.lang.String)
android.os.StatFs.native_setup(java.lang.String)
android.os.TokenWatcher$Death.binderDied()
android.os.TokenWatcher$Death.finalize()
android.os.TokenWatcher.<init>(android.os.Handler,java.lang.String)
android.os.TokenWatcher.acquire(android.os.IBinder,java.lang.String)
android.os.TokenWatcher.cleanup(android.os.IBinder,boolean)
android.os.TokenWatcher.dump()
android.os.TokenWatcher.isAcquired()
android.os.TokenWatcher.release(android.os.IBinder)
android.os.TokenWatcher.sendNotificationLocked(boolean)
android.preference.CheckBoxPreference$SavedState.<init>(android.os.Parcel)
android.preference.CheckBoxPreference$SavedState.<init>(android.os.Parcelable)
android.preference.CheckBoxPreference$SavedState.writeToParcel(android.os.Parcel,int)
android.preference.CheckBoxPreference.onBindView(android.view.View)
android.preference.CheckBoxPreference.onClick()
android.preference.CheckBoxPreference.onGetDefaultValue(android.content.res.TypedArray,int)
android.preference.CheckBoxPreference.onRestoreInstanceState(android.os.Parcelable)
android.preference.CheckBoxPreference.onSaveInstanceState()
android.preference.CheckBoxPreference.onSetInitialValue(boolean,java.lang.Object)
android.preference.CheckBoxPreference.setSummaryOff(int)
android.preference.DialogPreference$SavedState.<init>(android.os.Parcel)
android.preference.DialogPreference$SavedState.<init>(android.os.Parcelable)
android.preference.DialogPreference$SavedState.writeToParcel(android.os.Parcel,int)
android.preference.DialogPreference.<init>(android.content.Context,android.util.AttributeSet)
android.preference.DialogPreference.<init>(android.content.Context,android.util.AttributeSet,int)
android.preference.DialogPreference.needInputMethod()
android.preference.DialogPreference.onBindDialogView(android.view.View)
android.preference.DialogPreference.onClick()
android.preference.DialogPreference.onCreateDialogView()
android.preference.DialogPreference.onDialogClosed(boolean)
android.preference.DialogPreference.onDismiss(android.content.DialogInterface)
android.preference.DialogPreference.onPrepareDialogBuilder(android.app.AlertDialog$Builder)
android.preference.DialogPreference.onRestoreInstanceState(android.os.Parcelable)
android.preference.DialogPreference.onSaveInstanceState()
android.preference.DialogPreference.requestInputMethod(android.app.Dialog)
android.preference.DialogPreference.setDialogIcon(int)
android.preference.DialogPreference.showDialog(android.os.Bundle)
android.preference.EditTextPreference$SavedState.<init>(android.os.Parcel)
android.preference.EditTextPreference$SavedState.<init>(android.os.Parcelable)
android.preference.EditTextPreference$SavedState.writeToParcel(android.os.Parcel,int)
android.preference.EditTextPreference.needInputMethod()
android.preference.EditTextPreference.onAddEditTextToDialogView(android.view.View,android.widget.EditText)
android.preference.EditTextPreference.onBindDialogView(android.view.View)
android.preference.EditTextPreference.onDialogClosed(boolean)
android.preference.EditTextPreference.onGetDefaultValue(android.content.res.TypedArray,int)
android.preference.EditTextPreference.onRestoreInstanceState(android.os.Parcelable)
android.preference.EditTextPreference.onSaveInstanceState()
android.preference.EditTextPreference.onSetInitialValue(boolean,java.lang.Object)
android.preference.ListPreference$SavedState.<init>(android.os.Parcel)
android.preference.ListPreference$SavedState.<init>(android.os.Parcelable)
android.preference.ListPreference$SavedState.writeToParcel(android.os.Parcel,int)
android.preference.ListPreference.getValueIndex()
android.preference.ListPreference.onDialogClosed(boolean)
android.preference.ListPreference.onGetDefaultValue(android.content.res.TypedArray,int)
android.preference.ListPreference.onPrepareDialogBuilder(android.app.AlertDialog$Builder)
android.preference.ListPreference.onRestoreInstanceState(android.os.Parcelable)
android.preference.ListPreference.onSaveInstanceState()
android.preference.ListPreference.onSetInitialValue(boolean,java.lang.Object)
android.preference.ListPreference.setEntries(int)
android.preference.ListPreference.setEntryValues(int)
android.preference.Preference.dispatchSetInitialValue()
android.preference.Preference.onAttachedToHierarchy(android.preference.PreferenceManager)
android.preference.Preference.onGetDefaultValue(android.content.res.TypedArray,int)
android.preference.Preference.onRestoreInstanceState(android.os.Parcelable)
android.preference.Preference.performClick(android.preference.PreferenceScreen)
android.preference.Preference.registerDependency()
android.preference.Preference.registerDependent(android.preference.Preference)
android.preference.Preference.setEnabledStateOnViews(android.view.View,boolean)
android.preference.Preference.setOnPreferenceChangeInternalListener(android.preference.Preference$OnPreferenceChangeInternalListener)
android.preference.Preference.setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
android.preference.Preference.setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)
android.preference.Preference.tryCommit(android.content.SharedPreferences$Editor)
android.preference.Preference.unregisterDependency()
android.preference.Preference.unregisterDependent(android.preference.Preference)
android.preference.PreferenceActivity.addPreferencesFromIntent(android.content.Intent)
android.preference.PreferenceActivity.addPreferencesFromResource(int)
android.preference.PreferenceActivity.bindPreferences()
android.preference.PreferenceActivity.getPreferenceScreen()
android.preference.PreferenceActivity.onActivityResult(int,int,android.content.Intent)
android.preference.PreferenceActivity.onContentChanged()
android.preference.PreferenceActivity.onCreate(android.os.Bundle)
android.preference.PreferenceActivity.onCreatePreferenceManager()
android.preference.PreferenceActivity.onDestroy()
android.preference.PreferenceActivity.onRestoreInstanceState(android.os.Bundle)
android.preference.PreferenceActivity.onSaveInstanceState(android.os.Bundle)
android.preference.PreferenceActivity.onStop()
android.preference.PreferenceActivity.requirePreferenceManager()
android.preference.PreferenceActivity.setPreferenceScreen(android.preference.PreferenceScreen)
android.preference.PreferenceCategory.onPrepareAddPreference(android.preference.Preference)
android.preference.PreferenceGroup.<init>(android.content.Context,android.util.AttributeSet)
android.preference.PreferenceGroup.<init>(android.content.Context,android.util.AttributeSet,int)
android.preference.PreferenceGroup.addItemFromInflater(android.preference.Preference)
android.preference.PreferenceGroup.addPreference(android.preference.Preference)
android.preference.PreferenceGroup.dispatchRestoreInstanceState(android.os.Bundle)
android.preference.PreferenceGroup.dispatchSaveInstanceState(android.os.Bundle)
android.preference.PreferenceGroup.getPreference(int)
android.preference.PreferenceGroup.isOnSameScreenAsChildren()
android.preference.PreferenceGroup.onAttachedToActivity()
android.preference.PreferenceGroup.onPrepareAddPreference(android.preference.Preference)
android.preference.PreferenceGroup.onPrepareForRemoval()
android.preference.PreferenceGroup.removePreferenceInt(android.preference.Preference)
android.preference.PreferenceGroup.sortPreferences()
android.preference.PreferenceManager.inflateFromIntent(android.content.Intent,android.preference.PreferenceScreen)
android.preference.PreferenceManager.setOnPreferenceTreeClickListener(android.preference.PreferenceManager$OnPreferenceTreeClickListener)
android.preference.PreferenceScreen$SavedState.<init>(android.os.Parcel)
android.preference.PreferenceScreen$SavedState.<init>(android.os.Parcelable)
android.preference.PreferenceScreen$SavedState.writeToParcel(android.os.Parcel,int)
android.preference.PreferenceScreen.bind(android.widget.ListView)
android.preference.PreferenceScreen.onDismiss(android.content.DialogInterface)
android.preference.PreferenceScreen.showDialog(android.os.Bundle)
android.preference.RingtonePreference.onAttachedToHierarchy(android.preference.PreferenceManager)
android.preference.RingtonePreference.onClick()
android.preference.RingtonePreference.onGetDefaultValue(android.content.res.TypedArray,int)
android.preference.RingtonePreference.onPrepareRingtonePickerIntent(android.content.Intent)
android.preference.RingtonePreference.onRestoreRingtone()
android.preference.RingtonePreference.onSaveRingtone(android.net.Uri)
android.preference.RingtonePreference.onSetInitialValue(boolean,java.lang.Object)
android.provider.Contacts$ContactMethods.addPostalLocation(android.content.Context,long,double,double)
android.provider.ContactsContract$CommonDataKinds$Email.getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)
android.provider.ContactsContract$CommonDataKinds$Im.getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)
android.provider.ContactsContract$CommonDataKinds$Im.getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)
android.provider.ContactsContract$CommonDataKinds$Organization.getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)
android.provider.ContactsContract$CommonDataKinds$Phone.getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)
android.provider.ContactsContract$CommonDataKinds$StructuredPostal.getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)
android.provider.ContactsContract$Groups$EntityIteratorImpl.<init>(android.database.Cursor)
android.provider.ContactsContract$Groups$EntityIteratorImpl.getEntityAndIncrementCursor(android.database.Cursor)
android.provider.ContactsContract$RawContacts$EntityIteratorImpl.<init>(android.database.Cursor)
android.provider.ContactsContract$RawContacts$EntityIteratorImpl.getEntityAndIncrementCursor(android.database.Cursor)
android.provider.ContactsContract$SyncState.get(android.content.ContentProviderClient,android.accounts.Account)
android.provider.ContactsContract$SyncState.getWithUri(android.content.ContentProviderClient,android.accounts.Account)
android.provider.ContactsContract$SyncState.set(android.content.ContentProviderClient,android.accounts.Account,[B)
android.provider.MediaStore$Images$Media.StoreThumbnail(android.content.ContentResolver,android.graphics.Bitmap,long,float,float,int)
android.provider.MediaStore$Images$Media.getBitmap(android.content.ContentResolver,android.net.Uri)
android.provider.MediaStore$Images$Media.insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)
android.provider.MediaStore$Images$Thumbnails.getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)
android.provider.MediaStore$Images$Thumbnails.getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options)
android.provider.MediaStore$Images$Thumbnails.queryMiniThumbnail(android.content.ContentResolver,long,int,[Ljava.lang.String;)
android.provider.MediaStore$InternalThumbnails.cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long)
android.provider.MediaStore$InternalThumbnails.getMiniThumbFromFile(android.database.Cursor,android.net.Uri,android.content.ContentResolver,android.graphics.BitmapFactory$Options)
android.provider.MediaStore$InternalThumbnails.getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri,boolean)
android.provider.SearchRecentSuggestions.truncateHistory(android.content.ContentResolver,int)
android.provider.Settings$Bookmarks.getLabelForFolder(android.content.res.Resources,java.lang.String)
android.provider.Settings$Bookmarks.getTitle(android.content.Context,android.database.Cursor)
android.provider.Settings$NameValueCache.<init>(java.lang.String,android.net.Uri,java.lang.String)
android.provider.Settings$NameValueCache.getString(android.content.ContentResolver,java.lang.String)
android.provider.Settings$NameValueTable.putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)
android.provider.SyncStateContract$Helpers.get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)
android.provider.SyncStateContract$Helpers.getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)
android.provider.SyncStateContract$Helpers.insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,[B)
android.provider.SyncStateContract$Helpers.set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,[B)
android.provider.SyncStateContract$Helpers.update(android.content.ContentProviderClient,android.net.Uri,[B)
android.sax.Element.checkRequiredChildren(org.xml.sax.Locator)
android.sax.Element.resetRequiredChildren()
android.sax.Element.setElementListener(android.sax.ElementListener)
android.sax.Element.setEndElementListener(android.sax.EndElementListener)
android.sax.Element.setEndTextElementListener(android.sax.EndTextElementListener)
android.sax.Element.setStartElementListener(android.sax.StartElementListener)
android.sax.Element.setTextElementListener(android.sax.TextElementListener)
android.sax.Element.toString(java.lang.String,java.lang.String)
android.sax.RootElement$Handler.characters([C,int,int)
android.sax.RootElement$Handler.endElement(java.lang.String,java.lang.String,java.lang.String)
android.sax.RootElement$Handler.setDocumentLocator(org.xml.sax.Locator)
android.sax.RootElement$Handler.start(android.sax.Element,org.xml.sax.Attributes)
android.sax.RootElement$Handler.startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
android.sax.RootElement$Handler.startRoot(java.lang.String,java.lang.String,org.xml.sax.Attributes)
android.service.wallpaper.WallpaperService$Engine.<init>(android.service.wallpaper.WallpaperService)
android.service.wallpaper.WallpaperService$Engine.attach(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)
android.service.wallpaper.WallpaperService$Engine.detach()
android.service.wallpaper.WallpaperService$Engine.doCommand(android.service.wallpaper.WallpaperService$WallpaperCommand)
android.service.wallpaper.WallpaperService$Engine.doDesiredSizeChanged(int,int)
android.service.wallpaper.WallpaperService$Engine.doOffsetsChanged()
android.service.wallpaper.WallpaperService$Engine.doVisibilityChanged(boolean)
android.service.wallpaper.WallpaperService$Engine.getDesiredMinimumHeight()
android.service.wallpaper.WallpaperService$Engine.getDesiredMinimumWidth()
android.service.wallpaper.WallpaperService$Engine.getSurfaceHolder()
android.service.wallpaper.WallpaperService$Engine.isPreview()
android.service.wallpaper.WallpaperService$Engine.isVisible()
android.service.wallpaper.WallpaperService$Engine.onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)
android.service.wallpaper.WallpaperService$Engine.onCreate(android.view.SurfaceHolder)
android.service.wallpaper.WallpaperService$Engine.onDesiredSizeChanged(int,int)
android.service.wallpaper.WallpaperService$Engine.onDestroy()
android.service.wallpaper.WallpaperService$Engine.onOffsetsChanged(float,float,float,float,int,int)
android.service.wallpaper.WallpaperService$Engine.onSurfaceChanged(android.view.SurfaceHolder,int,int,int)
android.service.wallpaper.WallpaperService$Engine.onSurfaceCreated(android.view.SurfaceHolder)
android.service.wallpaper.WallpaperService$Engine.onSurfaceDestroyed(android.view.SurfaceHolder)
android.service.wallpaper.WallpaperService$Engine.onTouchEvent(android.view.MotionEvent)
android.service.wallpaper.WallpaperService$Engine.onVisibilityChanged(boolean)
android.service.wallpaper.WallpaperService$Engine.reportSurfaceDestroyed()
android.service.wallpaper.WallpaperService$Engine.reportVisibility()
android.service.wallpaper.WallpaperService$Engine.setTouchEventsEnabled(boolean)
android.service.wallpaper.WallpaperService$Engine.updateSurface(boolean,boolean)
android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.destroy()
android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.dispatchPointer(android.view.MotionEvent)
android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.executeMessage(android.os.Message)
android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.setDesiredSize(int,int)
android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.setVisibility(boolean)
android.service.wallpaper.WallpaperService$IWallpaperServiceWrapper.<init>(android.service.wallpaper.WallpaperService,android.service.wallpaper.WallpaperService)
android.service.wallpaper.WallpaperService$IWallpaperServiceWrapper.attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int)
android.service.wallpaper.WallpaperService.<init>()
android.service.wallpaper.WallpaperService.onBind(android.content.Intent)
android.service.wallpaper.WallpaperService.onCreate()
android.service.wallpaper.WallpaperService.onDestroy()
android.service.wallpaper.WallpaperService.setCallbackLooper(android.os.Looper)
android.speech.RecognitionService$Callback.beginningOfSpeech()
android.speech.RecognitionService$Callback.bufferReceived([B)
android.speech.RecognitionService$Callback.endOfSpeech()
android.speech.RecognitionService$Callback.error(int)
android.speech.RecognitionService$Callback.partialResults(android.os.Bundle)
android.speech.RecognitionService$Callback.readyForSpeech(android.os.Bundle)
android.speech.RecognitionService$Callback.results(android.os.Bundle)
android.speech.RecognitionService$Callback.rmsChanged(float)
android.speech.RecognitionService$RecognitionServiceBinder.<init>(android.speech.RecognitionService)
android.speech.RecognitionService$RecognitionServiceBinder.cancel(android.speech.IRecognitionListener)
android.speech.RecognitionService$RecognitionServiceBinder.clearReference()
android.speech.RecognitionService$RecognitionServiceBinder.startListening(android.content.Intent,android.speech.IRecognitionListener)
android.speech.RecognitionService$RecognitionServiceBinder.stopListening(android.speech.IRecognitionListener)
android.speech.RecognitionService$StartListeningArgs.<init>(android.speech.RecognitionService,android.content.Intent,android.speech.IRecognitionListener)
android.speech.RecognitionService.<init>()
android.speech.RecognitionService.checkPermissions(android.speech.IRecognitionListener)
android.speech.RecognitionService.dispatchCancel(android.speech.IRecognitionListener)
android.speech.RecognitionService.dispatchStartListening(android.content.Intent,android.speech.IRecognitionListener)
android.speech.RecognitionService.dispatchStopListening(android.speech.IRecognitionListener)
android.speech.RecognitionService.onBind(android.content.Intent)
android.speech.RecognitionService.onDestroy()
android.speech.SpeechRecognizer$Connection.onServiceConnected(android.content.ComponentName,android.os.IBinder)
android.speech.SpeechRecognizer$Connection.onServiceDisconnected(android.content.ComponentName)
android.speech.SpeechRecognizer$InternalListener.onBeginningOfSpeech()
android.speech.SpeechRecognizer$InternalListener.onBufferReceived([B)
android.speech.SpeechRecognizer$InternalListener.onEndOfSpeech()
android.speech.SpeechRecognizer$InternalListener.onError(int)
android.speech.SpeechRecognizer$InternalListener.onEvent(int,android.os.Bundle)
android.speech.SpeechRecognizer$InternalListener.onPartialResults(android.os.Bundle)
android.speech.SpeechRecognizer$InternalListener.onReadyForSpeech(android.os.Bundle)
android.speech.SpeechRecognizer$InternalListener.onResults(android.os.Bundle)
android.speech.SpeechRecognizer$InternalListener.onRmsChanged(float)
android.speech.SpeechRecognizer.checkOpenConnection()
android.speech.SpeechRecognizer.createSpeechRecognizer(android.content.Context,android.content.ComponentName)
android.speech.SpeechRecognizer.destroy()
android.speech.SpeechRecognizer.handleChangeListener(android.speech.RecognitionListener)
android.speech.SpeechRecognizer.putMessage(android.os.Message)
android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex.<init>(int,int)
android.telephony.PhoneStateListener.onCellLocationChanged(android.telephony.CellLocation)
android.telephony.ServiceState.copyFrom(android.telephony.ServiceState)
android.telephony.ServiceState.equalsHandlesNulls(java.lang.Object,java.lang.Object)
android.telephony.ServiceState.hashCode()
android.telephony.ServiceState.setFromNotifierBundle(android.os.Bundle)
android.telephony.SignalStrength.copyFrom(android.telephony.SignalStrength)
android.telephony.SignalStrength.equalsHandlesNulls(java.lang.Object,java.lang.Object)
android.telephony.SignalStrength.hashCode()
android.telephony.SignalStrength.setFromNotifierBundle(android.os.Bundle)
android.telephony.SmsMessage$MessageClass.valueOf(java.lang.String)
android.telephony.SmsMessage$SubmitPdu.toString()
android.telephony.SmsMessage.getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)
android.telephony.SmsMessage.getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,[B)
android.telephony.SmsMessage.getSubmitPdu(java.lang.String,java.lang.String,short,[B,boolean)
android.telephony.SmsMessage.getTPLayerLengthForPDU(java.lang.String)
android.telephony.cdma.CdmaCellLocation.equalsHandlesNulls(java.lang.Object,java.lang.Object)
android.telephony.cdma.CdmaCellLocation.hashCode()
android.telephony.gsm.GsmCellLocation.equalsHandlesNulls(java.lang.Object,java.lang.Object)
android.telephony.gsm.GsmCellLocation.hashCode()
android.telephony.gsm.SmsMessage$MessageClass.valueOf(java.lang.String)
android.telephony.gsm.SmsMessage.getMessageClass()
android.telephony.gsm.SmsMessage.getSmsFacility()
android.telephony.gsm.SmsMessage.getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)
android.telephony.gsm.SmsMessage.getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,[B)
android.telephony.gsm.SmsMessage.getSubmitPdu(java.lang.String,java.lang.String,short,[B,boolean)
android.telephony.gsm.SmsMessage.getTPLayerLengthForPDU(java.lang.String)
android.telephony.gsm.SmsMessage.isCphsMwiMessage()
android.telephony.gsm.SmsMessage.isMwiDontStore()
android.telephony.gsm.SmsMessage.newFromCMTI(java.lang.String)
android.test.AndroidTestCase.assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)
android.test.AndroidTestCase.assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)
android.test.AndroidTestCase.assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)
android.test.AndroidTestCase.scrubClass(java.lang.Class)
android.test.AndroidTestCase.setUp()
android.test.AndroidTestCase.tearDown()
android.test.InstrumentationTestCase.launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)
android.test.InstrumentationTestCase.launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)
android.test.InstrumentationTestCase.runMethod(java.lang.reflect.Method,int)
android.test.InstrumentationTestCase.runTest()
android.test.InstrumentationTestCase.runTestOnUiThread(java.lang.Runnable)
android.test.InstrumentationTestCase.sendKeys([I)
android.test.InstrumentationTestCase.sendKeys(java.lang.String)
android.test.InstrumentationTestCase.sendRepeatedKeys([I)
android.test.InstrumentationTestSuite.<init>(android.app.Instrumentation)
android.test.InstrumentationTestSuite.<init>(java.lang.Class,android.app.Instrumentation)
android.test.InstrumentationTestSuite.<init>(java.lang.String,android.app.Instrumentation)
android.test.InstrumentationTestSuite.addTestSuite(java.lang.Class)
android.test.InstrumentationTestSuite.runTest(junit.framework.Test,junit.framework.TestResult)
android.text.AlteredCharSequence$AlteredSpanned.getSpanEnd(java.lang.Object)
android.text.AlteredCharSequence$AlteredSpanned.getSpanFlags(java.lang.Object)
android.text.AlteredCharSequence$AlteredSpanned.getSpanStart(java.lang.Object)
android.text.AlteredCharSequence$AlteredSpanned.getSpans(int,int,java.lang.Class)
android.text.AlteredCharSequence$AlteredSpanned.nextSpanTransition(int,int,java.lang.Class)
android.text.AlteredCharSequence.getChars(int,int,[C,int)
android.text.AlteredCharSequence.update([C,int,int)
android.text.AutoText.add(java.lang.String,char)
android.text.AutoText.getInstance(android.view.View)
android.text.AutoText.getSize()
android.text.AutoText.init(android.content.res.Resources)
android.text.AutoText.lookup(java.lang.CharSequence,int,int)
android.text.AutoText.newTrieNode()
android.text.ClipboardManager.getService()
android.text.DynamicLayout$ChangeWatcher.<init>(android.text.DynamicLayout)
android.text.DynamicLayout$ChangeWatcher.afterTextChanged(android.text.Editable)
android.text.DynamicLayout$ChangeWatcher.beforeTextChanged(java.lang.CharSequence,int,int,int)
android.text.DynamicLayout$ChangeWatcher.onSpanAdded(android.text.Spannable,java.lang.Object,int,int)
android.text.DynamicLayout$ChangeWatcher.onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)
android.text.DynamicLayout$ChangeWatcher.onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)
android.text.DynamicLayout$ChangeWatcher.onTextChanged(java.lang.CharSequence,int,int,int)
android.text.DynamicLayout$ChangeWatcher.reflow(java.lang.CharSequence,int,int,int)
android.text.DynamicLayout.<init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
android.text.DynamicLayout.<init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
android.text.DynamicLayout.<init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)
android.text.DynamicLayout.dump(boolean)
android.text.DynamicLayout.getBottomPadding()
android.text.DynamicLayout.getEllipsisCount(int)
android.text.DynamicLayout.getEllipsisStart(int)
android.text.DynamicLayout.getEllipsizedWidth()
android.text.DynamicLayout.getLineContainsTab(int)
android.text.DynamicLayout.getLineCount()
android.text.DynamicLayout.getLineDescent(int)
android.text.DynamicLayout.getLineDirections(int)
android.text.DynamicLayout.getLineStart(int)
android.text.DynamicLayout.getLineTop(int)
android.text.DynamicLayout.getParagraphDirection(int)
android.text.DynamicLayout.getTopPadding()
android.text.DynamicLayout.reflow(java.lang.CharSequence,int,int,int)
android.text.Layout$Alignment.valueOf(java.lang.String)
android.text.Layout$Ellipsizer.<init>(java.lang.CharSequence)
android.text.Layout$Ellipsizer.charAt(int)
android.text.Layout$Ellipsizer.getChars(int,int,[C,int)
android.text.Layout$Ellipsizer.length()
android.text.Layout$Ellipsizer.subSequence(int,int)
android.text.Layout$Ellipsizer.toString()
android.text.Layout$SpannedEllipsizer.<init>(java.lang.CharSequence)
android.text.Layout$SpannedEllipsizer.getSpanEnd(java.lang.Object)
android.text.Layout$SpannedEllipsizer.getSpanFlags(java.lang.Object)
android.text.Layout$SpannedEllipsizer.getSpanStart(java.lang.Object)
android.text.Layout$SpannedEllipsizer.getSpans(int,int,java.lang.Class)
android.text.Layout$SpannedEllipsizer.nextSpanTransition(int,int,java.lang.Class)
android.text.Layout$SpannedEllipsizer.subSequence(int,int)
android.text.Layout.addSelection(int,int,int,int,int,android.graphics.Path)
android.text.Layout.drawText(android.graphics.Canvas,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,float,int,int,int,android.text.TextPaint,android.text.TextPaint,boolean,[Ljava.lang.Object;)
android.text.Layout.getCursorPath(int,android.graphics.Path,java.lang.CharSequence)
android.text.Layout.getHorizontal(int,boolean,boolean)
android.text.Layout.getHorizontal(int,boolean,boolean,int)
android.text.Layout.getOffsetForHorizontal(int,float)
android.text.Layout.getOffsetToLeftOf(int)
android.text.Layout.getOffsetToRightOf(int)
android.text.Layout.getPrimaryHorizontal(int)
android.text.Layout.getSecondaryHorizontal(int)
android.text.Layout.measureText(android.text.TextPaint,android.text.TextPaint,java.lang.CharSequence,int,int,int,int,android.text.Layout$Directions,boolean,boolean,boolean,[Ljava.lang.Object;)
android.text.LoginFilter$PasswordFilterGMail.<init>()
android.text.LoginFilter$PasswordFilterGMail.<init>(boolean)
android.text.LoginFilter$PasswordFilterGMail.isAllowed(char)
android.text.LoginFilter$UsernameFilterGMail.<init>()
android.text.LoginFilter$UsernameFilterGMail.<init>(boolean)
android.text.LoginFilter$UsernameFilterGMail.isAllowed(char)
android.text.LoginFilter$UsernameFilterGeneric.<init>()
android.text.LoginFilter$UsernameFilterGeneric.<init>(boolean)
android.text.LoginFilter$UsernameFilterGeneric.isAllowed(char)
android.text.LoginFilter.filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)
android.text.LoginFilter.onInvalidCharacter(char)
android.text.LoginFilter.onStart()
android.text.LoginFilter.onStop()
android.text.Selection.chooseHorizontal(android.text.Layout,int,int,int)
android.text.Selection.extendDown(android.text.Spannable,android.text.Layout)
android.text.Selection.extendLeft(android.text.Spannable,android.text.Layout)
android.text.Selection.extendRight(android.text.Spannable,android.text.Layout)
android.text.Selection.extendToLeftEdge(android.text.Spannable,android.text.Layout)
android.text.Selection.extendToRightEdge(android.text.Spannable,android.text.Layout)
android.text.Selection.extendUp(android.text.Spannable,android.text.Layout)
android.text.Selection.findEdge(android.text.Spannable,android.text.Layout,int)
android.text.Selection.moveDown(android.text.Spannable,android.text.Layout)
android.text.Selection.moveLeft(android.text.Spannable,android.text.Layout)
android.text.Selection.moveRight(android.text.Spannable,android.text.Layout)
android.text.Selection.moveToLeftEdge(android.text.Spannable,android.text.Layout)
android.text.Selection.moveToRightEdge(android.text.Spannable,android.text.Layout)
android.text.Selection.moveUp(android.text.Spannable,android.text.Layout)
android.text.SpannableStringBuilder.resizeFor(int)
android.text.SpannableStringBuilder.sendTextHasChanged([Landroid.text.TextWatcher;)
android.text.StaticLayout.generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,boolean,boolean,float,android.text.TextUtils$TruncateAt)
android.text.TextUtils$Reverser.<init>(java.lang.CharSequence,int,int)
android.text.TextUtils$Reverser.charAt(int)
android.text.TextUtils$Reverser.getChars(int,int,[C,int)
android.text.TextUtils$Reverser.length()
android.text.TextUtils$Reverser.subSequence(int,int)
android.text.TextUtils$Reverser.toString()
android.text.TextUtils$SimpleStringSplitter.remove()
android.text.TextUtils$TruncateAt.valueOf(java.lang.String)
android.text.TextUtils.blank(java.lang.CharSequence,int,int)
android.text.TextUtils.ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt)
android.text.TextUtils.ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback)
android.text.TextUtils.getChars(java.lang.CharSequence,int,int,[C,int)
android.text.TextUtils.obtain(int)
android.text.TextUtils.readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object)
android.text.TextUtils.recycle([C)
android.text.TextUtils.regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)
android.text.TextUtils.split(java.lang.String,java.util.regex.Pattern)
android.text.TextUtils.writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object)
android.text.format.DateFormat.appendQuotedText(android.text.SpannableStringBuilder,int,int)
android.text.format.DateFormat.formatZoneOffset(int,int)
android.text.format.DateFormat.getDateFormatString(android.content.Context)
android.text.format.DateFormat.getDateFormatStringForSetting(android.content.Context,java.lang.String)
android.text.format.DateFormat.getMonthString(java.util.Calendar,int)
android.text.format.DateFormat.getTimeZoneString(java.util.Calendar,int)
android.text.format.DateFormat.getYearString(java.util.Calendar,int)
android.text.format.DateFormat.zeroPad(int,int)
android.text.format.DateUtils.formatDateRange(android.content.Context,java.util.Formatter,long,long,int)
android.text.format.DateUtils.formatElapsedTime(java.lang.StringBuilder,java.lang.String,long,long)
android.text.format.DateUtils.formatElapsedTime(java.lang.StringBuilder,java.lang.String,long,long,long)
android.text.format.DateUtils.getRelativeDayString(android.content.res.Resources,long,long)
android.text.format.DateUtils.initFormatStrings()
android.text.format.DateUtils.toDigitChar(long)
android.text.format.Formatter.formatFileSize(android.content.Context,long,boolean)
android.text.format.Time.format1(java.lang.String)
android.text.format.Time.getActualMaximum(int)
android.text.format.Time.nativeParse(java.lang.String)
android.text.format.Time.nativeParse3339(java.lang.String)
android.text.method.ArrowKeyMovementMethod.down(android.widget.TextView,android.text.Spannable)
android.text.method.ArrowKeyMovementMethod.executeDown(android.widget.TextView,android.text.Spannable,int)
android.text.method.ArrowKeyMovementMethod.findWordEnd(java.lang.CharSequence,int)
android.text.method.ArrowKeyMovementMethod.findWordStart(java.lang.CharSequence,int)
android.text.method.ArrowKeyMovementMethod.getOffset(int,int,android.widget.TextView)
android.text.method.ArrowKeyMovementMethod.left(android.widget.TextView,android.text.Spannable)
android.text.method.ArrowKeyMovementMethod.right(android.widget.TextView,android.text.Spannable)
android.text.method.ArrowKeyMovementMethod.sameWord(java.lang.CharSequence,int,int)
android.text.method.ArrowKeyMovementMethod.up(android.widget.TextView,android.text.Spannable)
android.text.method.BaseKeyListener.<init>()
android.text.method.BaseKeyListener.altBackspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.BaseKeyListener.makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean)
android.text.method.BaseKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.CharacterPickerDialog$OptionsAdapter.<init>(android.text.method.CharacterPickerDialog,android.content.Context)
android.text.method.CharacterPickerDialog$OptionsAdapter.getCount()
android.text.method.CharacterPickerDialog$OptionsAdapter.getItem(int)
android.text.method.CharacterPickerDialog$OptionsAdapter.getItemId(int)
android.text.method.CharacterPickerDialog$OptionsAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.text.method.CharacterPickerDialog.onItemClick(android.widget.AdapterView,android.view.View,int,long)
android.text.method.CharacterPickerDialog.replaceCharacterAndClose(java.lang.CharSequence)
android.text.method.DateKeyListener.getAcceptedChars()
android.text.method.DateTimeKeyListener.getAcceptedChars()
android.text.method.DialerKeyListener.getAcceptedChars()
android.text.method.DialerKeyListener.lookup(android.view.KeyEvent,android.text.Spannable)
android.text.method.DigitsKeyListener.getAcceptedChars()
android.text.method.HideReturnsTransformationMethod.getOriginal()
android.text.method.HideReturnsTransformationMethod.getReplacement()
android.text.method.LinkMovementMethod.action(int,android.widget.TextView,android.text.Spannable)
android.text.method.LinkMovementMethod.down(android.widget.TextView,android.text.Spannable)
android.text.method.LinkMovementMethod.left(android.widget.TextView,android.text.Spannable)
android.text.method.LinkMovementMethod.right(android.widget.TextView,android.text.Spannable)
android.text.method.LinkMovementMethod.up(android.widget.TextView,android.text.Spannable)
android.text.method.MetaKeyKeyListener.<init>()
android.text.method.MetaKeyKeyListener.adjust(android.text.Spannable,java.lang.Object)
android.text.method.MetaKeyKeyListener.adjust(long,int,long)
android.text.method.MetaKeyKeyListener.getActive(java.lang.CharSequence,java.lang.Object,int,int)
android.text.method.MetaKeyKeyListener.getActive(long,int,int,int)
android.text.method.MetaKeyKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.MetaKeyKeyListener.press(android.text.Editable,java.lang.Object)
android.text.method.MetaKeyKeyListener.press(long,int,long)
android.text.method.MetaKeyKeyListener.release(android.text.Editable,java.lang.Object)
android.text.method.MetaKeyKeyListener.release(long,int,long)
android.text.method.MetaKeyKeyListener.resetLock(android.text.Spannable,java.lang.Object)
android.text.method.MetaKeyKeyListener.resetLock(long,int,long)
android.text.method.MetaKeyKeyListener.resetLockedMeta(android.text.Spannable)
android.text.method.MultiTapKeyListener$Timeout.<init>(android.text.method.MultiTapKeyListener,android.text.Editable)
android.text.method.MultiTapKeyListener$Timeout.run()
android.text.method.MultiTapKeyListener.<init>(android.text.method.TextKeyListener$Capitalize,boolean)
android.text.method.MultiTapKeyListener.getInputType()
android.text.method.MultiTapKeyListener.getInstance(boolean,android.text.method.TextKeyListener$Capitalize)
android.text.method.MultiTapKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.MultiTapKeyListener.onSpanAdded(android.text.Spannable,java.lang.Object,int,int)
android.text.method.MultiTapKeyListener.onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)
android.text.method.MultiTapKeyListener.onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)
android.text.method.MultiTapKeyListener.removeTimeouts(android.text.Spannable)
android.text.method.NumberKeyListener.<init>()
android.text.method.NumberKeyListener.lookup(android.view.KeyEvent,android.text.Spannable)
android.text.method.NumberKeyListener.ok([C,char)
android.text.method.PasswordTransformationMethod$PasswordCharSequence.<init>(java.lang.CharSequence)
android.text.method.PasswordTransformationMethod$PasswordCharSequence.charAt(int)
android.text.method.PasswordTransformationMethod$PasswordCharSequence.getChars(int,int,[C,int)
android.text.method.PasswordTransformationMethod$PasswordCharSequence.length()
android.text.method.PasswordTransformationMethod$PasswordCharSequence.subSequence(int,int)
android.text.method.PasswordTransformationMethod$PasswordCharSequence.toString()
android.text.method.PasswordTransformationMethod$ViewReference.<init>(android.view.View)
android.text.method.PasswordTransformationMethod$Visible.<init>(android.text.Spannable,android.text.method.PasswordTransformationMethod)
android.text.method.PasswordTransformationMethod$Visible.run()
android.text.method.PasswordTransformationMethod.removeVisibleSpans(android.text.Spannable)
android.text.method.QwertyKeyListener$Replaced.<init>([C)
android.text.method.QwertyKeyListener.<init>(android.text.method.TextKeyListener$Capitalize,boolean)
android.text.method.QwertyKeyListener.getInputType()
android.text.method.QwertyKeyListener.getInstance(boolean,android.text.method.TextKeyListener$Capitalize)
android.text.method.QwertyKeyListener.getReplacement(java.lang.CharSequence,int,int,android.view.View)
android.text.method.QwertyKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.QwertyKeyListener.showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int)
android.text.method.QwertyKeyListener.toTitleCase(java.lang.String)
android.text.method.ReplacementTransformationMethod$ReplacementCharSequence.<init>(java.lang.CharSequence,[C,[C)
android.text.method.ReplacementTransformationMethod$ReplacementCharSequence.charAt(int)
android.text.method.ReplacementTransformationMethod$ReplacementCharSequence.getChars(int,int,[C,int)
android.text.method.ReplacementTransformationMethod$ReplacementCharSequence.length()
android.text.method.ReplacementTransformationMethod$ReplacementCharSequence.subSequence(int,int)
android.text.method.ReplacementTransformationMethod$ReplacementCharSequence.toString()
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.<init>(android.text.Spanned,[C,[C)
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.getSpanEnd(java.lang.Object)
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.getSpanFlags(java.lang.Object)
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.getSpanStart(java.lang.Object)
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.getSpans(int,int,java.lang.Class)
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.nextSpanTransition(int,int,java.lang.Class)
android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence.subSequence(int,int)
android.text.method.ReplacementTransformationMethod.<init>()
android.text.method.ScrollingMovementMethod.down(android.widget.TextView,android.text.Spannable)
android.text.method.ScrollingMovementMethod.executeDown(android.widget.TextView,android.text.Spannable,int)
android.text.method.ScrollingMovementMethod.left(android.widget.TextView,android.text.Spannable)
android.text.method.ScrollingMovementMethod.up(android.widget.TextView,android.text.Spannable)
android.text.method.SingleLineTransformationMethod.getOriginal()
android.text.method.SingleLineTransformationMethod.getReplacement()
android.text.method.TextKeyListener$Capitalize.valueOf(java.lang.String)
android.text.method.TextKeyListener$NullKeyListener.clearMetaKeyState(android.view.View,android.text.Editable,int)
android.text.method.TextKeyListener$NullKeyListener.getInputType()
android.text.method.TextKeyListener$NullKeyListener.getInstance()
android.text.method.TextKeyListener$NullKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.TextKeyListener$NullKeyListener.onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)
android.text.method.TextKeyListener$NullKeyListener.onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)
android.text.method.TextKeyListener$SettingsObserver.<init>(android.text.method.TextKeyListener)
android.text.method.TextKeyListener$SettingsObserver.onChange(boolean)
android.text.method.TextKeyListener.<init>(android.text.method.TextKeyListener$Capitalize,boolean)
android.text.method.TextKeyListener.getInstance(boolean,android.text.method.TextKeyListener$Capitalize)
android.text.method.TextKeyListener.getKeyListener(android.view.KeyEvent)
android.text.method.TextKeyListener.initPrefs(android.content.Context)
android.text.method.TextKeyListener.shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int)
android.text.method.TextKeyListener.updatePrefs(android.content.ContentResolver)
android.text.method.TimeKeyListener.getAcceptedChars()
android.text.method.Touch$DragState.<init>(float,float,int,int)
android.text.method.Touch.getMaxScrollX(android.widget.TextView,android.text.Layout,int)
android.text.method.Touch.scrollTo(android.widget.TextView,android.text.Layout,int,int)
android.text.style.BulletSpan.drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)
android.text.style.CharacterStyle$Passthrough.<init>(android.text.style.CharacterStyle)
android.text.style.CharacterStyle$Passthrough.getUnderlying()
android.text.style.CharacterStyle$Passthrough.updateDrawState(android.text.TextPaint)
android.text.style.CharacterStyle.<init>()
android.text.style.ClickableSpan.<init>()
android.text.style.ClickableSpan.updateDrawState(android.text.TextPaint)
android.text.style.DrawableMarginSpan.chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)
android.text.style.DrawableMarginSpan.drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)
android.text.style.ForegroundColorSpan.updateDrawState(android.text.TextPaint)
android.text.style.IconMarginSpan.chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)
android.text.style.IconMarginSpan.drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)
android.text.style.MaskFilterSpan.<init>(android.graphics.MaskFilter)
android.text.style.MaskFilterSpan.getMaskFilter()
android.text.style.MaskFilterSpan.updateDrawState(android.text.TextPaint)
android.text.style.MetricAffectingSpan$Passthrough.<init>(android.text.style.MetricAffectingSpan)
android.text.style.MetricAffectingSpan$Passthrough.getUnderlying()
android.text.style.MetricAffectingSpan$Passthrough.updateDrawState(android.text.TextPaint)
android.text.style.MetricAffectingSpan$Passthrough.updateMeasureState(android.text.TextPaint)
android.text.style.MetricAffectingSpan.<init>()
android.text.style.MetricAffectingSpan.getUnderlying()
android.text.style.QuoteSpan.drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)
android.text.style.RasterizerSpan.<init>(android.graphics.Rasterizer)
android.text.style.RasterizerSpan.getRasterizer()
android.text.style.RasterizerSpan.updateDrawState(android.text.TextPaint)
android.text.style.ReplacementSpan.<init>()
android.text.style.ReplacementSpan.updateDrawState(android.text.TextPaint)
android.text.style.ReplacementSpan.updateMeasureState(android.text.TextPaint)
android.text.style.ScaleXSpan.updateDrawState(android.text.TextPaint)
android.text.style.ScaleXSpan.updateMeasureState(android.text.TextPaint)
android.text.style.StrikethroughSpan.updateDrawState(android.text.TextPaint)
android.text.style.StyleSpan.apply(android.graphics.Paint,int)
android.text.style.StyleSpan.updateDrawState(android.text.TextPaint)
android.text.style.StyleSpan.updateMeasureState(android.text.TextPaint)
android.text.style.SubscriptSpan.updateDrawState(android.text.TextPaint)
android.text.style.SubscriptSpan.updateMeasureState(android.text.TextPaint)
android.text.style.SuperscriptSpan.updateDrawState(android.text.TextPaint)
android.text.style.SuperscriptSpan.updateMeasureState(android.text.TextPaint)
android.text.style.TextAppearanceSpan.updateDrawState(android.text.TextPaint)
android.text.style.TextAppearanceSpan.updateMeasureState(android.text.TextPaint)
android.text.style.TypefaceSpan.apply(android.graphics.Paint,java.lang.String)
android.text.style.TypefaceSpan.updateDrawState(android.text.TextPaint)
android.text.style.TypefaceSpan.updateMeasureState(android.text.TextPaint)
android.text.style.URLSpan.onClick(android.view.View)
android.text.style.UnderlineSpan.updateDrawState(android.text.TextPaint)
android.text.util.Linkify.addLinkMovementMethod(android.widget.TextView)
android.text.util.Linkify.addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
android.text.util.Linkify.addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
android.text.util.Linkify.applyLink(java.lang.String,int,int,android.text.Spannable)
android.text.util.Linkify.gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,[Ljava.lang.String;,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
android.text.util.Linkify.gatherMapLinks(java.util.ArrayList,android.text.Spannable)
android.text.util.Linkify.makeUrl(java.lang.String,[Ljava.lang.String;,java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)
android.text.util.Linkify.pruneOverlaps(java.util.ArrayList)
android.text.util.Rfc822Token.hashCode()
android.text.util.Rfc822Token.stringEquals(java.lang.String,java.lang.String)
android.text.util.Rfc822Tokenizer.crunch(java.lang.StringBuilder)
android.text.util.Rfc822Tokenizer.tokenize(java.lang.CharSequence,java.util.Collection)
android.util.Base64$Decoder.<init>(int,[B)
android.util.Base64$Decoder.maxOutputSize(int)
android.util.Base64$Decoder.process([B,int,int,boolean)
android.util.Base64$Encoder.<init>(int,[B)
android.util.Base64$Encoder.maxOutputSize(int)
android.util.Base64$Encoder.process([B,int,int,boolean)
android.util.Base64InputStream.mark(int)
android.util.Base64InputStream.refill()
android.util.Base64InputStream.reset()
android.util.Base64InputStream.skip(long)
android.util.Base64OutputStream.embiggen([B,int)
android.util.Base64OutputStream.flushBuffer()
android.util.Base64OutputStream.internalWrite([B,int,int,boolean)
android.util.DisplayMetrics.getDeviceDensity()
android.util.DisplayMetrics.updateMetrics(android.content.res.CompatibilityInfo,int,int)
android.util.EventLog$Event.decodeObject()
android.util.EventLog$Event.getData()
android.util.EventLog$Event.getProcessId()
android.util.EventLog$Event.getTag()
android.util.EventLog$Event.getThreadId()
android.util.EventLog$Event.getTimeNanos()
android.util.EventLog.readEvents([I,java.util.Collection)
android.util.EventLog.readTagsFile()
android.util.EventLogTags.<init>(java.io.BufferedReader)
android.util.Log.d(java.lang.String,java.lang.String,java.lang.Throwable)
android.util.Log.e(java.lang.String,java.lang.String,java.lang.Throwable)
android.util.Log.getStackTraceString(java.lang.Throwable)
android.util.Log.i(java.lang.String,java.lang.String,java.lang.Throwable)
android.util.Log.v(java.lang.String,java.lang.String,java.lang.Throwable)
android.util.Log.w(java.lang.String,java.lang.String,java.lang.Throwable)
android.util.Log.w(java.lang.String,java.lang.Throwable)
android.util.Log.wtf(java.lang.String,java.lang.String,java.lang.Throwable)
android.util.Log.wtf(java.lang.String,java.lang.Throwable)
android.util.MonthDisplayHelper.recalculate()
android.util.Pair.hashCode()
android.util.Patterns.concatGroups(java.util.regex.Matcher)
android.util.Patterns.digitsAndPlusOnly(java.util.regex.Matcher)
android.util.PrintStreamPrinter.<init>(java.io.PrintStream)
android.util.PrintStreamPrinter.println(java.lang.String)
android.util.PrintWriterPrinter.<init>(java.io.PrintWriter)
android.util.PrintWriterPrinter.println(java.lang.String)
android.util.SparseArray.binarySearch([I,int,int,int)
android.util.SparseArray.checkIntegrity()
android.util.SparseArray.gc()
android.util.SparseBooleanArray.binarySearch([I,int,int,int)
android.util.SparseBooleanArray.checkIntegrity()
android.util.SparseIntArray.binarySearch([I,int,int,int)
android.util.SparseIntArray.checkIntegrity()
android.util.TypedValue.applyDimension(int,float,android.util.DisplayMetrics)
android.util.TypedValue.complexToDimension(int,android.util.DisplayMetrics)
android.util.TypedValue.complexToDimensionNoisy(int,android.util.DisplayMetrics)
android.util.TypedValue.complexToDimensionPixelOffset(int,android.util.DisplayMetrics)
android.util.TypedValue.complexToDimensionPixelSize(int,android.util.DisplayMetrics)
android.util.TypedValue.getDimension(android.util.DisplayMetrics)
android.util.Xml$Encoding.valueOf(java.lang.String)
android.util.Xml.findEncodingByName(java.lang.String)
android.util.Xml.parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)
android.util.Xml.parse(java.io.Reader,org.xml.sax.ContentHandler)
android.util.Xml.parse(java.lang.String,org.xml.sax.ContentHandler)
android.view.ContextThemeWrapper.initializeTheme()
android.view.Display$CompatibleDisplay.getHeight()
android.view.Display$CompatibleDisplay.getWidth()
android.view.Display.createMetricsBasedDisplay(int,android.util.DisplayMetrics)
android.view.Display.getDisplayCount()
android.view.Display.getDisplayId()
android.view.Display.getHeight()
android.view.Display.getMetrics(android.util.DisplayMetrics)
android.view.Display.getOrientation()
android.view.Display.getPixelFormat()
android.view.Display.getRefreshRate()
android.view.Display.getRotation()
android.view.Display.getWidth()
android.view.Display.init(int)
android.view.Display.nativeClassInit()
android.view.FocusFinder.beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)
android.view.FocusFinder.getWeightedDistanceFor(int,int)
android.view.FocusFinder.isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.isCandidate(android.graphics.Rect,android.graphics.Rect,int)
android.view.FocusFinder.isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.isTouchCandidate(int,int,android.graphics.Rect,int)
android.view.FocusFinder.majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
android.view.FocusFinder.minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
android.view.GestureDetector$GestureHandler.handleMessage(android.os.Message)
android.view.GestureDetector.cancel()
android.view.GestureDetector.dispatchLongPress()
android.view.GestureDetector.init(android.content.Context,boolean)
android.view.GestureDetector.isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)
android.view.KeyCharacterMap.ctor_native(int)
android.view.KeyCharacterMap.dtor_native(int)
android.view.KeyCharacterMap.finalize()
android.view.KeyCharacterMap.getDisplayLabel_native(int,int)
android.view.KeyCharacterMap.getEvents_native(int,[C)
android.view.KeyCharacterMap.getKeyData_native(int,int,android.view.KeyCharacterMap$KeyData)
android.view.KeyCharacterMap.getKeyboardType_native(int)
android.view.KeyCharacterMap.getMatch_native(int,int,[C,int)
android.view.KeyCharacterMap.getNumber_native(int,int)
android.view.KeyCharacterMap.get_native(int,int,int)
android.view.KeyEvent.getKeyData(android.view.KeyCharacterMap$KeyData)
android.view.LayoutInflater$FactoryMerger.onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
android.view.LayoutInflater.createView(java.lang.String,java.lang.String,android.util.AttributeSet)
android.view.LayoutInflater.createViewFromTag(java.lang.String,android.util.AttributeSet)
android.view.LayoutInflater.failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)
android.view.LayoutInflater.from(android.content.Context)
android.view.LayoutInflater.getContext()
android.view.LayoutInflater.getFactory()
android.view.LayoutInflater.getFilter()
android.view.LayoutInflater.inflate(int,android.view.ViewGroup)
android.view.LayoutInflater.inflate(int,android.view.ViewGroup,boolean)
android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)
android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)
android.view.LayoutInflater.onCreateView(java.lang.String,android.util.AttributeSet)
android.view.LayoutInflater.parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)
android.view.LayoutInflater.parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View)
android.view.LayoutInflater.rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)
android.view.LayoutInflater.setFactory(android.view.LayoutInflater$Factory)
android.view.LayoutInflater.setFilter(android.view.LayoutInflater$Filter)
android.view.MenuInflater$MenuState.<init>(android.view.MenuInflater,android.view.Menu)
android.view.MenuInflater$MenuState.addItem()
android.view.MenuInflater$MenuState.addSubMenuItem()
android.view.MenuInflater$MenuState.getShortcut(java.lang.String)
android.view.MenuInflater$MenuState.hasAddedItem()
android.view.MenuInflater$MenuState.readGroup(android.util.AttributeSet)
android.view.MenuInflater$MenuState.readItem(android.util.AttributeSet)
android.view.MenuInflater$MenuState.resetGroup()
android.view.MenuInflater$MenuState.setItem(android.view.MenuItem)
android.view.MenuInflater.inflate(int,android.view.Menu)
android.view.MenuInflater.parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
android.view.MotionEvent.addBatch(long,[F,int)
android.view.MotionEvent.obtain()
android.view.MotionEvent.obtainNano(long,long,long,int,int,[I,[F,int,float,float,int,int)
android.view.MotionEvent.readFromParcel(android.os.Parcel)
android.view.OrientationEventListener$SensorEventListenerImpl.onAccuracyChanged(android.hardware.Sensor,int)
android.view.OrientationEventListener$SensorEventListenerImpl.onSensorChanged(android.hardware.SensorEvent)
android.view.OrientationEventListener.<init>(android.content.Context)
android.view.OrientationEventListener.<init>(android.content.Context,int)
android.view.OrientationEventListener.canDetectOrientation()
android.view.OrientationEventListener.disable()
android.view.OrientationEventListener.enable()
android.view.OrientationEventListener.registerListener(android.view.OrientationListener)
android.view.OrientationListener$OrientationEventListenerInternal.onOrientationChanged(int)
android.view.OrientationListener.<init>(android.content.Context)
android.view.OrientationListener.<init>(android.content.Context,int)
android.view.OrientationListener.disable()
android.view.OrientationListener.enable()
android.view.OrientationListener.onAccuracyChanged(int,int)
android.view.OrientationListener.onSensorChanged(int,[F)
android.view.ScaleGestureDetector.getEventTime()
android.view.ScaleGestureDetector.getRawX(android.view.MotionEvent,int)
android.view.ScaleGestureDetector.getRawY(android.view.MotionEvent,int)
android.view.ScaleGestureDetector.reset()
android.view.ScaleGestureDetector.setContext(android.view.MotionEvent)
android.view.Surface$CompatibleCanvas.getHeight()
android.view.Surface$CompatibleCanvas.getMatrix(android.graphics.Matrix)
android.view.Surface$CompatibleCanvas.getWidth()
android.view.Surface$CompatibleCanvas.setMatrix(android.graphics.Matrix)
android.view.Surface.<init>(android.view.SurfaceSession,int,java.lang.String,int,int,int,int,int)
android.view.Surface.init(android.view.SurfaceSession,int,java.lang.String,int,int,int,int,int)
android.view.Surface.unlockCanvas(android.graphics.Canvas)
android.view.Surface.unlockCanvasAndPost(android.graphics.Canvas)
android.view.SurfaceView$MyWindow.<init>(android.view.SurfaceView)
android.view.SurfaceView$MyWindow.dispatchAppVisibility(boolean)
android.view.SurfaceView$MyWindow.dispatchGetNewSurface()
android.view.SurfaceView$MyWindow.dispatchKey(android.view.KeyEvent)
android.view.SurfaceView$MyWindow.dispatchPointer(android.view.MotionEvent,long,boolean)
android.view.SurfaceView$MyWindow.dispatchTrackball(android.view.MotionEvent,long,boolean)
android.view.SurfaceView$MyWindow.executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)
android.view.SurfaceView$MyWindow.resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)
android.view.SurfaceView$MyWindow.windowFocusChanged(boolean,boolean)
android.view.SurfaceView.onAttachedToWindow()
android.view.View$CheckForTap.run()
android.view.View$PerformClick.run()
android.view.View$ScrollabilityCache.<init>(android.view.ViewConfiguration,android.view.View)
android.view.View$ScrollabilityCache.run()
android.view.View$ScrollabilityCache.setFadeColor(int)
android.view.View$UnsetPressedState.run()
android.view.View.createContextMenu(android.view.ContextMenu)
android.view.View.dispatchAttachedToWindow(android.view.View$AttachInfo,int)
android.view.View.inflate(android.content.Context,int,android.view.ViewGroup)
android.view.View.initializeFadingEdge(android.content.res.TypedArray)
android.view.View.initializeScrollbars(android.content.res.TypedArray)
android.view.View.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
android.view.View.setTagInternal(int,java.lang.Object)
android.view.ViewDebug$HierarchyTraceType.valueOf(java.lang.String)
android.view.ViewDebug$MotionEventTraceType.valueOf(java.lang.String)
android.view.ViewDebug$RecyclerTraceType.valueOf(java.lang.String)
android.view.ViewDebug.captureLayers(android.view.View,java.io.DataOutputStream)
android.view.ViewDebug.capturedViewExportMethods(java.lang.Object,java.lang.Class,java.lang.String)
android.view.ViewDebug.dump(android.view.View,java.io.OutputStream)
android.view.ViewDebug.dumpViewHierarchy(android.view.ViewGroup,java.io.BufferedWriter,int)
android.view.ViewDebug.dumpViewHierarchyWithProperties(android.content.Context,android.view.ViewGroup,java.io.BufferedWriter,int)
android.view.ViewDebug.dumpViewProperties(android.content.Context,java.lang.Object,java.io.BufferedWriter)
android.view.ViewDebug.dumpViewProperties(android.content.Context,java.lang.Object,java.io.BufferedWriter,java.lang.String)
android.view.ViewDebug.dumpViewWithProperties(android.content.Context,android.view.View,java.io.BufferedWriter,int)
android.view.ViewDebug.exportMethods(android.content.Context,java.lang.Object,java.io.BufferedWriter,java.lang.Class,java.lang.String)
android.view.ViewDebug.exportUnrolledArray(android.content.Context,java.io.BufferedWriter,android.view.ViewDebug$ExportedProperty,[I,java.lang.String,java.lang.String)
android.view.ViewDebug.exportUnrolledFlags(java.io.BufferedWriter,[Landroid.view.ViewDebug$FlagToString;,int,java.lang.String)
android.view.ViewDebug.findView(android.view.ViewGroup,java.lang.String,int)
android.view.ViewDebug.profile(android.view.View,java.io.OutputStream,java.lang.String)
android.view.ViewDebug.profileViewOperation(android.view.View,android.view.ViewDebug$ViewOperation)
android.view.ViewDebug.trace(android.view.View,android.view.MotionEvent,android.view.ViewDebug$MotionEventTraceType)
android.view.ViewDebug.trace(android.view.View,android.view.ViewDebug$HierarchyTraceType)
android.view.ViewDebug.trace(android.view.View,android.view.ViewDebug$RecyclerTraceType,[I)
android.view.ViewGroup$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.view.ViewGroup$LayoutParams.setBaseAttributes(android.content.res.TypedArray,int,int)
android.view.ViewGroup$MarginLayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.view.ViewGroup.dispatchAttachedToWindow(android.view.View$AttachInfo,int)
android.view.ViewGroup.generateLayoutParams(android.util.AttributeSet)
android.view.ViewGroup.removeViewInternal(int,android.view.View)
android.view.ViewGroup.removeViewsInternal(int,int)
android.view.ViewStub.dispatchDraw(android.graphics.Canvas)
android.view.ViewStub.inflate()
android.view.ViewStub.initialize(android.content.Context)
android.view.ViewStub.onMeasure(int,int)
android.view.ViewStub.setOnInflateListener(android.view.ViewStub$OnInflateListener)
android.view.ViewTreeObserver.addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)
android.view.ViewTreeObserver.addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
android.view.ViewTreeObserver.addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)
android.view.ViewTreeObserver.addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)
android.view.ViewTreeObserver.checkIsAlive()
android.view.ViewTreeObserver.kill()
android.view.ViewTreeObserver.removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
android.view.ViewTreeObserver.removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)
android.view.ViewTreeObserver.removeOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)
android.view.ViewTreeObserver.removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)
android.view.Window$LocalWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams)
android.view.Window$LocalWindowManager.getDefaultDisplay()
android.view.Window$LocalWindowManager.removeView(android.view.View)
android.view.Window$LocalWindowManager.removeViewImmediate(android.view.View)
android.view.Window$LocalWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)
android.view.Window.findViewById(int)
android.view.accessibility.AccessibilityEvent.clear()
android.view.accessibility.AccessibilityEvent.getBooleanProperty(int)
android.view.accessibility.AccessibilityEvent.initFromParcel(android.os.Parcel)
android.view.accessibility.AccessibilityEvent.setBooleanProperty(int,boolean)
android.view.accessibility.AccessibilityManager$MyHandler.handleMessage(android.os.Message)
android.view.animation.AlphaAnimation.applyTransformation(float,android.view.animation.Transformation)
android.view.animation.Animation$Description.parseValue(android.util.TypedValue)
android.view.animation.Animation.<init>()
android.view.animation.Animation.<init>(android.content.Context,android.util.AttributeSet)
android.view.animation.Animation.applyTransformation(float,android.view.animation.Transformation)
android.view.animation.Animation.clone()
android.view.animation.Animation.ensureInterpolator()
android.view.animation.Animation.resolveSize(int,float,int,int)
android.view.animation.Animation.setAnimationListener(android.view.animation.Animation$AnimationListener)
android.view.animation.Animation.setInterpolator(android.content.Context,int)
android.view.animation.AnimationSet.clone()
android.view.animation.AnimationSet.getTransformation(long,android.view.animation.Transformation)
android.view.animation.AnimationSet.init()
android.view.animation.AnimationSet.restoreChildrenStartOffset()
android.view.animation.AnimationSet.setFlag(int,boolean)
android.view.animation.AnimationUtils.createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)
android.view.animation.AnimationUtils.createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)
android.view.animation.AnimationUtils.createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)
android.view.animation.AnimationUtils.createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)
android.view.animation.AnimationUtils.createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android.view.animation.AnimationUtils.loadAnimation(android.content.Context,int)
android.view.animation.AnimationUtils.loadInterpolator(android.content.Context,int)
android.view.animation.AnimationUtils.loadLayoutAnimation(android.content.Context,int)
android.view.animation.AnticipateOvershootInterpolator.a(float,float)
android.view.animation.AnticipateOvershootInterpolator.o(float,float)
android.view.animation.BounceInterpolator.bounce(float)
android.view.animation.GridLayoutAnimationController.<init>(android.view.animation.Animation)
android.view.animation.GridLayoutAnimationController.<init>(android.view.animation.Animation,float,float)
android.view.animation.GridLayoutAnimationController.getDelayForView(android.view.View)
android.view.animation.GridLayoutAnimationController.getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)
android.view.animation.GridLayoutAnimationController.getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)
android.view.animation.LayoutAnimationController.<init>(android.view.animation.Animation)
android.view.animation.LayoutAnimationController.<init>(android.view.animation.Animation,float)
android.view.animation.LayoutAnimationController.getAnimationForView(android.view.View)
android.view.animation.LayoutAnimationController.getDelayForView(android.view.View)
android.view.animation.LayoutAnimationController.getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)
android.view.animation.LayoutAnimationController.isDone()
android.view.animation.LayoutAnimationController.setAnimation(android.content.Context,int)
android.view.animation.LayoutAnimationController.setAnimation(android.view.animation.Animation)
android.view.animation.LayoutAnimationController.setInterpolator(android.content.Context,int)
android.view.animation.LayoutAnimationController.start()
android.view.animation.RotateAnimation.applyTransformation(float,android.view.animation.Transformation)
android.view.animation.ScaleAnimation.applyTransformation(float,android.view.animation.Transformation)
android.view.animation.Transformation.printShortString(java.io.PrintWriter)
android.view.animation.TranslateAnimation.applyTransformation(float,android.view.animation.Transformation)
android.view.inputmethod.BaseInputConnection.commitCompletion(android.view.inputmethod.CompletionInfo)
android.view.inputmethod.BaseInputConnection.getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
android.view.inputmethod.BaseInputConnection.replaceText(java.lang.CharSequence,int,boolean)
android.view.inputmethod.BaseInputConnection.sendCurrentText()
android.view.inputmethod.InputConnectionWrapper.commitCompletion(android.view.inputmethod.CompletionInfo)
android.view.inputmethod.InputConnectionWrapper.getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
android.view.inputmethod.InputMethodInfo.<init>(android.content.Context,android.content.pm.ResolveInfo)
android.view.inputmethod.InputMethodManager.dispatchKeyEvent(android.content.Context,int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)
android.view.inputmethod.InputMethodManager.dispatchTrackballEvent(android.content.Context,int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)
android.view.inputmethod.InputMethodManager.doDump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String;)
android.view.inputmethod.InputMethodManager.updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)
android.webkit.CacheManager.cleanupCacheFile(android.webkit.CacheManager$CacheResult)
android.webkit.CacheManager.saveCacheFile(java.lang.String,android.webkit.CacheManager$CacheResult)
android.webkit.CacheManager.saveCacheFile(java.lang.String,long,android.webkit.CacheManager$CacheResult)
android.webkit.ConsoleMessage$MessageLevel.valueOf(java.lang.String)
android.webkit.ConsoleMessage.<init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage$MessageLevel)
android.webkit.ConsoleMessage.lineNumber()
android.webkit.ConsoleMessage.message()
android.webkit.ConsoleMessage.messageLevel()
android.webkit.ConsoleMessage.sourceId()
android.webkit.CookieManager$Cookie.domainMatch(java.lang.String)
android.webkit.CookieManager$Cookie.exactMatch(android.webkit.CookieManager$Cookie)
android.webkit.CookieManager$Cookie.pathMatch(java.lang.String)
android.webkit.CookieManager$Cookie.toString()
android.webkit.CookieManager$CookieComparator.compare(android.webkit.CookieManager$Cookie,android.webkit.CookieManager$Cookie)
android.webkit.CookieManager.clone()
android.webkit.CookieSyncManager.clearAllCookies()
android.webkit.CookieSyncManager.clearExpiredCookies(long)
android.webkit.CookieSyncManager.clearSessionCookies()
android.webkit.CookieSyncManager.getCookiesForDomain(java.lang.String)
android.webkit.CookieSyncManager.hasCookies()
android.webkit.CookieSyncManager.syncFromRamToFlash()
android.webkit.CookieSyncManager.syncFromRamToFlash(java.util.ArrayList)
android.webkit.DateSorter.beginningOfDay(java.util.Calendar)
android.webkit.HttpAuthHandler.cancel()
android.webkit.HttpAuthHandler.handleAuthRequest(android.webkit.LoadListener)
android.webkit.HttpAuthHandler.handleMessage(android.os.Message)
android.webkit.HttpAuthHandler.handleResponseForSynchronousRequest(java.lang.String,java.lang.String)
android.webkit.HttpAuthHandler.onReceivedCredentials(android.webkit.LoadListener,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
android.webkit.HttpAuthHandler.proceed(java.lang.String,java.lang.String)
android.webkit.HttpAuthHandler.processNextLoader()
android.webkit.HttpAuthHandler.signalRequestComplete()
android.webkit.HttpAuthHandler.useHttpAuthUsernamePassword()
android.webkit.HttpAuthHandler.waitForRequestToComplete()
android.webkit.JsPromptResult.confirm(java.lang.String)
android.webkit.JsPromptResult.getStringResult()
android.webkit.JsPromptResult.handleDefault()
android.webkit.JsResult.cancel()
android.webkit.JsResult.confirm()
android.webkit.JsResult.getResult()
android.webkit.JsResult.handleDefault()
android.webkit.JsResult.setReady()
android.webkit.JsResult.wakeUp()
android.webkit.MimeTypeMap.loadEntry(java.lang.String,java.lang.String)
android.webkit.MimeTypeMap.mimeTypeFromExtension(java.lang.String)
android.webkit.Plugin$DefaultClickHandler.handleClickEvent(android.content.Context)
android.webkit.Plugin$DefaultClickHandler.onClick(android.content.DialogInterface,int)
android.webkit.Plugin.dispatchClickEvent(android.content.Context)
android.webkit.Plugin.setClickHandler(android.webkit.Plugin$PreferencesClickHandler)
android.webkit.PluginData.<init>(java.io.InputStream,long,java.util.Map,int)
android.webkit.PluginData.getContentLength()
android.webkit.PluginData.getHeaders()
android.webkit.PluginData.getInputStream()
android.webkit.PluginData.getStatusCode()
android.webkit.PluginList.addPlugin(android.webkit.Plugin)
android.webkit.PluginList.removePlugin(android.webkit.Plugin)
android.webkit.SslErrorHandler.cancel()
android.webkit.SslErrorHandler.checkSslPrefTable(android.webkit.LoadListener,android.net.http.SslError)
android.webkit.SslErrorHandler.fastProcessQueuedSslErrors()
android.webkit.SslErrorHandler.handleSslErrorRequest(android.webkit.LoadListener)
android.webkit.SslErrorHandler.handleSslErrorResponse(android.webkit.LoadListener,android.net.http.SslError,boolean)
android.webkit.SslErrorHandler.proceed()
android.webkit.SslErrorHandler.processNextLoader()
android.webkit.SslErrorHandler.restoreState(android.os.Bundle)
android.webkit.URLUtil.parseContentDisposition(java.lang.String)
android.webkit.URLUtil.parseHex(byte)
android.webkit.URLUtil.verifyURLEncoding(java.lang.String)
android.webkit.UrlInterceptRegistry.getHandlers()
android.webkit.UrlInterceptRegistry.getPluginData(java.lang.String,java.util.Map)
android.webkit.UrlInterceptRegistry.getSurrogate(java.lang.String,java.util.Map)
android.webkit.UrlInterceptRegistry.registerHandler(android.webkit.UrlInterceptHandler)
android.webkit.UrlInterceptRegistry.unregisterHandler(android.webkit.UrlInterceptHandler)
android.webkit.WebBackForwardList.close(int)
android.webkit.WebBackForwardList.nativeClose(int)
android.webkit.WebBackForwardList.restoreIndex(int,int)
android.webkit.WebChromeClient.getVisitedHistory(android.webkit.ValueCallback)
android.webkit.WebChromeClient.onConsoleMessage(android.webkit.ConsoleMessage)
android.webkit.WebChromeClient.onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)
android.webkit.WebChromeClient.onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)
android.webkit.WebChromeClient.onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
android.webkit.WebChromeClient.onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
android.webkit.WebChromeClient.onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
android.webkit.WebChromeClient.onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)
android.webkit.WebChromeClient.onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)
android.webkit.WebChromeClient.onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
android.webkit.WebChromeClient.openFileChooser(android.webkit.ValueCallback)
android.webkit.WebHistoryItem.inflate(int)
android.webkit.WebHistoryItem.inflate(int,[B)
android.webkit.WebIconDatabase$EventHandler$IconResult.dispatch()
android.webkit.WebIconDatabase$EventHandler.bulkRequestIcons(android.os.Message)
android.webkit.WebSettings$EventHandler.createHandler()
android.webkit.WebSettings$EventHandler.sendMessage(android.os.Message)
android.webkit.WebSettings$EventHandler.setRenderPriority()
android.webkit.WebSettings$ZoomDensity.valueOf(java.lang.String)
android.webkit.WebSettings.nativeSync(int)
android.webkit.WebView$DragTrackerHandler.<init>(android.webkit.WebView,float,float,android.webkit.WebView$DragTracker)
android.webkit.WebView$DragTrackerHandler.buildBitmap(int,int)
android.webkit.WebView$DragTrackerHandler.computeStretch(float,float,float)
android.webkit.WebView$DragTrackerHandler.dragTo(float,float)
android.webkit.WebView$DragTrackerHandler.draw(android.graphics.Canvas)
android.webkit.WebView$DragTrackerHandler.hiddenHeightOfTitleBar()
android.webkit.WebView$DragTrackerHandler.isFinished()
android.webkit.WebView$DragTrackerHandler.offscreenBitmapConfig()
android.webkit.WebView$DragTrackerHandler.stopDrag()
android.webkit.WebView$ExtendedZoomControls.<init>(android.content.Context,android.util.AttributeSet)
android.webkit.WebView$ExtendedZoomControls.fade(int,float,float)
android.webkit.WebView$ExtendedZoomControls.hasFocus()
android.webkit.WebView$ExtendedZoomControls.hide()
android.webkit.WebView$ExtendedZoomControls.setOnZoomInClickListener(android.view.View$OnClickListener)
android.webkit.WebView$ExtendedZoomControls.setOnZoomOutClickListener(android.view.View$OnClickListener)
android.webkit.WebView$ExtendedZoomControls.show(boolean,boolean)
android.webkit.WebView$HitTestResult.setExtra(java.lang.String)
android.webkit.WebView$HitTestResult.setType(int)
android.webkit.WebView$InvokeListBox$Container.toString()
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.<init>(android.webkit.WebView$InvokeListBox,android.content.Context,[Landroid.webkit.WebView$InvokeListBox$Container;,boolean)
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.areAllItemsEnabled()
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.getItemId(int)
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.hasStableIds()
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.isEnabled(int)
android.webkit.WebView$InvokeListBox$MyArrayListAdapter.item(int)
android.webkit.WebView$InvokeListBox$SingleDataSetObserver.<init>(android.webkit.WebView$InvokeListBox,long,android.widget.ListView,android.widget.Adapter)
android.webkit.WebView$InvokeListBox$SingleDataSetObserver.onChanged()
android.webkit.WebView$InvokeListBox$SingleDataSetObserver.onInvalidate()
android.webkit.WebView$InvokeListBox.run()
android.webkit.WebView$PostScale.<init>(android.webkit.WebView,boolean)
android.webkit.WebView$PostScale.run()
android.webkit.WebView$PrivateHandler.handleMessage(android.os.Message)
android.webkit.WebView$RequestFormData.<init>(android.webkit.WebView,java.lang.String,java.lang.String,android.os.Message)
android.webkit.WebView$RequestFormData.run()
android.webkit.WebView$ScaleDetectorListener.onScale(android.view.ScaleGestureDetector)
android.webkit.WebView$ScaleDetectorListener.onScaleBegin(android.view.ScaleGestureDetector)
android.webkit.WebView$ScaleDetectorListener.onScaleEnd(android.view.ScaleGestureDetector)
android.webkit.WebView$WebViewTransport.setWebView(android.webkit.WebView)
android.webkit.WebView.cancelTouch()
android.webkit.WebView.centerKeyPressOnTextField()
android.webkit.WebView.didUpdateTextViewBounds(boolean)
android.webkit.WebView.doMotionUp(int,int)
android.webkit.WebView.drawContent(android.graphics.Canvas)
android.webkit.WebView.isPluginFitOnScreen(android.webkit.ViewManager$ChildView)
android.webkit.WebView.setPictureListener(android.webkit.WebView$PictureListener)
android.webkit.WebView.setWebBackForwardListClient(android.webkit.WebBackForwardListClient)
android.webkit.WebView.updateTextSelectionFromMessage(int,int,android.webkit.WebViewCore$TextSelectionData)
android.webkit.WebView.updateZoomRange(android.webkit.WebViewCore$RestoreState,int,int,boolean)
android.webkit.WebViewClient.onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)
android.webkit.WebViewClient.onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)
android.webkit.WebViewClient.onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)
android.webkit.WebViewClient.onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)
android.webkit.WebViewDatabase.addCookie(android.webkit.CookieManager$Cookie)
android.webkit.WebViewDatabase.bootstrapCacheDatabase()
android.webkit.WebViewDatabase.hasEntries(int)
android.widget.AbsListView$CheckForKeyLongPress.run()
android.widget.AbsListView$CheckForLongPress.run()
android.widget.AbsListView$CheckForTap.run()
android.widget.AbsListView$FlingRunnable.endFling()
android.widget.AbsListView$FlingRunnable.run()
android.widget.AbsListView$FlingRunnable.start(int)
android.widget.AbsListView$FlingRunnable.startScroll(int,int)
android.widget.AbsListView$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.AbsListView$PerformClick.run()
android.widget.AbsListView$PositionScroller.run()
android.widget.AbsListView$PositionScroller.start(int)
android.widget.AbsListView$PositionScroller.start(int,int)
android.widget.AbsListView$PositionScroller.stop()
android.widget.AbsListView$RecycleBin.addScrapView(android.view.View)
android.widget.AbsListView$RecycleBin.clear()
android.widget.AbsListView$RecycleBin.fillActiveViews(int,int)
android.widget.AbsListView$RecycleBin.getActiveView(int)
android.widget.AbsListView$RecycleBin.getScrapView(int)
android.widget.AbsListView$RecycleBin.markChildrenDirty()
android.widget.AbsListView$RecycleBin.pruneScrapViews()
android.widget.AbsListView$RecycleBin.reclaimScrapViews(java.util.List)
android.widget.AbsListView$RecycleBin.scrapActiveViews()
android.widget.AbsListView$RecycleBin.setCacheColorHint(int)
android.widget.AbsListView$RecycleBin.setViewTypeCount(int)
android.widget.AbsListView$RecycleBin.shouldRecycleViewType(int)
android.widget.AbsListView$WindowRunnnable.rememberWindowAttachCount()
android.widget.AbsListView$WindowRunnnable.sameWindow()
android.widget.AbsListView.generateLayoutParams(android.util.AttributeSet)
android.widget.AbsListView.getDistance(android.graphics.Rect,android.graphics.Rect,int)
android.widget.AbsListView.obtainView(int,[Z)
android.widget.AbsListView.onConsistencyCheck(int)
android.widget.AbsListView.onRestoreInstanceState(android.os.Parcelable)
android.widget.AbsListView.positionPopup()
android.widget.AbsListView.setSelector(int)
android.widget.AbsListView.showContextMenuForChild(android.view.View)
android.widget.AbsSeekBar.<init>(android.content.Context)
android.widget.AbsSeekBar.<init>(android.content.Context,android.util.AttributeSet)
android.widget.AbsSeekBar.<init>(android.content.Context,android.util.AttributeSet,int)
android.widget.AbsSeekBar.attemptClaimDrag()
android.widget.AbsSeekBar.drawableStateChanged()
android.widget.AbsSeekBar.onDraw(android.graphics.Canvas)
android.widget.AbsSeekBar.onKeyChange()
android.widget.AbsSeekBar.onMeasure(int,int)
android.widget.AbsSeekBar.onProgressRefresh(float,boolean)
android.widget.AbsSeekBar.onSizeChanged(int,int,int,int)
android.widget.AbsSeekBar.onStartTrackingTouch()
android.widget.AbsSeekBar.onStopTrackingTouch()
android.widget.AbsSeekBar.setThumbPos(int,android.graphics.drawable.Drawable,float,int)
android.widget.AbsSeekBar.trackTouchEvent(android.view.MotionEvent)
android.widget.AbsSeekBar.verifyDrawable(android.graphics.drawable.Drawable)
android.widget.AbsSpinner$RecycleBin.clear()
android.widget.AbsSpinner$RecycleBin.get(int)
android.widget.AbsSpinner$RecycleBin.put(int,android.view.View)
android.widget.AbsSpinner$SavedState.toString()
android.widget.AbsSpinner$SavedState.writeToParcel(android.os.Parcel,int)
android.widget.AbsSpinner.<init>(android.content.Context)
android.widget.AbsSpinner.<init>(android.content.Context,android.util.AttributeSet)
android.widget.AbsSpinner.<init>(android.content.Context,android.util.AttributeSet,int)
android.widget.AbsSpinner.generateDefaultLayoutParams()
android.widget.AbsSpinner.getAdapter()
android.widget.AbsSpinner.getChildHeight(android.view.View)
android.widget.AbsSpinner.getChildWidth(android.view.View)
android.widget.AbsSpinner.initAbsSpinner()
android.widget.AbsSpinner.onMeasure(int,int)
android.widget.AbsSpinner.onRestoreInstanceState(android.os.Parcelable)
android.widget.AbsSpinner.recycleAllViews()
android.widget.AbsSpinner.resetList()
android.widget.AbsSpinner.setAdapter(android.widget.SpinnerAdapter)
android.widget.AbsSpinner.setSelectionInt(int,boolean)
android.widget.AbsoluteLayout$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.AbsoluteLayout.checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.widget.AbsoluteLayout.generateDefaultLayoutParams()
android.widget.AbsoluteLayout.generateLayoutParams(android.util.AttributeSet)
android.widget.AbsoluteLayout.generateLayoutParams(android.view.ViewGroup$LayoutParams)
android.widget.AbsoluteLayout.onLayout(boolean,int,int,int,int)
android.widget.AbsoluteLayout.onMeasure(int,int)
android.widget.AlphabetIndexer.compare(java.lang.String,java.lang.String)
android.widget.AlphabetIndexer.getSectionForPosition(int)
android.widget.AnalogClock.onTimeChanged()
android.widget.ArrayAdapter$ArrayFilter.performFiltering(java.lang.CharSequence)
android.widget.ArrayAdapter$ArrayFilter.publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
android.widget.ArrayAdapter.<init>(android.content.Context,int,int,java.util.List)
android.widget.ArrayAdapter.<init>(android.content.Context,int,java.util.List)
android.widget.ArrayAdapter.createFromResource(android.content.Context,int,int)
android.widget.ArrayAdapter.createViewFromResource(int,android.view.View,android.view.ViewGroup,int)
android.widget.ArrayAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)
android.widget.ArrayAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.widget.ArrayAdapter.init(android.content.Context,int,int,java.util.List)
android.widget.ArrayAdapter.insert(java.lang.Object,int)
android.widget.ArrayAdapter.sort(java.util.Comparator)
android.widget.AutoCompleteTextView$DropDownItemClickListener.onItemClick(android.widget.AdapterView,android.view.View,int,long)
android.widget.AutoCompleteTextView$DropDownListView.<init>(android.content.Context)
android.widget.AutoCompleteTextView$DropDownListView.hasFocus()
android.widget.AutoCompleteTextView$DropDownListView.hasWindowFocus()
android.widget.AutoCompleteTextView$DropDownListView.isFocused()
android.widget.AutoCompleteTextView$DropDownListView.isInTouchMode()
android.widget.AutoCompleteTextView$DropDownListView.obtainView(int,[Z)
android.widget.AutoCompleteTextView$DropDownListView.onCreateDrawableState(int)
android.widget.AutoCompleteTextView$ListSelectorHider.run()
android.widget.AutoCompleteTextView$MyWatcher.afterTextChanged(android.text.Editable)
android.widget.AutoCompleteTextView$MyWatcher.beforeTextChanged(java.lang.CharSequence,int,int,int)
android.widget.AutoCompleteTextView$MyWatcher.onTextChanged(java.lang.CharSequence,int,int,int)
android.widget.AutoCompleteTextView$PassThroughClickListener.onClick(android.view.View)
android.widget.AutoCompleteTextView$PopupDataSetObserver.onChanged()
android.widget.AutoCompleteTextView$PopupDataSetObserver.onInvalidated()
android.widget.AutoCompleteTextView$PopupScrollListener.onScroll(android.widget.AbsListView,int,int,int)
android.widget.AutoCompleteTextView$PopupScrollListener.onScrollStateChanged(android.widget.AbsListView,int)
android.widget.AutoCompleteTextView$PopupTouchInterceptor.onTouch(android.view.View,android.view.MotionEvent)
android.widget.AutoCompleteTextView$ResizePopupRunnable.run()
android.widget.AutoCompleteTextView.buildDropDown()
android.widget.AutoCompleteTextView.convertSelectionToString(java.lang.Object)
android.widget.AutoCompleteTextView.ensureImeVisible(boolean)
android.widget.AutoCompleteTextView.getDropDownAnchorView()
android.widget.AutoCompleteTextView.getHintView(android.content.Context)
android.widget.AutoCompleteTextView.onClickImpl()
android.widget.AutoCompleteTextView.onCommitCompletion(android.view.inputmethod.CompletionInfo)
android.widget.AutoCompleteTextView.performCompletion(android.view.View,int,long)
android.widget.AutoCompleteTextView.performFiltering(java.lang.CharSequence,int)
android.widget.AutoCompleteTextView.setAdapter(android.widget.ListAdapter)
android.widget.AutoCompleteTextView.setDropDownBackgroundResource(int)
android.widget.AutoCompleteTextView.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android.widget.AutoCompleteTextView.setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
android.widget.AutoCompleteTextView.setValidator(android.widget.AutoCompleteTextView$Validator)
android.widget.AutoCompleteTextView.showDropDown()
android.widget.AutoCompleteTextView.updateDropDownForFilter(int)
android.widget.BaseAdapter.<init>()
android.widget.BaseAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)
android.widget.BaseAdapter.notifyDataSetChanged()
android.widget.BaseExpandableListAdapter.<init>()
android.widget.BaseExpandableListAdapter.areAllItemsEnabled()
android.widget.BaseExpandableListAdapter.getChildType(int,int)
android.widget.BaseExpandableListAdapter.getChildTypeCount()
android.widget.BaseExpandableListAdapter.getCombinedChildId(long,long)
android.widget.BaseExpandableListAdapter.getCombinedGroupId(long)
android.widget.BaseExpandableListAdapter.getGroupType(int)
android.widget.BaseExpandableListAdapter.getGroupTypeCount()
android.widget.BaseExpandableListAdapter.isEmpty()
android.widget.BaseExpandableListAdapter.notifyDataSetChanged()
android.widget.BaseExpandableListAdapter.notifyDataSetInvalidated()
android.widget.BaseExpandableListAdapter.onGroupCollapsed(int)
android.widget.BaseExpandableListAdapter.onGroupExpanded(int)
android.widget.BaseExpandableListAdapter.registerDataSetObserver(android.database.DataSetObserver)
android.widget.BaseExpandableListAdapter.unregisterDataSetObserver(android.database.DataSetObserver)
android.widget.CheckedTextView.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.widget.CompoundButton$SavedState.toString()
android.widget.CompoundButton$SavedState.writeToParcel(android.os.Parcel,int)
android.widget.CompoundButton.<init>(android.content.Context)
android.widget.CompoundButton.<init>(android.content.Context,android.util.AttributeSet)
android.widget.CompoundButton.<init>(android.content.Context,android.util.AttributeSet,int)
android.widget.CompoundButton.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.widget.CompoundButton.drawableStateChanged()
android.widget.CompoundButton.onCreateDrawableState(int)
android.widget.CompoundButton.onDraw(android.graphics.Canvas)
android.widget.CompoundButton.onRestoreInstanceState(android.os.Parcelable)
android.widget.CompoundButton.setButtonDrawable(int)
android.widget.CompoundButton.setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
android.widget.CompoundButton.setOnCheckedChangeWidgetListener(android.widget.CompoundButton$OnCheckedChangeListener)
android.widget.CompoundButton.verifyDrawable(android.graphics.drawable.Drawable)
android.widget.CursorAdapter$ChangeObserver.<init>(android.widget.CursorAdapter)
android.widget.CursorAdapter$ChangeObserver.deliverSelfNotifications()
android.widget.CursorAdapter$ChangeObserver.onChange(boolean)
android.widget.CursorAdapter$MyDataSetObserver.onChanged()
android.widget.CursorAdapter$MyDataSetObserver.onInvalidated()
android.widget.CursorAdapter.<init>(android.content.Context,android.database.Cursor)
android.widget.CursorAdapter.<init>(android.content.Context,android.database.Cursor,boolean)
android.widget.CursorAdapter.changeCursor(android.database.Cursor)
android.widget.CursorAdapter.convertToString(android.database.Cursor)
android.widget.CursorAdapter.getCount()
android.widget.CursorAdapter.getCursor()
android.widget.CursorAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)
android.widget.CursorAdapter.getFilter()
android.widget.CursorAdapter.getFilterQueryProvider()
android.widget.CursorAdapter.getItem(int)
android.widget.CursorAdapter.getItemId(int)
android.widget.CursorAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.widget.CursorAdapter.hasStableIds()
android.widget.CursorAdapter.init(android.content.Context,android.database.Cursor,boolean)
android.widget.CursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.widget.CursorAdapter.onContentChanged()
android.widget.CursorAdapter.runQueryOnBackgroundThread(java.lang.CharSequence)
android.widget.CursorAdapter.setFilterQueryProvider(android.widget.FilterQueryProvider)
android.widget.CursorTreeAdapter$MyCursorHelper$MyContentObserver.<init>(android.widget.CursorTreeAdapter$MyCursorHelper)
android.widget.CursorTreeAdapter$MyCursorHelper$MyContentObserver.deliverSelfNotifications()
android.widget.CursorTreeAdapter$MyCursorHelper$MyContentObserver.onChange(boolean)
android.widget.CursorTreeAdapter$MyCursorHelper$MyDataSetObserver.onChanged()
android.widget.CursorTreeAdapter$MyCursorHelper$MyDataSetObserver.onInvalidated()
android.widget.CursorTreeAdapter$MyCursorHelper.changeCursor(android.database.Cursor,boolean)
android.widget.CursorTreeAdapter$MyCursorHelper.deactivate()
android.widget.CursorTreeAdapter$MyCursorHelper.getCount()
android.widget.CursorTreeAdapter$MyCursorHelper.getCursor()
android.widget.CursorTreeAdapter$MyCursorHelper.getId(int)
android.widget.CursorTreeAdapter$MyCursorHelper.isValid()
android.widget.CursorTreeAdapter$MyCursorHelper.moveTo(int)
android.widget.CursorTreeAdapter.deactivateChildrenCursorHelper(int)
android.widget.CursorTreeAdapter.getChild(int,int)
android.widget.CursorTreeAdapter.getChildId(int,int)
android.widget.CursorTreeAdapter.getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)
android.widget.CursorTreeAdapter.getGroupView(int,boolean,android.view.View,android.view.ViewGroup)
android.widget.CursorTreeAdapter.onGroupCollapsed(int)
android.widget.CursorTreeAdapter.setChildrenCursor(int,android.database.Cursor)
android.widget.DatePicker$SavedState.getDay()
android.widget.DatePicker$SavedState.getMonth()
android.widget.DatePicker$SavedState.getYear()
android.widget.DatePicker$SavedState.writeToParcel(android.os.Parcel,int)
android.widget.DatePicker.<init>(android.content.Context,android.util.AttributeSet)
android.widget.DatePicker.adjustMaxDay()
android.widget.DatePicker.dispatchRestoreInstanceState(android.util.SparseArray)
android.widget.DatePicker.init(int,int,int,android.widget.DatePicker$OnDateChangedListener)
android.widget.DatePicker.notifyDateChanged()
android.widget.DatePicker.onRestoreInstanceState(android.os.Parcelable)
android.widget.DatePicker.reorderPickers([Ljava.lang.String;)
android.widget.DatePicker.updateDate(int,int,int)
android.widget.DatePicker.updateDaySpinner()
android.widget.DatePicker.updateSpinners()
android.widget.DialerFilter.clearText()
android.widget.DialerFilter.getDigits()
android.widget.DialerFilter.getFilterText()
android.widget.DialerFilter.getLetters()
android.widget.DialerFilter.makeDigitsPrimary()
android.widget.DialerFilter.makeLettersPrimary()
android.widget.DialerFilter.onFinishInflate()
android.widget.DialerFilter.onFocusChanged(boolean,int,android.graphics.Rect)
android.widget.DialerFilter.onKeyUp(int,android.view.KeyEvent)
android.widget.DialerFilter.onModeChange(int,int)
android.widget.DialerFilter.removeFilterWatcher(android.text.TextWatcher)
android.widget.DialerFilter.setDigitsWatcher(android.text.TextWatcher)
android.widget.DialerFilter.setFilterWatcher(android.text.TextWatcher)
android.widget.DialerFilter.setLettersWatcher(android.text.TextWatcher)
android.widget.DialerFilter.swapPrimaryAndHint(boolean)
android.widget.DigitalClock$FormatChangeObserver.<init>(android.widget.DigitalClock)
android.widget.DigitalClock$FormatChangeObserver.onChange(boolean)
android.widget.DigitalClock.get24HourMode()
android.widget.DigitalClock.initClock(android.content.Context)
android.widget.DigitalClock.setFormat()
android.widget.EditText.setEllipsize(android.text.TextUtils$TruncateAt)
android.widget.EditText.setText(java.lang.CharSequence,android.widget.TextView$BufferType)
android.widget.ExpandableListView.collapseGroup(int)
android.widget.ExpandableListView.drawDivider(android.graphics.Canvas,android.graphics.Rect,int)
android.widget.ExpandableListView.expandGroup(int)
android.widget.ExpandableListView.getChildOrGroupId(android.widget.ExpandableListPosition)
android.widget.ExpandableListView.getFlatListPosition(long)
android.widget.ExpandableListView.getIndicator(android.widget.ExpandableListConnector$PositionMetadata)
android.widget.ExpandableListView.handleItemClick(android.view.View,int,long)
android.widget.ExpandableListView.isGroupExpanded(int)
android.widget.ExpandableListView.onRestoreInstanceState(android.os.Parcelable)
android.widget.ExpandableListView.setAdapter(android.widget.ListAdapter)
android.widget.Filter$FilterResults.<init>()
android.widget.Filter$RequestHandler.<init>(android.widget.Filter,android.os.Looper)
android.widget.Filter$RequestHandler.handleMessage(android.os.Message)
android.widget.Filter$ResultsHandler.handleMessage(android.os.Message)
android.widget.Filter.<init>()
android.widget.Filter.convertResultToString(java.lang.Object)
android.widget.Filter.filter(java.lang.CharSequence)
android.widget.Filter.filter(java.lang.CharSequence,android.widget.Filter$FilterListener)
android.widget.Filter.setDelayer(android.widget.Filter$Delayer)
android.widget.FrameLayout$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.FrameLayout.generateLayoutParams(android.util.AttributeSet)
android.widget.Gallery$FlingRunnable.<init>(android.widget.Gallery)
android.widget.Gallery$FlingRunnable.endFling(boolean)
android.widget.Gallery$FlingRunnable.run()
android.widget.Gallery$FlingRunnable.startCommon()
android.widget.Gallery$FlingRunnable.startUsingDistance(int)
android.widget.Gallery$FlingRunnable.startUsingVelocity(int)
android.widget.Gallery$FlingRunnable.stop(boolean)
android.widget.Gallery$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.Gallery.generateLayoutParams(android.util.AttributeSet)
android.widget.Gallery.makeAndAddView(int,int,int,boolean)
android.widget.GridView.fillFromSelection(int,int,int)
android.widget.GridView.fillSelection(int,int)
android.widget.GridView.fillUp(int,int)
android.widget.GridView.isCandidateSelection(int,int)
android.widget.GridView.makeAndAddView(int,int,boolean,int,boolean,int)
android.widget.GridView.moveSelection(int,int,int)
android.widget.GridView.setupChild(android.view.View,int,int,boolean,int,boolean,boolean,int)
android.widget.HeaderViewListAdapter.<init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)
android.widget.HeaderViewListAdapter.areAllItemsEnabled()
android.widget.HeaderViewListAdapter.areAllListInfosSelectable(java.util.ArrayList)
android.widget.HeaderViewListAdapter.getCount()
android.widget.HeaderViewListAdapter.getFilter()
android.widget.HeaderViewListAdapter.getFootersCount()
android.widget.HeaderViewListAdapter.getHeadersCount()
android.widget.HeaderViewListAdapter.getItem(int)
android.widget.HeaderViewListAdapter.getItemId(int)
android.widget.HeaderViewListAdapter.getItemViewType(int)
android.widget.HeaderViewListAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.widget.HeaderViewListAdapter.getViewTypeCount()
android.widget.HeaderViewListAdapter.getWrappedAdapter()
android.widget.HeaderViewListAdapter.hasStableIds()
android.widget.HeaderViewListAdapter.isEmpty()
android.widget.HeaderViewListAdapter.isEnabled(int)
android.widget.HeaderViewListAdapter.registerDataSetObserver(android.database.DataSetObserver)
android.widget.HeaderViewListAdapter.removeFooter(android.view.View)
android.widget.HeaderViewListAdapter.removeHeader(android.view.View)
android.widget.HeaderViewListAdapter.unregisterDataSetObserver(android.database.DataSetObserver)
android.widget.ImageSwitcher.setImageDrawable(android.graphics.drawable.Drawable)
android.widget.ImageSwitcher.setImageResource(int)
android.widget.ImageSwitcher.setImageURI(android.net.Uri)
android.widget.LinearLayout$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.LinearLayout.checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.widget.LinearLayout.forceUniformHeight(int,int)
android.widget.LinearLayout.forceUniformWidth(int,int)
android.widget.LinearLayout.generateLayoutParams(android.util.AttributeSet)
android.widget.LinearLayout.measureChildBeforeLayout(android.view.View,int,int,int,int,int)
android.widget.ListView$ArrowScrollFocusResult.getAmountToScroll()
android.widget.ListView$ArrowScrollFocusResult.getSelectedPosition()
android.widget.ListView$ArrowScrollFocusResult.populate(int,int)
android.widget.ListView$FocusSelector.run()
android.widget.ListView$FocusSelector.setup(int,int)
android.widget.ListView$SavedState.toString()
android.widget.ListView$SavedState.writeToParcel(android.os.Parcel,int)
android.widget.ListView.addViewAbove(android.view.View,int)
android.widget.ListView.addViewBelow(android.view.View,int)
android.widget.ListView.amountToScroll(int,int)
android.widget.ListView.amountToScrollToNewFocus(int,android.view.View,int)
android.widget.ListView.correctTooLow(int)
android.widget.ListView.distanceToView(android.view.View)
android.widget.ListView.fillFromMiddle(int,int)
android.widget.ListView.fillFromSelection(int,int,int)
android.widget.ListView.fillSpecific(int,int)
android.widget.ListView.fillUp(int,int)
android.widget.ListView.handleHorizontalFocusWithinListItem(int)
android.widget.ListView.makeAndAddView(int,int,boolean,int,boolean)
android.widget.ListView.measureScrapChild(android.view.View,int,int)
android.widget.ListView.moveSelection(android.view.View,android.view.View,int,int,int)
android.widget.ListView.positionOfNewFocus(android.view.View)
android.widget.ListView.requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
android.widget.ListView.scrollListItemsBy(int)
android.widget.MediaController.disableUnsupportedButtons()
android.widget.MediaController.doPauseResume()
android.widget.MediaController.initControllerView(android.view.View)
android.widget.MediaController.initFloatingWindow()
android.widget.MediaController.installPrevNextListeners()
android.widget.MediaController.setProgress()
android.widget.MediaController.stringForTime(int)
android.widget.MediaController.updatePausePlay()
android.widget.MultiAutoCompleteTextView.performFiltering(java.lang.CharSequence,int,int,int)
android.widget.PopupWindow$PopupViewContainer.<init>(android.widget.PopupWindow,android.content.Context)
android.widget.PopupWindow$PopupViewContainer.dispatchKeyEvent(android.view.KeyEvent)
android.widget.PopupWindow$PopupViewContainer.dispatchTouchEvent(android.view.MotionEvent)
android.widget.PopupWindow$PopupViewContainer.onCreateDrawableState(int)
android.widget.PopupWindow$PopupViewContainer.onTouchEvent(android.view.MotionEvent)
android.widget.PopupWindow$PopupViewContainer.sendAccessibilityEvent(int)
android.widget.PopupWindow.<init>()
android.widget.PopupWindow.<init>(int,int)
android.widget.PopupWindow.computeAnimationResource()
android.widget.PopupWindow.computeFlags(int)
android.widget.PopupWindow.createPopupLayout(android.os.IBinder)
android.widget.PopupWindow.findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int)
android.widget.PopupWindow.invokePopup(android.view.WindowManager$LayoutParams)
android.widget.PopupWindow.preparePopup(android.view.WindowManager$LayoutParams)
android.widget.PopupWindow.registerForScrollChanged(android.view.View,int,int)
android.widget.PopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
android.widget.PopupWindow.unregisterForScrollChanged()
android.widget.PopupWindow.update(android.view.View,boolean,int,int,boolean,int,int)
android.widget.PopupWindow.update(int,int)
android.widget.PopupWindow.updateAboveAnchor(boolean)
android.widget.ProgressBar$RefreshProgressRunnable.run()
android.widget.ProgressBar$RefreshProgressRunnable.setup(int,int,boolean)
android.widget.ProgressBar.doRefreshProgress(int,int,boolean)
android.widget.ProgressBar.initProgressBar()
android.widget.ProgressBar.refreshProgress(int,int,boolean)
android.widget.ProgressBar.setInterpolator(android.content.Context,int)
android.widget.ProgressBar.tileify(android.graphics.drawable.Drawable,boolean)
android.widget.ProgressBar.tileifyIndeterminate(android.graphics.drawable.Drawable)
android.widget.QuickContactBadge$QueryHandler.<init>(android.widget.QuickContactBadge,android.content.ContentResolver)
android.widget.QuickContactBadge$QueryHandler.onQueryComplete(int,java.lang.Object,android.database.Cursor)
android.widget.RadioGroup$CheckedStateTracker.onCheckedChanged(android.widget.CompoundButton,boolean)
android.widget.RadioGroup$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.RadioGroup$LayoutParams.setBaseAttributes(android.content.res.TypedArray,int,int)
android.widget.RadioGroup$PassThroughHierarchyChangeListener.onChildViewAdded(android.view.View,android.view.View)
android.widget.RadioGroup$PassThroughHierarchyChangeListener.onChildViewRemoved(android.view.View,android.view.View)
android.widget.RadioGroup.addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android.widget.RadioGroup.checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.widget.RadioGroup.generateDefaultLayoutParams()
android.widget.RadioGroup.init()
android.widget.RadioGroup.onFinishInflate()
android.widget.RadioGroup.setCheckedId(int)
android.widget.RadioGroup.setCheckedStateForView(int,boolean)
android.widget.RadioGroup.setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)
android.widget.RatingBar.getProgressPerStar()
android.widget.RatingBar.setOnRatingBarChangeListener(android.widget.RatingBar$OnRatingBarChangeListener)
android.widget.RatingBar.updateSecondaryProgress(int)
android.widget.RelativeLayout$DependencyGraph$Node.acquire(android.view.View)
android.widget.RelativeLayout$DependencyGraph$Node.getNextPoolable()
android.widget.RelativeLayout$DependencyGraph$Node.release()
android.widget.RelativeLayout$DependencyGraph$Node.setNextPoolable(android.widget.RelativeLayout$DependencyGraph$Node)
android.widget.RelativeLayout$DependencyGraph.add(android.view.View)
android.widget.RelativeLayout$DependencyGraph.appendViewId(android.content.res.Resources,android.widget.RelativeLayout$DependencyGraph$Node,java.lang.StringBuilder)
android.widget.RelativeLayout$DependencyGraph.clear()
android.widget.RelativeLayout$DependencyGraph.findRoots([I)
android.widget.RelativeLayout$DependencyGraph.getSortedViews([Landroid.view.View;,[I)
android.widget.RelativeLayout$DependencyGraph.log(android.content.res.Resources,[I)
android.widget.RelativeLayout$DependencyGraph.printNode(android.content.res.Resources,android.widget.RelativeLayout$DependencyGraph$Node)
android.widget.RelativeLayout$DependencyGraph.printViewId(android.content.res.Resources,android.view.View)
android.widget.RelativeLayout$DependencyGraph.printdependents(android.content.res.Resources,android.widget.RelativeLayout$DependencyGraph$Node,java.lang.StringBuilder)
android.widget.RelativeLayout$LayoutParams.<init>(android.content.Context,android.util.AttributeSet)
android.widget.RelativeLayout$LayoutParams.addRule(int,int)
android.widget.RelativeLayout$TopToBottomLeftToRightComparator.compare(android.view.View,android.view.View)
android.widget.RelativeLayout.generateLayoutParams(android.util.AttributeSet)
android.widget.RelativeLayout.getRelatedView([I,int)
android.widget.RelativeLayout.getRelatedViewBaseline([I,int)
android.widget.RelativeLayout.getRelatedViewParams([I,int)
android.widget.RelativeLayout.onMeasure(int,int)
android.widget.RemoteViews$Action.describeContents()
android.widget.RemoteViews$ReflectionAction.apply(android.view.View)
android.widget.RemoteViews$ReflectionAction.getParameterType()
android.widget.RemoteViews$ReflectionAction.writeToParcel(android.os.Parcel,int)
android.widget.RemoteViews$SetDrawableParameters.<init>(android.widget.RemoteViews,android.os.Parcel)
android.widget.RemoteViews$SetDrawableParameters.<init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int)
android.widget.RemoteViews$SetDrawableParameters.apply(android.view.View)
android.widget.RemoteViews$SetDrawableParameters.writeToParcel(android.os.Parcel,int)
android.widget.RemoteViews$SetOnClickPendingIntent.<init>(android.widget.RemoteViews,android.os.Parcel)
android.widget.RemoteViews$SetOnClickPendingIntent.<init>(android.widget.RemoteViews,int,android.app.PendingIntent)
android.widget.RemoteViews$SetOnClickPendingIntent.apply(android.view.View)
android.widget.RemoteViews$SetOnClickPendingIntent.writeToParcel(android.os.Parcel,int)
android.widget.RemoteViews$ViewGroupAction.<init>(android.widget.RemoteViews,android.os.Parcel)
android.widget.RemoteViews$ViewGroupAction.<init>(android.widget.RemoteViews,int,android.widget.RemoteViews)
android.widget.RemoteViews$ViewGroupAction.apply(android.view.View)
android.widget.RemoteViews$ViewGroupAction.writeToParcel(android.os.Parcel,int)
android.widget.RemoteViews.addAction(android.widget.RemoteViews$Action)
android.widget.RemoteViews.apply(android.content.Context,android.view.ViewGroup)
android.widget.RemoteViews.performApply(android.view.View)
android.widget.RemoteViews.prepareContext(android.content.Context)
android.widget.RemoteViews.reapply(android.content.Context,android.view.View)
android.widget.RemoteViews.setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)
android.widget.RemoteViews.setOnClickPendingIntent(int,android.app.PendingIntent)
android.widget.ResourceCursorAdapter.<init>(android.content.Context,int,android.database.Cursor)
android.widget.ResourceCursorAdapter.<init>(android.content.Context,int,android.database.Cursor,boolean)
android.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.widget.ResourceCursorAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.widget.ResourceCursorAdapter.setDropDownViewResource(int)
android.widget.ResourceCursorAdapter.setViewResource(int)
android.widget.ResourceCursorTreeAdapter.<init>(android.content.Context,android.database.Cursor,int,int)
android.widget.ResourceCursorTreeAdapter.<init>(android.content.Context,android.database.Cursor,int,int,int)
android.widget.ResourceCursorTreeAdapter.<init>(android.content.Context,android.database.Cursor,int,int,int,int)
android.widget.ResourceCursorTreeAdapter.newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)
android.widget.ResourceCursorTreeAdapter.newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)
android.widget.Scroller.<init>(android.content.Context,android.view.animation.Interpolator)
android.widget.Scroller.viscousFluid(float)
android.widget.SeekBar.setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)
android.widget.SimpleAdapter$SimpleFilter.performFiltering(java.lang.CharSequence)
android.widget.SimpleAdapter$SimpleFilter.publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
android.widget.SimpleAdapter.<init>(android.content.Context,java.util.List,int,[Ljava.lang.String;,[I)
android.widget.SimpleAdapter.bindView(int,android.view.View)
android.widget.SimpleAdapter.createViewFromResource(int,android.view.View,android.view.ViewGroup,int)
android.widget.SimpleAdapter.getCount()
android.widget.SimpleAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)
android.widget.SimpleAdapter.getFilter()
android.widget.SimpleAdapter.getItem(int)
android.widget.SimpleAdapter.getItemId(int)
android.widget.SimpleAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.widget.SimpleAdapter.getViewBinder()
android.widget.SimpleAdapter.setDropDownViewResource(int)
android.widget.SimpleAdapter.setViewBinder(android.widget.SimpleAdapter$ViewBinder)
android.widget.SimpleAdapter.setViewImage(android.widget.ImageView,int)
android.widget.SimpleAdapter.setViewImage(android.widget.ImageView,java.lang.String)
android.widget.SimpleAdapter.setViewText(android.widget.TextView,java.lang.String)
android.widget.SimpleCursorAdapter.<init>(android.content.Context,int,android.database.Cursor,[Ljava.lang.String;,[I)
android.widget.SimpleCursorAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)
android.widget.SimpleCursorAdapter.changeCursor(android.database.Cursor)
android.widget.SimpleCursorAdapter.changeCursorAndColumns(android.database.Cursor,[Ljava.lang.String;,[I)
android.widget.SimpleCursorAdapter.convertToString(android.database.Cursor)
android.widget.SimpleCursorAdapter.findColumns([Ljava.lang.String;)
android.widget.SimpleCursorAdapter.getCursorToStringConverter()
android.widget.SimpleCursorAdapter.getStringConversionColumn()
android.widget.SimpleCursorAdapter.getViewBinder()
android.widget.SimpleCursorAdapter.setCursorToStringConverter(android.widget.SimpleCursorAdapter$CursorToStringConverter)
android.widget.SimpleCursorAdapter.setStringConversionColumn(int)
android.widget.SimpleCursorAdapter.setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)
android.widget.SimpleCursorAdapter.setViewImage(android.widget.ImageView,java.lang.String)
android.widget.SimpleCursorAdapter.setViewText(android.widget.TextView,java.lang.String)
android.widget.SimpleCursorTreeAdapter.<init>(android.content.Context,android.database.Cursor,int,[Ljava.lang.String;,[I,int,[Ljava.lang.String;,[I)
android.widget.SimpleCursorTreeAdapter.<init>(android.content.Context,android.database.Cursor,int,int,[Ljava.lang.String;,[I,int,[Ljava.lang.String;,[I)
android.widget.SimpleCursorTreeAdapter.<init>(android.content.Context,android.database.Cursor,int,int,[Ljava.lang.String;,[I,int,int,[Ljava.lang.String;,[I)
android.widget.SimpleCursorTreeAdapter.bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)
android.widget.SimpleCursorTreeAdapter.bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)
android.widget.SimpleCursorTreeAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor,[I,[I)
android.widget.SimpleCursorTreeAdapter.getViewBinder()
android.widget.SimpleCursorTreeAdapter.init([Ljava.lang.String;,[I,[Ljava.lang.String;,[I)
android.widget.SimpleCursorTreeAdapter.initChildrenFromColumns([Ljava.lang.String;,android.database.Cursor)
android.widget.SimpleCursorTreeAdapter.initFromColumns(android.database.Cursor,[Ljava.lang.String;,[I)
android.widget.SimpleCursorTreeAdapter.initGroupFromColumns([Ljava.lang.String;)
android.widget.SimpleCursorTreeAdapter.setViewBinder(android.widget.SimpleCursorTreeAdapter$ViewBinder)
android.widget.SimpleCursorTreeAdapter.setViewImage(android.widget.ImageView,java.lang.String)
android.widget.SimpleCursorTreeAdapter.setViewText(android.widget.TextView,java.lang.String)
android.widget.SimpleExpandableListAdapter.<init>(android.content.Context,java.util.List,int,[Ljava.lang.String;,[I,java.util.List,int,[Ljava.lang.String;,[I)
android.widget.SimpleExpandableListAdapter.<init>(android.content.Context,java.util.List,int,int,[Ljava.lang.String;,[I,java.util.List,int,[Ljava.lang.String;,[I)
android.widget.SimpleExpandableListAdapter.<init>(android.content.Context,java.util.List,int,int,[Ljava.lang.String;,[I,java.util.List,int,int,[Ljava.lang.String;,[I)
android.widget.SimpleExpandableListAdapter.bindView(android.view.View,java.util.Map,[Ljava.lang.String;,[I)
android.widget.SimpleExpandableListAdapter.getChild(int,int)
android.widget.SimpleExpandableListAdapter.getChildId(int,int)
android.widget.SimpleExpandableListAdapter.getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)
android.widget.SimpleExpandableListAdapter.getChildrenCount(int)
android.widget.SimpleExpandableListAdapter.getGroup(int)
android.widget.SimpleExpandableListAdapter.getGroupCount()
android.widget.SimpleExpandableListAdapter.getGroupId(int)
android.widget.SimpleExpandableListAdapter.getGroupView(int,boolean,android.view.View,android.view.ViewGroup)
android.widget.SimpleExpandableListAdapter.hasStableIds()
android.widget.SimpleExpandableListAdapter.isChildSelectable(int,int)
android.widget.SimpleExpandableListAdapter.newChildView(boolean,android.view.ViewGroup)
android.widget.SimpleExpandableListAdapter.newGroupView(boolean,android.view.ViewGroup)
android.widget.SlidingDrawer$DrawerToggler.onClick(android.view.View)
android.widget.SlidingDrawer$SlidingHandler.handleMessage(android.os.Message)
android.widget.SlidingDrawer.<init>(android.content.Context,android.util.AttributeSet)
android.widget.SlidingDrawer.<init>(android.content.Context,android.util.AttributeSet,int)
android.widget.SlidingDrawer.animateClose(int)
android.widget.SlidingDrawer.animateOpen(int)
android.widget.SlidingDrawer.closeDrawer()
android.widget.SlidingDrawer.doAnimation()
android.widget.SlidingDrawer.incrementAnimation()
android.widget.SlidingDrawer.moveHandle(int)
android.widget.SlidingDrawer.onMeasure(int,int)
android.widget.SlidingDrawer.openDrawer()
android.widget.SlidingDrawer.performFling(int,float,boolean)
android.widget.SlidingDrawer.prepareContent()
android.widget.SlidingDrawer.prepareTracking(int)
android.widget.SlidingDrawer.setOnDrawerCloseListener(android.widget.SlidingDrawer$OnDrawerCloseListener)
android.widget.SlidingDrawer.setOnDrawerOpenListener(android.widget.SlidingDrawer$OnDrawerOpenListener)
android.widget.SlidingDrawer.setOnDrawerScrollListener(android.widget.SlidingDrawer$OnDrawerScrollListener)
android.widget.SlidingDrawer.stopTracking()
android.widget.Spinner$DropDownAdapter.<init>(android.widget.SpinnerAdapter)
android.widget.Spinner$DropDownAdapter.areAllItemsEnabled()
android.widget.Spinner$DropDownAdapter.getCount()
android.widget.Spinner$DropDownAdapter.getDropDownView(int,android.view.View,android.view.ViewGroup)
android.widget.Spinner$DropDownAdapter.getItem(int)
android.widget.Spinner$DropDownAdapter.getItemId(int)
android.widget.Spinner$DropDownAdapter.getItemViewType(int)
android.widget.Spinner$DropDownAdapter.getView(int,android.view.View,android.view.ViewGroup)
android.widget.Spinner$DropDownAdapter.getViewTypeCount()
android.widget.Spinner$DropDownAdapter.hasStableIds()
android.widget.Spinner$DropDownAdapter.isEmpty()
android.widget.Spinner$DropDownAdapter.isEnabled(int)
android.widget.Spinner$DropDownAdapter.registerDataSetObserver(android.database.DataSetObserver)
android.widget.Spinner$DropDownAdapter.unregisterDataSetObserver(android.database.DataSetObserver)
android.widget.Spinner.makeAndAddView(int)
android.widget.Spinner.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android.widget.Spinner.setPromptId(int)
android.widget.Spinner.setUpChild(android.view.View)
android.widget.TabHost$FactoryContentStrategy.<init>(android.widget.TabHost,java.lang.CharSequence,android.widget.TabHost$TabContentFactory)
android.widget.TabHost$FactoryContentStrategy.getContentView()
android.widget.TabHost$FactoryContentStrategy.tabClosed()
android.widget.TabHost$IntentContentStrategy.getContentView()
android.widget.TabHost$IntentContentStrategy.tabClosed()
android.widget.TabHost$LabelAndIconIndicatorStrategy.createIndicatorView()
android.widget.TabHost$LabelIndicatorStrategy.createIndicatorView()
android.widget.TabHost$TabSpec.setContent(android.widget.TabHost$TabContentFactory)
android.widget.TabHost$TabSpec.setContent(int)
android.widget.TabHost$ViewIdContentStrategy.getContentView()
android.widget.TabHost$ViewIdContentStrategy.tabClosed()
android.widget.TabHost$ViewIndicatorStrategy.createIndicatorView()
android.widget.TabHost.addTab(android.widget.TabHost$TabSpec)
android.widget.TabHost.clearAllTabs()
android.widget.TabHost.initTabHost()
android.widget.TabHost.invokeOnTabChangeListener()
android.widget.TabHost.onAttachedToWindow()
android.widget.TabHost.onDetachedFromWindow()
android.widget.TabHost.setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.widget.TabHost.setup()
android.widget.TabHost.setup(android.app.LocalActivityManager)
android.widget.TabWidget$TabClickListener.onClick(android.view.View)
android.widget.TabWidget.<init>(android.content.Context,android.util.AttributeSet)
android.widget.TabWidget.childDrawableStateChanged(android.view.View)
android.widget.TabWidget.dispatchDraw(android.graphics.Canvas)
android.widget.TabWidget.focusCurrentTab(int)
android.widget.TabWidget.getChildDrawingOrder(int,int)
android.widget.TabWidget.getChildTabViewAt(int)
android.widget.TabWidget.getTabCount()
android.widget.TabWidget.initTabWidget()
android.widget.TabWidget.onSizeChanged(int,int,int,int)
android.widget.TabWidget.setDividerDrawable(int)
android.widget.TabWidget.setLeftStripDrawable(android.graphics.drawable.Drawable)
android.widget.TabWidget.setLeftStripDrawable(int)
android.widget.TabWidget.setRightStripDrawable(int)
android.widget.TabWidget.setTabSelectionListener(android.widget.TabWidget$OnTabSelectionChanged)
android.widget.TableLayout$LayoutParams.<init>(android.view.ViewGroup$MarginLayoutParams)
android.widget.TableLayout$LayoutParams.setBaseAttributes(android.content.res.TypedArray,int,int)
android.widget.TableLayout$PassThroughHierarchyChangeListener.onChildViewAdded(android.view.View,android.view.View)
android.widget.TableLayout$PassThroughHierarchyChangeListener.onChildViewRemoved(android.view.View,android.view.View)
android.widget.TableLayout.addView(android.view.View)
android.widget.TableLayout.addView(android.view.View,int)
android.widget.TableLayout.addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android.widget.TableLayout.checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.widget.TableLayout.findLargestCells(int)
android.widget.TableLayout.generateDefaultLayoutParams()
android.widget.TableLayout.generateLayoutParams(android.view.ViewGroup$LayoutParams)
android.widget.TableLayout.initTableLayout()
android.widget.TableLayout.measureChildBeforeLayout(android.view.View,int,int,int,int,int)
android.widget.TableLayout.measureVertical(int,int)
android.widget.TableLayout.mutateColumnsWidth(android.util.SparseBooleanArray,boolean,int,int)
android.widget.TableLayout.onLayout(boolean,int,int,int,int)
android.widget.TableLayout.onMeasure(int,int)
android.widget.TableLayout.parseColumns(java.lang.String)
android.widget.TableLayout.requestRowsLayout()
android.widget.TableLayout.setColumnShrinkable(int,boolean)
android.widget.TableLayout.shrinkAndStretchColumns(int)
android.widget.TableLayout.trackCollapsedColumns(android.view.View)
android.widget.TableRow$ChildrenTracker.onChildViewAdded(android.view.View,android.view.View)
android.widget.TableRow$ChildrenTracker.onChildViewRemoved(android.view.View,android.view.View)
android.widget.TableRow$ChildrenTracker.setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
android.widget.TableRow$LayoutParams.setBaseAttributes(android.content.res.TypedArray,int,int)
android.widget.TableRow.getChildrenSkipCount(android.view.View,int)
android.widget.TableRow.getLocationOffset(android.view.View)
android.widget.TableRow.getNextLocationOffset(android.view.View)
android.widget.TableRow.initTableRow()
android.widget.TableRow.mapIndexAndColumns()
android.widget.TableRow.measureChildBeforeLayout(android.view.View,int,int,int,int,int)
android.widget.TableRow.measureNullChild(int)
android.widget.TextSwitcher.addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android.widget.TextSwitcher.setCurrentText(java.lang.CharSequence)
android.widget.TextSwitcher.setText(java.lang.CharSequence)
android.widget.TextView$Blink.<init>(android.widget.TextView)
android.widget.TextView$Blink.cancel()
android.widget.TextView$Blink.run()
android.widget.TextView$Blink.uncancel()
android.widget.TextView$BufferType.valueOf(java.lang.String)
android.widget.TextView$ChangeWatcher.afterTextChanged(android.text.Editable)
android.widget.TextView$ChangeWatcher.beforeTextChanged(java.lang.CharSequence,int,int,int)
android.widget.TextView$ChangeWatcher.onSpanAdded(android.text.Spannable,java.lang.Object,int,int)
android.widget.TextView$ChangeWatcher.onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)
android.widget.TextView$ChangeWatcher.onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)
android.widget.TextView$ChangeWatcher.onTextChanged(java.lang.CharSequence,int,int,int)
android.widget.TextView$CharWrapper.<init>([C,int,int)
android.widget.TextView$CharWrapper.charAt(int)
android.widget.TextView$CharWrapper.drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)
android.widget.TextView$CharWrapper.getChars(int,int,[C,int)
android.widget.TextView$CharWrapper.getTextWidths(int,int,[F,android.graphics.Paint)
android.widget.TextView$CharWrapper.length()
android.widget.TextView$CharWrapper.measureText(int,int,android.graphics.Paint)
android.widget.TextView$CharWrapper.set([C,int,int)
android.widget.TextView$CharWrapper.subSequence(int,int)
android.widget.TextView$CharWrapper.toString()
android.widget.TextView$ErrorPopup.fixDirection(boolean)
android.widget.TextView$ErrorPopup.update(int,int,int,int,boolean)
android.widget.TextView$Marquee.getGhostOffset()
android.widget.TextView$Marquee.handleMessage(android.os.Message)
android.widget.TextView$Marquee.isRunning()
android.widget.TextView$Marquee.isStopped()
android.widget.TextView$Marquee.resetScroll()
android.widget.TextView$Marquee.shouldDrawGhost()
android.widget.TextView$Marquee.shouldDrawLeftFade()
android.widget.TextView$Marquee.start(int)
android.widget.TextView$Marquee.stop()
android.widget.TextView$Marquee.tick()
android.widget.TextView$MenuHandler.onMenuItemClick(android.view.MenuItem)
android.widget.TextView.checkForRelayout()
android.widget.TextView.checkForResize()
android.widget.TextView.getBottomVerticalOffset(boolean)
android.widget.TextView.getErrorX()
android.widget.TextView.getInterestingRect(android.graphics.Rect,int,int,int,int)
android.widget.TextView.getTextColor(android.content.Context,android.content.res.TypedArray,int)
android.widget.TextView.getTextColors(android.content.Context,android.content.res.TypedArray)
android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
android.widget.TextView.setEditableFactory(android.text.Editable$Factory)
android.widget.TextView.setFilters(android.text.Editable,[Landroid.text.InputFilter;)
android.widget.TextView.setInputExtras(int)
android.widget.TextView.setTypefaceByIndex(int,int)
android.widget.TimePicker$SavedState.getHour()
android.widget.TimePicker$SavedState.getMinute()
android.widget.TimePicker$SavedState.writeToParcel(android.os.Parcel,int)
android.widget.Toast$TN.handleHide()
android.widget.Toast$TN.handleShow()
android.widget.Toast$TN.hide()
android.widget.Toast$TN.show()
android.widget.Toast.getService()
android.widget.Toast.makeText(android.content.Context,int,int)
android.widget.Toast.setText(int)
android.widget.ToggleButton.syncTextState()
android.widget.ToggleButton.updateReferenceToIndicatorDrawable(android.graphics.drawable.Drawable)
android.widget.VideoView.attachMediaController()
android.widget.VideoView.initVideoView()
android.widget.VideoView.isInPlaybackState()
android.widget.VideoView.openVideo()
android.widget.VideoView.release(boolean)
android.widget.VideoView.setVideoURI(android.net.Uri,java.util.Map)
android.widget.VideoView.toggleMediaControlsVisiblity()
android.widget.ViewAnimator.addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android.widget.ViewAnimator.initViewAnimator(android.content.Context,android.util.AttributeSet)
android.widget.ViewAnimator.setInAnimation(android.content.Context,int)
android.widget.ViewAnimator.setInAnimation(android.view.animation.Animation)
android.widget.ViewAnimator.setOutAnimation(android.content.Context,int)
android.widget.ViewAnimator.setOutAnimation(android.view.animation.Animation)
android.widget.ViewFlipper.updateRunning()
android.widget.ViewSwitcher.addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android.widget.ViewSwitcher.obtainView()
android.widget.ViewSwitcher.setFactory(android.widget.ViewSwitcher$ViewFactory)
android.widget.ZoomButtonsController$Container.<init>(android.widget.ZoomButtonsController,android.content.Context)
android.widget.ZoomButtonsController$Container.dispatchKeyEvent(android.view.KeyEvent)
android.widget.ZoomButtonsController.createContainer()
android.widget.ZoomButtonsController.dismissControlsDelayed(int)
android.widget.ZoomButtonsController.findViewForTouch(int,int)
android.widget.ZoomButtonsController.getOwnerViewRoot()
android.widget.ZoomButtonsController.isInterestingKey(int)
android.widget.ZoomButtonsController.onContainerKey(android.view.KeyEvent)
android.widget.ZoomButtonsController.onPostConfigurationChanged()
android.widget.ZoomButtonsController.refreshPositioningVariables()
android.widget.ZoomButtonsController.setTouchTargetView(android.view.View)
android.widget.ZoomControls.fade(int,float,float)
